(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    271517,       5491]
NotebookOptionsPosition[    254590,       5140]
NotebookOutlinePosition[    265223,       5353]
CellTagsIndexPosition[    265155,       5348]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Math Boot Camp: Volume Elements", "Title",
 CellChangeTimes->{{3.696836172185916*^9, 3.6968361777671585`*^9}}],

Cell[TextData[StyleBox["You can skip this boot camp if you can answer the \
following questions:",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.696824142740185*^9, 3.6968241828211575`*^9}, 
   3.696828090740285*^9, 3.696828869629264*^9}],

Cell[TextData[{
 StyleBox["Example",
  FontVariations->{"Underline"->True}],
 "\nTo prove that the volume of a sphere of radius ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["4", "3"], "\[Pi]", " ", 
    SuperscriptBox["R", "3"]}], TraditionalForm]]],
 ", we can compute the following integral,"
}], "Text",
 CellChangeTimes->{{3.6968288713240004`*^9, 3.6968288981904097`*^9}, {
  3.6968362657929554`*^9, 3.6968362840621014`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    RowBox[{"2", "\[Pi]"}]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "R"], 
     RowBox[{
      SuperscriptBox["r", "2"], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"\[DifferentialD]", "r"}], 
      RowBox[{"\[DifferentialD]", "\[Theta]"}], 
      RowBox[{"\[DifferentialD]", "\[Phi]"}]}]}]}]}], 
  TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.6968288991241274`*^9, 3.6968289273632355`*^9}}],

Cell[TextData[{
 "Why does the factor ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["r", "2"], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], TraditionalForm]]],
 " appear in the integrand?"
}], "Text",
 CellChangeTimes->{{3.6968289316092987`*^9, 3.6968289447409344`*^9}}],

Cell[TextData[{
 StyleBox["Example",
  FontVariations->{"Underline"->True}],
 "\nIn the same spirit as the problem above, we want to prove that the \
surface area of a sphere of radius ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],ExpressionUUID->
  "84b444cb-63f7-44ea-8e3f-821cafdf3375"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox["R", "2"]}], TraditionalForm]],ExpressionUUID->
  "255ab719-29a0-4a78-816c-8cc9d7aeae6d"],
 ". Set up the appropriate integral, evaluate it, and ensure that you get the \
proper answer."
}], "Text",
 CellChangeTimes->{{3.6968289465796394`*^9, 
  3.696829004343136*^9}},ExpressionUUID->"ff245f0d-16c8-48ff-af8f-\
c5899502f6e7"],

Cell[CellGroupData[{

Cell["2D Coordinate Systems", "Subsection",
 CellChangeTimes->{{3.6968359442889094`*^9, 3.696835946925979*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", "0.1"}], ";", 
  RowBox[{"s2", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "=", "0.6"}], ",", 
       RowBox[{"y", "=", "0.5"}], ",", 
       RowBox[{"dx", "=", "0.1"}], ",", 
       RowBox[{"dy", "=", "0.1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"RegionPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "<", "0"}], "&&", 
          RowBox[{"yy", "<", "0"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"xx", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"yy", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"0.85", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "285"}], ",", 
         RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"y", ",", 
                  RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)\>\""}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"y", "+", "dy"}], ",", 
                  RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)+\[DifferentialD]\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)\>\""}]}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)\>\""}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "+", "dx"}], ",", 
                  RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)+\[DifferentialD]\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)\>\""}]}], "}"}]}], "}"}], ",", "None"}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Cartesian Coordinates\>\""}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                   Rational[207, 256], 
                   Rational[217, 256], 
                   Rational[233, 256]], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.5390625, 0.5651041666666666, 0.6067708333333334],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               "RGBColor[{207/256, 217/256, 233/256}]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[207, 256], 
                    Rational[217, 256], 
                    Rational[233, 256]]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[{
               Rational[207, 256], 
               Rational[217, 256], 
               Rational[233, 256]}],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "+", "dx"}], ",", 
                RowBox[{"y", "+", "dy"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "+", "dx"}], ",", "y"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "+", "dx"}], ",", 
                 RowBox[{"y", "+", "dy"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"y", "+", "dy"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "+", "dx"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "+", "dx"}], ",", "1"}], "}"}]}], "}"}]}], 
              "}"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "y"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "y"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"y", "+", "dy"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"y", "+", "dy"}]}], "}"}]}], "}"}]}], "}"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "@", "\"\<\[DifferentialD]\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"y", "-", "0.04"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "@", "\"\<\[DifferentialD]\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "-", "0.04"}], ",", 
              RowBox[{"y", "+", 
               RowBox[{"dy", "/", "2"}]}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "[", 
             RowBox[{"\"\<\[DifferentialD]\!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\)\>\"", ",", "15"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"y", "+", 
               RowBox[{"dy", "/", "2"}]}]}], "}"}]}], "]"}]}], "}"}], "]"}]}],
       "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", "0.1"}], ";", 
  RowBox[{"s2", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"RegionPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["0.65", "2"], "<", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "<", 
         SuperscriptBox["0.75", "2"]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], "<", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"y", ",", "x"}], "]"}], "<", 
         RowBox[{
          RowBox[{"\[Pi]", "/", "4"}], "+", "s"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"font", "[", 
            RowBox[{"#", ",", "Italic"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ")"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"0.85", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "270"}], ",", 
       RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.65", ",", 
                RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)\>\""}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.75", ",", 
                RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)+\[DifferentialD]\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)\>\""}]}], "}"}]}], "}"}], ",", "None"}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Polar Coordinates\>\""}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}], "]"}], ","}],
         "*)"}], 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.65", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Pi]", "/", "4"}], "+", "s"}], "]"}]}], ",", 
             RowBox[{"0.65", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Pi]", "/", "4"}], "+", "s"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.65", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], "]"}]}], ",", 
             RowBox[{"0.65", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], "]"}]}]}], "}"}]}], 
          "}"}], "]"}], ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "0.065", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], ",", "0"}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "0.65", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], ",", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "4"}], "+", "s"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "0.75", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], ",", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "4"}], "+", "s"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.65", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], "]"}]}], ",", 
               RowBox[{"0.65", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], "]"}]}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.75", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], "]"}]}], ",", 
               RowBox[{"0.75", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "4"}], "-", "s"}], "]"}]}]}], "}"}]}],
             "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.65", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "4"}], "+", "s"}], "]"}]}], ",", 
               RowBox[{"0.65", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "4"}], "+", "s"}], "]"}]}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.75", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "4"}], "+", "s"}], "]"}]}], ",", 
               RowBox[{"0.75", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "4"}], "+", "s"}], "]"}]}]}], "}"}]}],
             "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "0.65", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"\[Pi]", "/", "4"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "0.75", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"\[Pi]", "/", "4"}]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"font", "@", "\"\<\[Theta]\>\""}], ",", 
          RowBox[{"{", 
           RowBox[{"0.09", ",", "0.028"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"font", "[", 
           RowBox[{"\"\<\[DifferentialD]\[Theta]\>\"", ",", "12"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.15", ",", "0.145"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\[ThinSpace]\",
FontSlant->\"Italic\"]\)\[DifferentialD]\[Theta]\>\""}], ",", 
          RowBox[{"0.6", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Pi]", "/", "4"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "}"}]}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"font", "@", "\"\<\[DifferentialD]\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
          RowBox[{"0.705", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "4"}], "-", "s2"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "4"}], "-", "s2"}], "]"}]}], "}"}]}]}], 
         "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"font", "[", 
           RowBox[{"\"\<\[DifferentialD]\!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\)\>\"", ",", "15"}], "]"}], ",", 
          RowBox[{"0.7", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Pi]", "/", "4"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "}"}]}]}], "]"}]}], "}"}],
       "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"centerPlot", "@", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"plot1", ",", "plot2"}], "}"}], "}"}], ",", 
    RowBox[{"Spacings", "\[Rule]", "5"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Top"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6926537768657603`*^9, 3.6926538186792045`*^9}, {
  3.692653864886672*^9, 3.692653927113899*^9}, {3.692653979438088*^9, 
  3.6926543424610276`*^9}, {3.692654439117509*^9, 3.6926545561182814`*^9}, {
  3.6926545947664657`*^9, 3.692654662968255*^9}, {3.692665222823644*^9, 
  3.6926652569846354`*^9}, {3.696830930355526*^9, 3.6968313257280207`*^9}, {
  3.6968313663305173`*^9, 3.6968313845560436`*^9}, {3.69683564271238*^9, 
  3.6968357213334603`*^9}, {3.6968357521212435`*^9, 3.696835752293165*^9}, {
  3.6968358046258097`*^9, 3.6968358695582757`*^9}, {3.6968359046930127`*^9, 
  3.6968359101947064`*^9}, {3.696835964102696*^9, 3.696835978024617*^9}}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      GraphicsBox[{{}, {
         {RGBColor[
           NCache[{
             Rational[207, 256], 
             Rational[217, 256], 
             Rational[233, 256]}, {0.80859375, 0.84765625, 0.91015625}]], 
          RectangleBox[{0.6, 0.5}, {0.7, 0.6}]}, 
         {Thickness[Large], 
          LineBox[{{0.6, 0.5}, {0.7, 0.5}, {0.7, 0.6}, {0.6, 0.6}, {0.6, 
           0.5}}]}, 
         {Dashing[{Small, Small}], 
          LineBox[{{{0.6, 0}, {0.6, 1}}, {{0.7, 0}, {0.7, 1}}}], 
          LineBox[{{{0, 0.5}, {1, 0.5}}, {{0, 0.6}, {1, 0.6}}}]}, InsetBox[
          
          StyleBox["\<\"\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"x\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>",
           StripOnInput->False,
           FontFamily->"Times",
           FontSize->14], {0.65, 0.46}], InsetBox[
          
          StyleBox["\<\"\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"y\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>",
           StripOnInput->False,
           FontFamily->"Times",
           FontSize->14], {0.5599999999999999, 0.55}], InsetBox[
          
          StyleBox["\<\"\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"A\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>",
           StripOnInput->False,
           FontFamily->"Times",
           FontSize->15], {0.65, 0.55}]}},
       AspectRatio->1,
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{Automatic, Automatic},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{{{0.5, 
            FormBox[
             StyleBox[
             "\"\\!\\(\\*\\nStyleBox[\\\"y\\\",\\nFontSlant->\\\"Italic\\\"]\\\
)\"", 14, FontFamily -> "Times", StripOnInput -> False], TraditionalForm]}, {
           0.6, 
            FormBox[
             StyleBox[
             "\"\\!\\(\\*\\nStyleBox[\\\"y\\\",\\nFontSlant->\\\"Italic\\\"]\\\
)+\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"y\\\",\\nFontSlant->\\\"Italic\\\"]\
\\)\"", 14, FontFamily -> "Times", StripOnInput -> False], TraditionalForm]}},
           None}, {{{0.6, 
            FormBox[
             StyleBox[
             "\"\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"]\\\
)\"", 14, FontFamily -> "Times", StripOnInput -> False], TraditionalForm]}, {
           0.7, 
            FormBox[
             StyleBox[
             "\"\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"]\\\
)+\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"]\
\\)\"", 14, FontFamily -> "Times", StripOnInput -> False], TraditionalForm]}},
           None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->285,
       Method->{
        "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
         "AxesInFront" -> True},
       PlotLabel->FormBox["\"Cartesian Coordinates\"", TraditionalForm],
       PlotRange->{{0., 0.85}, {0., 0.85}},
       PlotRangeClipping->True,
       PlotRangePadding->{{None, None}, {None, None}},
       Ticks->{Automatic, Automatic}], 
      GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx1VF1IU2EYXpFhF9Hfja1u+tHmQmcxL5bQGwwkImtqRUidQCqsU0o3+VNE
Y7lilpitFmKLhZQpekgvotACYTYW0fJCYW47PxLESqhdmJXOJvR8B75wMB6+
5zzP+33vd573bKmuqziz3GAwCJn/IpYfsfgmHAkCjh+tsXonFLa+scz2aMit
0VI6HnlfemHxJ1NXt1AoBWIMwff1RmpMksrWPI96vJ8/B/8cfFN6tNreGGfI
1wWCH7neeUiwq//5wD8cX+FKGTUy9fjeiyaZIXgg6qKfmbk7QXcqyvQfKmZ+
GcOTlDRbjWFRYWvo4AO/lI+/NyD6hw7nBw8deF6H/XAvWPtzpB/GJoWdE322
eoJxxzX93tP5ka3hFr2fXKd52D0gs1zUheorBVeCfg+cLG0s0/MCf/fLnSEx
R39PRWOBoHhLo8iGN0GxQaNkg+1LsTXBEHye2Ty/0KHSi97eLEM4xhD8z2SW
SbIprK92fzjqKNTzhT743EHX/nwkV3Kqeo7/9cnnEDr0gefYF+cYXXuwJXU+
zvBesv6VO6zS573PHMImhSH46LmLu7w3NXrqGq01HU6QUqZtk+5qlD3t7Bo6
m7mPPadD4qzCEDr4oIMP98rPwZ/y/ceErzGG4IuEq4OB23Eazuupsq/T6ONY
9m6vRaMHTx7nS+UyXf7uLBOm9HnGPAzED+RLTpn5UAfvHTlAHdRFTqBDDvsL
Stom9unfF+yLfbAvdPyclkyHJh3+OMslP3dvZy+R1xel483zp+yrZZorONGa
6s/M4RrbDqlPoUrPN9lRqucbcwEf6sCHOvChTmlQqzVRgjo2rl9paItR1YVV
U8XbVeq8svmTmB2jCnrXnPIoZL5vee2uVpkOPujggw6+v9bHOtU=
         "], {{
           {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
            Opacity[0.3], EdgeForm[None], 
            GraphicsGroupBox[{
              PolygonBox[{{25, 13, 7}, {32, 29, 2}, {11, 7, 1}, {27, 12, 8}, {
               35, 34, 16}, {8, 1, 4}, {29, 4, 1}, {28, 26, 8}, {1, 7, 2}, {
               33, 32, 9}, {24, 23, 7}, {17, 19, 4}, {22, 20, 16}, {15, 11, 
               1}, {8, 12, 1}, {7, 13, 2}, {30, 10, 4}, {19, 14, 4}, {18, 16, 
               2}, {12, 15, 1}, {10, 17, 4}, {13, 18, 2}, {21, 17, 10}, {14, 
               8, 4}, {54, 93, 14}, {14, 28, 8}, {11, 24, 7}, {23, 25, 7}, {
               26, 27, 8}, {2, 29, 1}, {30, 31, 10}, {30, 29, 5}, {29, 30, 
               4}, {31, 30, 5}, {29, 32, 5}, {32, 33, 5}, {17, 21, 6}, {20, 
               35, 16}, {20, 22, 3}, {35, 20, 9}, {34, 35, 9}, {32, 34, 9}, {
               81, 82, 23}, {16, 34, 2}, {78, 74, 21}, {92, 51, 12}, {34, 32, 
               2}, {68, 67, 17}, {90, 52, 13}, {49, 89, 11}, {93, 53, 14}, {
               48, 59, 10}, {50, 92, 12}, {58, 56, 9}, {85, 86, 26}, {86, 39, 
               26}, {61, 40, 3}, {60, 65, 3}, {89, 37, 11}, {69, 71, 20}, {44,
                73, 3}, {70, 58, 9}, {55, 62, 5}, {38, 90, 13}, {79, 69, 
               20}, {64, 43, 6}, {65, 61, 3}, {41, 45, 6}, {63, 41, 6}, {75, 
               64, 6}, {74, 76, 21}, {66, 72, 16}, {43, 63, 6}, {82, 36, 
               23}, {73, 60, 3}, {59, 77, 10}, {62, 42, 5}}], 
              PolygonBox[{{56, 94, 33, 9}, {40, 79, 20, 3}, {67, 47, 19, 
               17}, {52, 46, 18, 13}, {45, 68, 17, 6}, {72, 80, 22, 16}, {42, 
               91, 31, 5}, {71, 70, 9, 20}, {46, 66, 16, 18}, {37, 83, 24, 
               11}, {76, 75, 6, 21}, {77, 78, 21, 10}, {80, 44, 3, 22}, {57, 
               49, 11, 15}, {36, 84, 25, 23}, {47, 54, 14, 19}, {91, 48, 10, 
               31}, {39, 87, 27, 26}, {87, 50, 12, 27}, {84, 38, 13, 25}, {51,
                57, 15, 12}, {83, 81, 23, 24}, {88, 85, 26, 28}, {53, 88, 28, 
               14}, {94, 55, 5, 33}}]}]}, {}, {}, {}, {}}, 
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
           LineBox[{81, 82, 36, 84, 38, 90, 52, 46, 66, 72, 80, 44, 73, 60, 
            65, 61, 40, 79, 69, 71, 70, 58, 56, 94, 55, 62, 42, 91, 48, 59, 
            77, 78, 74, 76, 75, 64, 43, 63, 41, 45, 68, 67, 47, 54, 93, 53, 
            88, 85, 86, 39, 87, 50, 92, 51, 57, 49, 89, 37, 83, 81}]}}], {
         LineBox[{{0.4114378493400229, 0.5032086010100152}, {0, 0}, {
           0.5032086010100152, 0.4114378493400228}}], 
         CircleBox[{0, 0}, 0.065, {0.6853981633974483, 0}], 
         {Thickness[Large], 
          CircleBox[{0, 0}, 0.65, {0.6853981633974483, 0.8853981633974483}], 
          CircleBox[{0, 0}, 0.75, {0.6853981633974483, 0.8853981633974483}], 
          LineBox[{{0.5032086010100152, 0.4114378493400228}, {
           0.5806253088577098, 0.47473598000771866`}}], 
          LineBox[{{0.4114378493400229, 0.5032086010100152}, {
           0.4747359800077187, 0.5806253088577098}}]}, 
         {Dashing[{Small, Small}], 
          CircleBox[{0, 0}, 0.65, 
           NCache[{0, Rational[1, 4] Pi}, {0, 0.7853981633974483}]], 
          CircleBox[{0, 0}, 0.75, 
           NCache[{0, Rational[1, 4] Pi}, {0, 0.7853981633974483}]]}, InsetBox[
          StyleBox["\<\"\[Theta]\"\>",
           StripOnInput->False,
           FontFamily->"Times",
           FontSize->14], {0.09, 0.028}], InsetBox[
          StyleBox["\<\"\[DifferentialD]\[Theta]\"\>",
           StripOnInput->False,
           FontFamily->"Times",
           FontSize->12], {0.15, 0.145}], InsetBox[
          
          StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"\[ThinSpace]\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)\[DifferentialD]\[Theta]\"\>",
           StripOnInput->False,
           FontFamily->"Times",
           FontSize->14], {0.42426406871192845, 0.42426406871192845}], 
         InsetBox[
          
          StyleBox["\<\"\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"r\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>",
           StripOnInput->False,
           FontFamily->"Times",
           FontSize->14], {0.5674089930181986, 0.41841610227388937}], InsetBox[
          
          StyleBox["\<\"\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"A\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>",
           StripOnInput->False,
           FontFamily->"Times",
           FontSize->15], {0.4949747468305832, 0.4949747468305832}]}},
       AspectRatio->1,
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{Automatic, Automatic},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"y\"", 14, FontFamily -> "Times", Italic, StripOnInput -> False],
            TraditionalForm], None}, {
          FormBox[
           StyleBox[
           "\"x\"", 14, FontFamily -> "Times", Italic, StripOnInput -> False],
            TraditionalForm], None}},
       FrameTicks->{{None, None}, {{{0.65, 
            FormBox[
             StyleBox[
             "\"\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"]\\\
)\"", 14, FontFamily -> "Times", StripOnInput -> False], TraditionalForm]}, {
           0.75, 
            FormBox[
             StyleBox[
             "\"\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"]\\\
)+\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"]\
\\)\"", 14, FontFamily -> "Times", StripOnInput -> False], TraditionalForm]}},
           None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->270,
       Method->{
        "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
         "AxesInFront" -> True},
       PlotLabel->FormBox["\"Polar Coordinates\"", TraditionalForm],
       PlotRange->{{0., 0.85}, {0., 0.85}},
       PlotRangeClipping->True,
       PlotRangePadding->{{None, None}, {None, None}},
       Ticks->{Automatic, Automatic}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Rows" -> {{Top}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{5}}}],
   "Grid"],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.696835845121026*^9, 3.696835869892044*^9}, {
  3.696835905037833*^9, 3.696835910441182*^9}, {3.696835969803944*^9, 
  3.696835978383935*^9}}]
}, {2}]],

Cell[CellGroupData[{

Cell["2D Cartesian Coordinates", "Subsubsection",
 CellChangeTimes->{{3.696828706226617*^9, 3.6968287117787414`*^9}}],

Cell[TextData[{
 "The basic question we want to answer is as follows. When computing 2D \
integrals in Cartesian coordinates, we are familiar with the area element ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[DifferentialD]", "x"}], 
    RowBox[{"\[DifferentialD]", "y"}]}], TraditionalForm]]],
 ", such as when we write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Integral]", 
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}]}], TraditionalForm]]],
 ". But where does ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[DifferentialD]", "x"}], 
    RowBox[{"\[DifferentialD]", "y"}]}], TraditionalForm]]],
 " come from? We will first answer this question in Cartesian coordinates, \
and then use this same methodology to find the area and volume elements in \
other 2D and 3D coordinate systems."
}], "Text",
 CellChangeTimes->{{3.631673001230376*^9, 3.6316731678899083`*^9}, {
   3.692653328613554*^9, 3.692653331020241*^9}, 3.696830894159541*^9, {
   3.696836000417156*^9, 3.6968360310082226`*^9}, 3.69683607997246*^9}],

Cell[TextData[{
 "If we consider a generic point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]],
 " and infinitesimally displace it in the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "-direction and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 "-direction by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "x"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "y"}], TraditionalForm]]],
 ", respectively, we find the points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"\[DifferentialD]", "x"}]}], ",", "y"}], ")"}], 
   TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"y", "+", 
      RowBox[{"\[DifferentialD]", "y"}]}]}], ")"}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"\[DifferentialD]", "x"}]}], ",", 
     RowBox[{"y", "+", 
      RowBox[{"\[DifferentialD]", "y"}]}]}], ")"}], TraditionalForm]]],
 " as shown in the diagram above. What is the area of the region encompassed \
by these points? Simply ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[DifferentialD]", "x"}], 
    RowBox[{"\[DifferentialD]", "y"}]}], TraditionalForm]]],
 "!"
}], "Text",
 CellChangeTimes->{{3.631673001230376*^9, 3.6316731678899083`*^9}, {
  3.692653328613554*^9, 3.692653331020241*^9}, {3.6968361031059527`*^9, 
  3.6968361239648695`*^9}}],

Cell[TextData[{
 "Cartesian coordinate area element",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{"r", 
     RowBox[{"\[DifferentialD]", "r"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}], TraditionalForm]]]
}], "TextNumbered",
 CellChangeTimes->{{3.631673316841428*^9, 3.6316733269070034`*^9}, {
  3.6316734056825094`*^9, 3.631673407462611*^9}, {3.6968316016279936`*^9, 
  3.6968316034158792`*^9}}],

Cell["\<\
The procedure is the same in every other coordinate system. You identify \
which variables you are going to vary and you infinitesimally vary them all \
one at a time. The area/volume of the resulting shape will be the desired \
infinitesimal area/volume element in that coordinate system.\
\>", "Text",
 CellChangeTimes->{{3.6968313934253387`*^9, 3.6968314452232494`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["2D Polar Coordinates", "Subsubsection",
 CellChangeTimes->{{3.696828706226617*^9, 3.6968287117787414`*^9}, {
  3.6968304981502004`*^9, 3.6968304989712477`*^9}}],

Cell[TextData[{
 "Consider a generic point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"r", ",", "\[Theta]"}], ")"}], TraditionalForm]]],
 " in polar coordinates. As in the case of Cartesian coordinates, we will \
vary both of these coordinates to obtain the four points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"r", ",", "\[Theta]"}], ")"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"r", "+", 
      RowBox[{"\[DifferentialD]", "r"}]}], ",", "\[Theta]"}], ")"}], 
   TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"r", ",", 
     RowBox[{"\[Theta]", "+", 
      RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}], ")"}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"r", "+", 
      RowBox[{"\[DifferentialD]", "r"}]}], ",", 
     RowBox[{"\[Theta]", "+", 
      RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}], ")"}], TraditionalForm]]],
 " as shown in the diagram above. In the limit when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "\[Theta]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "r"}], TraditionalForm]]],
 " are infinitesimals, the area element becomes a rectangle, and hence its \
area equals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[DifferentialD]", "r"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"r", 
       RowBox[{"\[DifferentialD]", "\[Theta]"}]}], ")"}]}], "=", 
    RowBox[{"r", " ", 
     RowBox[{"\[DifferentialD]", "r"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}], TraditionalForm]]],
 ". Thus,"
}], "Text",
 CellChangeTimes->{{3.696830528483801*^9, 3.6968305316949263`*^9}, {
   3.69683144744471*^9, 3.6968315155039797`*^9}, 3.696831562696232*^9, {
   3.6968361273796363`*^9, 3.696836135167612*^9}}],

Cell[TextData[{
 "polar coordinate area element",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{"r", 
     RowBox[{"\[DifferentialD]", "r"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}], TraditionalForm]]]
}], "TextNumbered",
 CellChangeTimes->{{3.631673316841428*^9, 3.6316733269070034`*^9}, {
  3.6316734056825094`*^9, 3.631673407462611*^9}},
 CellTags->"eq1"],

Cell[TextData[{
 "Note that the length of the inner curved segment cannot be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "\[Theta]"}], TraditionalForm]]],
 ", since both \[Theta] and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "\[Theta]"}], TraditionalForm]]],
 " are angles and do not have the units of length. Both ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "r"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", " ", 
    RowBox[{"\[DifferentialD]", "\[Theta]"}]}], TraditionalForm]]],
 " have the correct units of length. "
}], "Text",
 CellChangeTimes->{{3.6968315324367886`*^9, 3.6968315574151487`*^9}, {
  3.696831613778572*^9, 3.6968316640387845`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D Cartesian Coordinates", "Subsection",
 CellChangeTimes->{{3.696828706226617*^9, 3.696828709820871*^9}}],

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s blast our way into 3D. As in 2D, we will begin \
with the simple Cartesian coordinate system. Given the coordinate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "z"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we now infinitesimally vary each coordinate to obtain the eight new \
points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "z"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"\[DifferentialD]", "x"}]}], ",", "y", ",", "z"}], ")"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"y", "+", 
      RowBox[{"\[DifferentialD]", "y"}]}], ",", "z"}], ")"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", 
     RowBox[{"z", "+", 
      RowBox[{"\[DifferentialD]", "z"}]}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"\[DifferentialD]", "x"}]}], ",", 
     RowBox[{"y", "+", 
      RowBox[{"\[DifferentialD]", "y"}]}], ",", "z"}], ")"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"\[DifferentialD]", "x"}]}], ",", "y", ",", 
     RowBox[{"z", "+", 
      RowBox[{"\[DifferentialD]", "z"}]}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"y", "+", 
      RowBox[{"\[DifferentialD]", "y"}]}], ",", 
     RowBox[{"z", "+", 
      RowBox[{"\[DifferentialD]", "z"}]}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"\[DifferentialD]", "x"}]}], ",", 
     RowBox[{"y", "+", 
      RowBox[{"\[DifferentialD]", "y"}]}], ",", 
     RowBox[{"z", "+", 
      RowBox[{"\[DifferentialD]", "z"}]}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". As you can guess, these form a cube with side lengths ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "x"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "y"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "z"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6968317244846315`*^9, 3.696831741703042*^9}, {
  3.6968327626283717`*^9, 3.6968328559642596`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "=", "0.4"}], ",", 
      RowBox[{"y", "=", "0.3"}], ",", 
      RowBox[{"z", "=", "0.6"}], ",", 
      RowBox[{"dx", "=", "0.2"}], ",", 
      RowBox[{"dy", "=", "0.2"}], ",", 
      RowBox[{"dz", "=", "0.2"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "[", 
             RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "0.05"}], ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "[", "\"\<\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)+\[DifferentialD]\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "+", "dx"}], ",", 
              RowBox[{"-", "0.07"}], ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "[", 
             RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05"}], ",", "y", ",", "0.02"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "[", "\"\<\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)+\[DifferentialD]\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", 
              RowBox[{"y", "+", "dy"}], ",", "0.03"}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "[", 
             RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "0", ",", "z"}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "[", "\"\<\!\(\*
StyleBox[\"z\",
FontSlant->\"Italic\"]\)+\[DifferentialD]\!\(\*
StyleBox[\"z\",
FontSlant->\"Italic\"]\)\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "0", ",", 
              RowBox[{"z", "+", "dz"}]}], "}"}]}], "]"}], ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "+", "dx"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "+", "dx"}], ",", "1", ",", "0"}], "}"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "z"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "z"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"z", "+", "dz"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", 
                 RowBox[{"z", "+", "dz"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "y", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "y", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"y", "+", "dy"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"y", "+", "dy"}], ",", "0"}], "}"}]}], "}"}]}], 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "+", "dx"}], ",", "y", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "+", "dx"}], ",", "y", ",", "z"}], "}"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"y", "+", "dy"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"y", "+", "dy"}], ",", "z"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "+", "dx"}], ",", 
                  RowBox[{"y", "+", "dy"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "+", "dx"}], ",", 
                  RowBox[{"y", "+", "dy"}], ",", "z"}], "}"}]}], "}"}]}], 
             "*)"}], "}"}], "]"}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "+", "dx"}], ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "+", "dx"}], ",", 
                  RowBox[{"y", "+", "dy"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "+", "dx"}], ",", 
                  RowBox[{"y", "+", "dy"}], ",", 
                  RowBox[{"z", "+", "dz"}]}], "}"}]}], "}"}]}], "}"}], 
            "]"}]}], "*)"}], "}"}], ",", 
        RowBox[{"Cuboid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "dx"}], ",", 
            RowBox[{"y", "+", "dy"}], ",", 
            RowBox[{"z", "+", "dz"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"font", "[", "\"\<\[DifferentialD]\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", 
             RowBox[{"dx", "/", "2"}]}], ",", "y", ",", 
            RowBox[{"z", "-", "0.05"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"font", "[", "\"\<\[DifferentialD]\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "dx", "+", "0.05"}], ",", 
            RowBox[{"y", "+", 
             RowBox[{"dy", "/", "2"}]}], ",", "z"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"font", "[", "\"\<\[DifferentialD]\!\(\*
StyleBox[\"z\",
FontSlant->\"Italic\"]\)\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "-", "0.05"}], ",", "y", ",", 
            RowBox[{"z", "+", 
             RowBox[{"dz", "/", "2"}]}]}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"260.`", ",", "260.`"}], "}"}]}], ",", 
      RowBox[{"ViewAngle", "\[Rule]", "0.3351431148932378`"}], ",", 
      RowBox[{"ViewCenter", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.5`", ",", "0.5`", ",", "0.5`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.6214836879237052`", ",", "0.621087776438128`"}], "}"}]}],
         "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.930457678989467`", ",", 
         RowBox[{"-", "3.0757353662129816`"}], ",", "1.0602360419435992`"}], 
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.696831889285137*^9, 3.696832103428561*^9}, {
  3.6968321372668*^9, 3.696832650106*^9}, {3.6968326823335886`*^9, 
  3.6968327561519094`*^9}}],

Cell[BoxData[
 PanelBox[
  Graphics3DBox[{
    Line3DBox[{{{0, 0, 0}, {1, 0, 0}}, {{0, 0, 0}, {0, 1, 0}}, {{0, 0, 0}, {0,
      0, 1}}}], 
    {GrayLevel[0.5], Text3DBox[
      StyleBox["\<\"x\"\>",
       StripOnInput->False,
       FontFamily->"Times",
       FontSize->14,
       FontSlant->Italic], {0.4, -0.05, 0}], Text3DBox[
      StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\
\"]\\)+\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)\"\>",
       StripOnInput->False,
       FontFamily->"Times",
       FontSize->14], {0.6000000000000001, -0.07, 0}], Text3DBox[
      StyleBox["\<\"y\"\>",
       StripOnInput->False,
       FontFamily->"Times",
       FontSize->14,
       FontSlant->Italic], {-0.05, 0.3, 0.02}], Text3DBox[
      StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"y\\\",\\nFontSlant->\\\"Italic\\\
\"]\\)+\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"y\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)\"\>",
       StripOnInput->False,
       FontFamily->"Times",
       FontSize->14], {-0.1, 0.5, 0.03}], Text3DBox[
      StyleBox["\<\"z\"\>",
       StripOnInput->False,
       FontFamily->"Times",
       FontSize->14,
       FontSlant->Italic], {-0.1, 0, 0.6}], Text3DBox[
      StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"z\\\",\\nFontSlant->\\\"Italic\\\
\"]\\)+\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"z\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)\"\>",
       StripOnInput->False,
       FontFamily->"Times",
       FontSize->14], {-0.1, 0, 0.8}], 
     {Dashing[{Small, Small}], 
      Line3DBox[{{{0.4, 0, 0}, {0.4, 1, 0}}, {{0.6000000000000001, 0, 0}, {
         0.6000000000000001, 1, 0}}, {{0, 0, 0.6}, {0, 1, 0.6}}, {{
         0, 0, 0.8}, {0, 1, 0.8}}, {{0, 0.3, 0}, {1, 0.3, 0}}, {{0, 0.5, 0}, {
         1, 0.5, 0}}}]}}, 
    CuboidBox[{0.4, 0.3, 0.6}, {0.6000000000000001, 0.5, 0.8}], Text3DBox[
     StyleBox["\<\"\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"x\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>",
      StripOnInput->False,
      FontFamily->"Times",
      FontSize->14], {0.5, 0.3, 0.5499999999999999}], Text3DBox[
     StyleBox["\<\"\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"y\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>",
      StripOnInput->False,
      FontFamily->"Times",
      FontSize->14], {0.6500000000000001, 0.4, 0.6}], Text3DBox[
     StyleBox["\<\"\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"z\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>",
      StripOnInput->False,
      FontFamily->"Times",
      FontSize->14], {0.35000000000000003`, 0.3, 0.7}]},
   Boxed->False,
   ImageSize->{260., 260.},
   ViewAngle->0.3351431148932378,
   ViewCenter->{{0.5, 0.5, 0.5}, {0.6214836879237052, 0.621087776438128}},
   ViewPoint->{0.930457678989467, -3.0757353662129816`, 1.0602360419435992`}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.6968327484911995`*^9, 3.6968327563706713`*^9}}]
}, {2}]],

Cell["\<\
Therefore, the volume element in 3D Cartesian coordinates is \
\>", "Text",
 CellChangeTimes->{{3.6968328576839666`*^9, 3.696832870024513*^9}}],

Cell[TextData[{
 "Cartesian coordinate volume element",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{
     RowBox[{"\[DifferentialD]", "x"}], 
     RowBox[{"\[DifferentialD]", "y"}], 
     RowBox[{"\[DifferentialD]", "z"}]}]}], TraditionalForm]]]
}], "TextNumbered",
 CellChangeTimes->{{3.631673316841428*^9, 3.6316733269070034`*^9}, {
  3.6316734056825094`*^9, 3.631673407462611*^9}, {3.6968328742244124`*^9, 
  3.6968328851656485`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D Spherical Coordinates", "Subsection",
 CellChangeTimes->{{3.696828664953169*^9, 3.69682866675324*^9}, {
  3.696830488881957*^9, 3.696830489272828*^9}}],

Cell[TextData[{
 "We now shift to spherical coordinates, we can compute the volume element by \
considering a generic point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"r", ",", "\[Phi]", ",", "\[Theta]"}], ")"}], TraditionalForm]]],
 " and looking at the volume element found by infinitesimally displacing its \
three coordinates by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "r"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "\[Phi]"}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "\[Theta]"}], TraditionalForm]]],
 ". As shown in the diagram below, the volume of this element equals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[DifferentialD]", "r"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"r", " ", 
       RowBox[{"\[DifferentialD]", "\[Theta]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"r", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"\[DifferentialD]", "\[Phi]"}]}], ")"}]}], "=", 
    RowBox[{
     SuperscriptBox["r", "2"], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"\[DifferentialD]", "r"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]"}], 
     RowBox[{"\[DifferentialD]", "\[Phi]"}]}]}], TraditionalForm]]],
 ". Thus, "
}], "Text",
 CellChangeTimes->{{3.63167352126912*^9, 3.6316736379827957`*^9}, {
  3.631674429309057*^9, 3.6316744776888247`*^9}, {3.6968328930847883`*^9, 
  3.696832900716278*^9}}],

Cell[TextData[{
 "spherical coordinate volume element",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       SuperscriptBox["r", "2"], 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"\[DifferentialD]", "r"}], 
       RowBox[{"\[DifferentialD]", "\[Theta]"}], 
       RowBox[{"\[DifferentialD]", "\[Phi]"}]}], TraditionalForm]]]], 
     "TextNumbered",
     CellChangeTimes->{{3.6316744801209636`*^9, 3.631674480183967*^9}}]}], 
   TraditionalForm]]]
}], "TextNumbered",
 CellChangeTimes->{{3.631673316841428*^9, 3.6316733269070034`*^9}, {
  3.6316734056825094`*^9, 3.631673407462611*^9}, {3.6316744932257133`*^9, 
  3.6316744993820653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  GraphicsBox[{
    TagBox[RasterBox[CompressedData["
1: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
HrA5PiYmxsPDQ+HsuIrrwloDAwO5HNtDhw6hBpqZmanLqrxSkpOTe/ToAeMH
DBhAKwoSRKmFlJQ98EGgEffv3xcy00uXLrVp02bnzp0lHpmVlQXzFMuFq7hu
dna2qalpYmKivCei+qESjhkzRmxtlBuIKRxwGO/k5CTM4DSCIFQNUlK5uHPn
DjzTtLQ0ITPNzMxEKz18+PASBz7BtpycHAWy4Cqu6+npuXHjRgVOhEPXtWtX
1MMNGzaIrY2KMHjwYBjfrVs3wQanEQShOpCSysuVK1dMTEyYte+EJDg4WFdX
NykpScYxHh4e58+flzdlruK6O3bsgKAofPqbN2+aNm2qra0dGRkptjAqwqhR
o/AcWVlZ0Vr3BFHaICVVgNOnT1taWnKydoFcJCQktG3bdu3atcUdsHnzZnkn
OXIV101JSTEwMFDSI7tx40aVKlVatGhx/fp1sYVRESZMmIBHSV9fX7CR3gRB
yMu3b9/e5vHo0aOHDx8mJibGx8fHxsaiYT927Ni+fft27969qRjWrVsXUBQW
FhaMknbu3Lnwr6tXry4uQTggyPHw4cPI/dy5c7AErd/DPOCvwUjFwozqwoED
Bzp27Cj8ezHIN/y+Pn36ZGZmFv719u3b+EmuBHv27InKo6RVEFAjIyNOVnff
tm0bamOvXr3EVkUFmTlzJuxHh0fIkd4EURr48uVLeno6JIYRvlOnTkGDtmzZ
AucCagVncPLkyWPGjEELiQYEigZ1M8uD+YD/zc3NLfLomceAAQNw8OjRo+FR
ent7I4V58+YhqRUrVhQnfFu3bt1XFN27d2eUtG/fvoV/DQsLKy7BVatWIccF
CxYgdx8fH1ji5eU1OA8HBwcYaW1tLbW8wP92dnY4hrmEiRMnIoWlS5cGBweH
hoYi0xMnTsTExKCs7t+///z588+fP4t9A4sGdxCXKcqITdzNVq1a5V8WnkEi
kci1KQxkS5l4rBQ3NzckpXw6DEycxM/PT2xVVJD58+draWm1bNlSyJHeBKF2
5ObmvnjxAv1/NGXoz8M7W7NmDTRl6tSpHh4e/fr169Kli1k+bGxsnJyc0GRB
a6ZMmTJr1ixoEJxERt0iIyMvXLjAOHQvX74UOGYoSnQX4gi/lXGrL1++DK92
//7927dvDwkJQcmgCZ02bRoMGzJkCDwsyK55Pjp16uTi4jJixAiUJJoseM04
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
IyOjYcOG6EucO3dONPHjGtwjbW3tZs2aSfecJcTl2bNn+vr6tMQuQUqqCly/
ft3c3Fzes4qL60pJTU3N75bWq1cv/69ubm7btm1jPl+7dq1q1aoVKlRYs2ZN
/qZ70qRJOLFjx47quAn1yZMnYbyZmZlYwscH69evR4fHwsKC5sWoCDExMahj
Hz58ENsQQkxISVUEb2/v4pZNKJLMzMzi4rr5YXa9ZGjQoIH0+02bNkmXhnj8
+DF+goyOHz++cNPdq1cvnOvl5aXARYkOU71Rt4WXPP6YPn06LmrUqFFily7x
H/bt22dnZ0d9m9IMKamKkJWVpaur+/z5c5bHu7u7b968ucTD0tLSpG7pL7/8
wnyZlJRkbGycnZ39PW/y6R9//FGuXDlnZ+ci2+2bN2+2a9fuh+LXR1JlPn/+
jKurVq3amTNnBNY7XsHNwh1Bd0jsAib+w/r16w0NDRMTE8U2hBAHUlLV4dSp
U05OTmyOPH78uL29PctkXV1dmVvcrFmz73lbqunr69+9e/d73uNfuXLl8uXL
d+7cWUa7HR8fX79+fS0trRMnTih8dWJx9uzZMmXKWFhYCCZzApCQkNC6detK
lSrxtBUCoQC4F3iyFi5cqI6vQgglISVVKYYMGXLw4EHZx7x7905HR4f9kNpn
z57VqFEDtxiuJf7s379/eHh4ZmZmnz598GWVKlUCAgJKbLqhR9BcOHcPHz5U
8hqFZ8yYMcxaEwJonGBERkbWrl27SZMmNPpIdcjJyZk7d665ufkthQYQEuoL
KalK8fr1a11d3U+fPsk4xt3dPTQ0VK5k3dzc4JdZWloGBwdDVuBa/vrrr7jp
LVu2vHz5Msume8uWLXBL//zzz8+fPyt3lUIDNxzXW7NmzQsXLvApbkKzceNG
3JHOnTuLXcDEP0hMTHR2dnZxcVHTbZUIBSAlVTU2bNjg4+NT3K9yxXWlvHr1
qmLFitbW1pBpY2Nj3O4KFSpMmTJF3qZ7/PjxOBdNhHKXKAIoN1jepUsXPhRN
RCZOnIjr8vb2FruAiYLcvHlz8ODB6Oeo4zsRQl5ISVWNb9++GRgYPH78uPBP
8sZ189OrVy+oJ2502bJlHRwc0FtWrOk2NzdHIqtWrVL6QoUGzRozbopTKRMf
KyurMmXKnD17VuwCJoogNTXVy8vL0NAwNDRUHedlEywhJVVBIiMj+/btW/h7
BeK6AI1tt27dyuQBp0zJlQquX7/+008/QY4vXbrExbUKx9u3bxs0aFCvXr24
uDiOREwliImJwUX9+uuvtI2pyvLq1atFixaZmJjguY6IiFDTXQsJGZCSqiY9
evSIjY3N/428cd3s7OzZs2c3atQINxcaamZmdujQIU6a7pMnT1asWLFGjRqv
X7/m+rr5Zd++fSiN4ub7qC8bN27EdfXv31/sAiZK4ObNm76+vgYGBqNHjz5/
/rzY5hCcQUqqmty5c8fY2Fj6J9wN9nFdKCYeVWbb7po1a44cORLax23THRwc
jMRhktoN+HdycoLlW7Zs4bZARAd3GdfF7d7xBE9IJJILFy6MGTMGz6mXl9fR
o0ela18TagopqcoyduxY6doL6MFu2LBBxsG5ublQB2tra2bCC5xQU1PTFStW
JCUl8dR0Dx8+HBm5ubkJUhic8fLly9q1a8NVv3HjBk8lIwoJCQm///47rote
xqkR6IjGxcXNmTPH1ta2W7duAQEBtD2BmkJKqrJkZGTA6fv8+XNUVJSdnV2R
x9y/fx93sFmzZsz23Mziunw4oYVJTk7W09NDjjt27BC4ZJSE2XNt8ODBfBeR
wISEhOC6JkyYIHYBE4rw5s2b3bt3Dx061MzMzNPT8+DBg2gBxDaKYAspqSqD
PqqPj0/r1q2leyCiEws3c+7cuZaWlnXq1ClbtizuXfny5Y2MjCZNmnTgwAEh
m+6LFy/CBuSekpIibkHJS6dOnbS0tMLDw4UsLgGoWLFi5cqVmXUgCfXlxo0b
s2fPtrGxQWfV3d1948aN5KuqOKSkqsyXL18gVW5ubr6+vhYWFvXr12ekk4nf
NmnSZMCAAcHBwdeuXROr6YYYwaSGDRuqV1Dx8ePHVatWbdmy5c2bN8UqOs5B
JUHF6Natm9ilS3BGTk7O1atXV6xY0bdv3/bt2zs4OCxcuPD8+fNoGcQ2jfgH
pKSqCfMEeXl5aWtrMzeoSpUqrVq1Gjhw4Lx583bu3IlfxW65/8OcOXNgngLr
RYgLihFmz5gxQ+zy4wBUBltb2woVKjRo0CAzM1PsoiX44smTJzt27Bg7dqyp
qamJiQnc1aCgoNjYWPXqx2okpKQqAjqZaA/Xr18/evRoPCYGBgZDhgz59ddf
9+/fr6WlpaOjI3ZrLYvu3bur3dYk6Kv8+eef1apVQ0MkdvkpBRyWevXqofwb
N25MC9qXHlCBk5KS/v7778mTJ3fu3Nnc3NzV1XXRokWRkZG0FLPwkJKKBbqR
MTEx6FIOHTrUwsLC2toaHmhISMiVK1eY91yQVAjr97wFGVR84saNGzd+/vln
+EQPHjwQu1zl4PTp00w4VOzyU5CoqKiWLVtWrFgRV+Hk5ETtZyknLS3t8OHD
8+fP79OnT8eOHXv27DlhwgS0IWfPnn316pXY1mk4pKTC8O7du7i4uM2bN/v6
+vbq1cvOzs7R0XHmzJl79uy5f/9+4ePzj9d9+/YtWssmTZqI3XLL4sSJE2XL
lm3WrJl6zTBltpxT5V5KkaBtRNerXLlyML59+/bR0dFiFyShcqBDji7uzp07
0bZDWy0tLW1sbNBvX7x48YEDB+7evUtLLXEIKSnnSCSS1NRUKMvy5cvhV6Jz
iEYP/cNp06ZBSaGnJa7q9unTp/zjdYGPjw/u0cqVK8VuwmXh5+cHI0eNGsVz
AXPJy5cvq1ev3rx5c7ELjxXJyckbNmywsrLS0tJCUZuamu7fv1/sIiTUhtzc
XAgoZHTBggWDBw9G/TEyMrK3t/f09Fy6dOnevXvj4+PpPbtikJIqQ1ZWFhq3
iIgIaNz48ePhZprk0b9//9mzZ4eHhyclJSkwyg43pcAS8cioatWqDRo0UOWx
prdv38azWaZMmVOnTnFXxrzj7++P+r9w4UKxy08WaP3c3d3r168PUyGjXbt2
RZdM7JIjNIE3b95cvXoVjRV8VfT8u3TpYmxsjEbMyclpypQpwcHBR48evXPn
Dq3CJBtSUjZADR8+fBgZGRkSEuLr6+vq6mpubo7KZmNjM2LEiPnz54eFhV26
dCk9PV35vJjAXeHv0dSrfoOP5r1GjRrVqlVTo3d2uLm//fYbeikJCQlil98/
QK8J9crNza1x48bMQ4qydXFxefv2rdhlRmg+aWlp58+f37p1q5+f39ChQ+3s
7Bg3AR/wp4+Pz+rVq/fv33/58uVnz57B2xXbXpEhJZXy4sWL+Pj4w4cPr127
FqUBiWS6Z2ZmZlZWVnAzZ8yYASU9ffr0o0ePeKo5nz59atu2LVS78E85OTk1
a9asVasWfwsAcsKOHTvglurr6/NRPjyxZ88ePALjx48Xu/D+zZUrV5YvXw6P
gBmRCw8U3TbrPNRrQBehkcA5hYt65syZ7du3L1q0aNy4cX369GE8CzSVDg4O
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
X1//5ZdfCjUaAHRMapWkTed16+rqKDrT09Nlj7SUpBSX9DhFp/yD1PdxSVpY
WGhqatreepRcLrpv3z7qWJu9AnCz6L/A8INRBconKVGH0BE2ScmYMWPoTRBw
QADoaNQnSZud1/X29g4KCqIu1d7engKIvmgpSbnHFT5w7N69u+zJBgYGDx8+
VL4eZZaLUps2evToadOmKXOtXQ4FKJVE7bPylYiKem3l52xtbW2LiopEradN
gidpdHT0smXLBBwQADoa9UnS6dOnK1yP6MCBAzY2NtxHn9yZOVyP2TRJuYZU
4X4llKr0YJ8+fbi/zp49Oy0tTZlKlFku2tjYuHHjRkpnClxlxpShaObWv7Tr
VWpi4cKFiYmJbGsQPEnp4I3HfAUAgIyaJOnPP/88dOhQ+UcKCwupJfzxxx8V
JkK51ZcKL6eopQepAx0ohzJUvvsLDw+n0dqsRJnloteuXRs8eLC/vz+PZarc
+pf2vkpNJCQk+Pn5sa1B8CQlffv2Vef7wwKAmlOHJC0vL+/du7f8tGFNTY2J
iUlmZia3WkT+yU1nd7n50qbxxCWprPtLTU1t5S5snDaXi9bW1i5fvtzMzOzS
pUvK/Ne0zM2bN21tbdnWIEaSenl5Me+1AUBzqUOSzpw5MyoqSv4Rqio0NJSb
nlU4iahpknLzpQqXa+BWmtCTZY9Qk2tjY9NSDcosFz179qyRkRH1tlp2f7F2
YX7SUW5u7r1794QdMy0tberUqcKOCQAdB/MkbTqvS92Bg4PD8xZOx22apNxS
F4VFJbKzdmWPNDY2tnS9uzaXi1LXPG/evJEjR7Z5KzetR+9/aWkp6yoEVlVV
pX3XQgQAybBN0qbzujdu3Ojbty/XGHJJqtBstpSk8qHJNbNNLypI22paQ5vL
RVNSUihnY2Nj2/M/01oeHh70hrCuQnj0La6oqGBdBQBoJLZJqjCvS63BgAED
zp8/L3uEO79Ifm2LMklKGdqnT5+mCzZ1dHTk/9rmctGSkhJnZ2dXV1ft68J4
2759u1auGZk+fXpqairrKgBAIzFM0qbzuu7u7tQhyj/CpSTFIheUYWFhXLZe
vHhRFq9c6ypb+EkvaTZGn/9vkra5XHTr1q3Uqx47dozv/087Xb582dHRkXUV
wouOjg4KCmJdBQBoJFZJ2nRed+fOnU5OTk2fOW/evL/8F3c/su7du1Okymcl
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
VIoYe3v79PR0wWtWK/fv34+Pj6cjB2NjY2tr68DAwF9++UX1JasJCQnU4wtS
oRpCkgKoD/lutHPnzrhVEw8NDQ3dunVrNkbffPPNJUuWqDJ4bm6uu7u7qakp
dXA1NTVC1ay2Hj16lJyc7OnpaW5uPmjQIF9f36NHj/JbskovpHEEr1BNTJgw
ITs7m3UVAKA4qRsZGTlv3jwjIyMfH58rV66wrk4DXL16NSgoyNDQcOTIka+/
/rpCjNIjc+bMEWRDDx8+pE6tf//+tDnKGkHGVCtPnjw5f/68woMUoJSGFKYU
qdyS1QMHDii/ZPXMmTNubm5CV6ouJk6ciCQFYK6lz0br6+vT0tImT55M+64V
K1Zo8Ud1vF24cMHPz48OOcaNG5eYmMjNQw4cOFA+Rl977bWxY8cKu13qSbdu
3cot2Lx27Zqwg7PV5p2+6U1OT09funSplZUV9w7Ex8e3vmSV2vkxY8YIXKja
QJICMKfMKUbV1dVJSUmurq6045oxY8bevXvV9rpwEqBWaN++fdSz6+rqTpgw
Yf/+/fT+yD+hoKCga9eusrfUxsZGvLNSjx8/bmdnR40wfR9F2oTE2kxSeXV1
dZmZmSEhIcOGDZMtWS0sLFR42t27d62trQUuVG3MmTOHfgxYVwHQcbX3TN3G
xsaLFy/+8MMPgwcPtrS0XL58+fnz5zX6fltKopZn165d1P4YGhoOHTp08eLF
1K23cn7pzJkzX3rppb/+9a8mJia1tbVil5eXl0dbpNaYGlVN/wi1XUkqj34O
6bVr164dNWqUgYHB+PHjo6KiuIsE0oEfvTkCF6o25s6diyQFYEXFBS9lZWV7
9uyZNm0atWa071qxYsXJkyefPXsmUrXSo9aSgmnKlCnUiTs4OKxaterMmTNK
rs6g9+Htt9/W0dGprKwUu06ZR48e0UFO//79ly5d+scff0i2XWHxTlIFubm5
GzZscHZ21tPTGz16dLdu3XJycsQ46mN7f9LnSFIAdoRdN3r79u3du3dzp1nS
wT/F68aNG69cuaJZ7Wp1dfXly5fXr19Pu18LC4sJEybQrpj3dXioaX369Kmw
FSqDWuCYmBjqhd3d3TXxsu1CJak8Oij66KOP6KCIetWRI0eGhIScPXtWqCWr
ixcvpkNKQYbiZ9GiRWwLAOiYRL38Au2gLly4EBkZSftDfX19ylZXV9fg4OC9
e/fm5eVJMNWpDO4EUUr/5cuX0w7WysrK2tqa9rEeHh5xcXF3795lXaAATp48
+c0334wYMSI1NZV1Le0gRpI+l7thSnFxcWxs7KxZsyhVbWxsAgMDT506pcqS
VeZJyrwAgA5I4qsYUXRSZ7R///7Vq1dPnz6dMmvIkCH29vbfffddWFjY1q1b
9+3bR/v8nJycoqIiMU5kolik8Tdv3uzn5zdu3DhqNincqQAvLy9qP6lzvHXr
lmb1zu1y8+bNb7/91tDQMDo6WuHMKPUkUpI2exPP0tJSyiBPT09jY2NuySod
dbT3h5B5kDEvAKCjUZOLAVZWVlJ00l6LusJ169YFBQXNnz/fzc1t1KhRFLVD
hw7lzmiiL8aMGePu7u7t7f3DDz/QMykQN27cGBoaumzZMn9//7lz506dOtXF
xcXOzo6ebGZmRilpamoq+4L+dHR0XLhwIb3qxIkTd+7cYfL/ZY568JCQED09
vYCAgJKSEtbltEakJDUxMWn9CRSgKSkpPj4+3E8Ot2T18ePHbY7MPMjoGFWL
ryoMoG7UJEaVV19fT7v9vLy8zMxM2svt2LGD9hhbtmyhHRf99fjx47TXzc3N
LSgooD2elOf2aKi6urq4uDg6zJgyZYr8Pd3UytWrV+kYSfBhhw0bpvykfVVV
Ff10ff/990OGDOGuexwfH3///v1mn8w8SbX7+vwAakXjYhTE8+uvv44ePZrC
he1Jp1IaO3bs5cuXebywtrY2IyMjKCiI3i59ff2pU6fGxMTcvn1b9gQkKUAH
gRiFpqiX9/DwoJ4rKipK9avEqzl3d/eW7gmrvPr6+uzsbEqub775pn///i4u
LvTWffvtt2yTdNOmTWFhYQwLAOgIEKPQiqdPn65evVpPT8/f37+lCUwt8N13
3x0+fFjAARsbG3///felS5d+/PHH1K4KOHJ7UUOqxfeMA1AHiFFQBnVb8fHx
FhYWrq6uOTk5rMsRnkhzsMuWLaPfrAsXLgg+svKQpACiQoxCe2VmZjo5OVlZ
WR04cIB1LUISKUnpjXr55ZcFH7ZdkpKSvv/+e7Y1AGgrxCjwdvv2bS8vLwMD
g/Xr12vHR6grVqyIiYkRdsyUlBT65VqwYIGww7YXHSHQcQLbGgC0EmKUc+LE
CXt7e9ZVaKry8vI1a9bo6+v7+vreu3ePdTkqEfwE1/3799NvVq9evZhcE1Ie
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
H51sqxQ=
      "], {{0, 552}, {622, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False], 
    {AbsoluteThickness[1], Dashing[{}], CapForm["Butt"], Arrowheads[Medium], 
     StrokeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[
     0., 0., 0.], Opacity[1.], AbsoluteThickness[1], Dashing[{}], CapForm[
     "Butt"]}], EdgeForm[None], FaceForm[GrayLevel[1]], 
     ArrowBox[{{480.2788096331218, 289.7937309570525}, {354.3678784590331, 
      339.11966275721045`}}]}, InsetBox[
     StyleBox[Cell[TextData[{
       StyleBox["r ",
        FontFamily->"Times New Roman",
        FontSize->10,
        FontSlant->"Italic"],
       StyleBox["d\[Theta]",
        FontFamily->"Times New Roman",
        FontSize->10]
      }],
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,
       FontSize->5],
      FontSize->51,
      Background->GrayLevel[1.]], {486.7690638173533, 280.7073750991252}, {
     Left, Baseline},
     Alignment->{Left, Top}]},
   BaseStyle->"ImageGraphics",
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{266.2111111111119, Automatic},
   ImageSizeRaw->{622, 552},
   PlotRange->{{0., 622.}, {0., 552.}},
   PlotRangePadding->Automatic]}]], "Input",
 CellChangeTimes->{{3.631674276952343*^9, 3.631674346345312*^9}, {
   3.631674398832314*^9, 3.631674417447379*^9}, 3.6968282911131554`*^9}],

Cell[BoxData[
 PanelBox[
  GraphicsBox[{
    TagBox[RasterBox[CompressedData["
1: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
HrA5PiYmxsPDQ+HsuIrrwloDAwO5HNtDhw6hBpqZmanLqrxSkpOTe/ToAeMH
DBhAKwoSRKmFlJQ98EGgEffv3xcy00uXLrVp02bnzp0lHpmVlQXzFMuFq7hu
dna2qalpYmKivCei+qESjhkzRmxtlBuIKRxwGO/k5CTM4DSCIFQNUlK5uHPn
DjzTtLQ0ITPNzMxEKz18+PASBz7BtpycHAWy4Cqu6+npuXHjRgVOhEPXtWtX
1MMNGzaIrY2KMHjwYBjfrVs3wQanEQShOpCSysuVK1dMTEyYte+EJDg4WFdX
NykpScYxHh4e58+flzdlruK6O3bsgKAofPqbN2+aNm2qra0dGRkptjAqwqhR
o/AcWVlZ0Vr3BFHaICVVgNOnT1taWnKydoFcJCQktG3bdu3atcUdsHnzZnkn
OXIV101JSTEwMFDSI7tx40aVKlVatGhx/fp1sYVRESZMmIBHSV9fX7CR3gRB
yMu3b9/e5vHo0aOHDx8mJibGx8fHxsaiYT927Ni+fft27969qRjWrVsXUBQW
FhaMknbu3Lnwr6tXry4uQTggyPHw4cPI/dy5c7AErd/DPOCvwUjFwozqwoED
Bzp27Cj8ezHIN/y+Pn36ZGZmFv719u3b+EmuBHv27InKo6RVEFAjIyNOVnff
tm0bamOvXr3EVkUFmTlzJuxHh0fIkd4EURr48uVLeno6JIYRvlOnTkGDtmzZ
AucCagVncPLkyWPGjEELiQYEigZ1M8uD+YD/zc3NLfLomceAAQNw8OjRo+FR
ent7I4V58+YhqRUrVhQnfFu3bt1XFN27d2eUtG/fvoV/DQsLKy7BVatWIccF
CxYgdx8fH1ji5eU1OA8HBwcYaW1tLbW8wP92dnY4hrmEiRMnIoWlS5cGBweH
hoYi0xMnTsTExKCs7t+///z588+fP4t9A4sGdxCXKcqITdzNVq1a5V8WnkEi
kci1KQxkS5l4rBQ3NzckpXw6DEycxM/PT2xVVJD58+draWm1bNlSyJHeBKF2
5ObmvnjxAv1/NGXoz8M7W7NmDTRl6tSpHh4e/fr169Kli1k+bGxsnJyc0GRB
a6ZMmTJr1ixoEJxERt0iIyMvXLjAOHQvX74UOGYoSnQX4gi/lXGrL1++DK92
//7927dvDwkJQcmgCZ02bRoMGzJkCDwsyK55Pjp16uTi4jJixAiUJJoseM04
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
IyOjYcOG6EucO3dONPHjGtwjbW3tZs2aSfecJcTl2bNn+vr6tMQuQUqqCly/
ft3c3Fzes4qL60pJTU3N75bWq1cv/69ubm7btm1jPl+7dq1q1aoVKlRYs2ZN
/qZ70qRJOLFjx47quAn1yZMnYbyZmZlYwscH69evR4fHwsKC5sWoCDExMahj
Hz58ENsQQkxISVUEb2/v4pZNKJLMzMzi4rr5YXa9ZGjQoIH0+02bNkmXhnj8
+DF+goyOHz++cNPdq1cvnOvl5aXARYkOU71Rt4WXPP6YPn06LmrUqFFily7x
H/bt22dnZ0d9m9IMKamKkJWVpaur+/z5c5bHu7u7b968ucTD0tLSpG7pL7/8
wnyZlJRkbGycnZ39PW/y6R9//FGuXDlnZ+ci2+2bN2+2a9fuh+LXR1JlPn/+
jKurVq3amTNnBNY7XsHNwh1Bd0jsAib+w/r16w0NDRMTE8U2hBAHUlLV4dSp
U05OTmyOPH78uL29PctkXV1dmVvcrFmz73lbqunr69+9e/d73uNfuXLl8uXL
d+7cWUa7HR8fX79+fS0trRMnTih8dWJx9uzZMmXKWFhYCCZzApCQkNC6detK
lSrxtBUCoQC4F3iyFi5cqI6vQgglISVVKYYMGXLw4EHZx7x7905HR4f9kNpn
z57VqFEDtxiuJf7s379/eHh4ZmZmnz598GWVKlUCAgJKbLqhR9BcOHcPHz5U
8hqFZ8yYMcxaEwJonGBERkbWrl27SZMmNPpIdcjJyZk7d665ufkthQYQEuoL
KalK8fr1a11d3U+fPsk4xt3dPTQ0VK5k3dzc4JdZWloGBwdDVuBa/vrrr7jp
LVu2vHz5Msume8uWLXBL//zzz8+fPyt3lUIDNxzXW7NmzQsXLvApbkKzceNG
3JHOnTuLXcDEP0hMTHR2dnZxcVHTbZUIBSAlVTU2bNjg4+NT3K9yxXWlvHr1
qmLFitbW1pBpY2Nj3O4KFSpMmTJF3qZ7/PjxOBdNhHKXKAIoN1jepUsXPhRN
RCZOnIjr8vb2FruAiYLcvHlz8ODB6Oeo4zsRQl5ISVWNb9++GRgYPH78uPBP
8sZ189OrVy+oJ2502bJlHRwc0FtWrOk2NzdHIqtWrVL6QoUGzRozbopTKRMf
KyurMmXKnD17VuwCJoogNTXVy8vL0NAwNDRUHedlEywhJVVBIiMj+/btW/h7
BeK6AI1tt27dyuQBp0zJlQquX7/+008/QY4vXbrExbUKx9u3bxs0aFCvXr24
uDiOREwliImJwUX9+uuvtI2pyvLq1atFixaZmJjguY6IiFDTXQsJGZCSqiY9
evSIjY3N/428cd3s7OzZs2c3atQINxcaamZmdujQIU6a7pMnT1asWLFGjRqv
X7/m+rr5Zd++fSiN4ub7qC8bN27EdfXv31/sAiZK4ObNm76+vgYGBqNHjz5/
/rzY5hCcQUqqmty5c8fY2Fj6J9wN9nFdKCYeVWbb7po1a44cORLax23THRwc
jMRhktoN+HdycoLlW7Zs4bZARAd3GdfF7d7xBE9IJJILFy6MGTMGz6mXl9fR
o0ela18TagopqcoyduxY6doL6MFu2LBBxsG5ublQB2tra2bCC5xQU1PTFStW
JCUl8dR0Dx8+HBm5ubkJUhic8fLly9q1a8NVv3HjBk8lIwoJCQm///47rote
xqkR6IjGxcXNmTPH1ta2W7duAQEBtD2BmkJKqrJkZGTA6fv8+XNUVJSdnV2R
x9y/fx93sFmzZsz23Mziunw4oYVJTk7W09NDjjt27BC4ZJSE2XNt8ODBfBeR
wISEhOC6JkyYIHYBE4rw5s2b3bt3Dx061MzMzNPT8+DBg2gBxDaKYAspqSqD
PqqPj0/r1q2leyCiEws3c+7cuZaWlnXq1ClbtizuXfny5Y2MjCZNmnTgwAEh
m+6LFy/CBuSekpIibkHJS6dOnbS0tMLDw4UsLgGoWLFi5cqVmXUgCfXlxo0b
s2fPtrGxQWfV3d1948aN5KuqOKSkqsyXL18gVW5ubr6+vhYWFvXr12ekk4nf
NmnSZMCAAcHBwdeuXROr6YYYwaSGDRuqV1Dx8ePHVatWbdmy5c2bN8UqOs5B
JUHF6Natm9ilS3BGTk7O1atXV6xY0bdv3/bt2zs4OCxcuPD8+fNoGcQ2jfgH
pKSqCfMEeXl5aWtrMzeoSpUqrVq1Gjhw4Lx583bu3IlfxW65/8OcOXNgngLr
RYgLihFmz5gxQ+zy4wBUBltb2woVKjRo0CAzM1PsoiX44smTJzt27Bg7dqyp
qamJiQnc1aCgoNjYWPXqx2okpKQqAjqZaA/Xr18/evRoPCYGBgZDhgz59ddf
9+/fr6WlpaOjI3ZrLYvu3bur3dYk6Kv8+eef1apVQ0MkdvkpBRyWevXqofwb
N25MC9qXHlCBk5KS/v7778mTJ3fu3Nnc3NzV1XXRokWRkZG0FLPwkJKKBbqR
MTEx6FIOHTrUwsLC2toaHmhISMiVK1eY91yQVAjr97wFGVR84saNGzd+/vln
+EQPHjwQu1zl4PTp00w4VOzyU5CoqKiWLVtWrFgRV+Hk5ETtZyknLS3t8OHD
8+fP79OnT8eOHXv27DlhwgS0IWfPnn316pXY1mk4pKTC8O7du7i4uM2bN/v6
+vbq1cvOzs7R0XHmzJl79uy5f/9+4ePzj9d9+/YtWssmTZqI3XLL4sSJE2XL
lm3WrJl6zTBltpxT5V5KkaBtRNerXLlyML59+/bR0dFiFyShcqBDji7uzp07
0bZDWy0tLW1sbNBvX7x48YEDB+7evUtLLXEIKSnnSCSS1NRUKMvy5cvhV6Jz
iEYP/cNp06ZBSaGnJa7q9unTp/zjdYGPjw/u0cqVK8VuwmXh5+cHI0eNGsVz
AXPJy5cvq1ev3rx5c7ELjxXJyckbNmywsrLS0tJCUZuamu7fv1/sIiTUhtzc
XAgoZHTBggWDBw9G/TEyMrK3t/f09Fy6dOnevXvj4+PpPbtikJIqQ1ZWFhq3
iIgIaNz48ePhZprk0b9//9mzZ4eHhyclJSkwyg43pcAS8cioatWqDRo0UOWx
prdv38azWaZMmVOnTnFXxrzj7++P+r9w4UKxy08WaP3c3d3r168PUyGjXbt2
RZdM7JIjNIE3b95cvXoVjRV8VfT8u3TpYmxsjEbMyclpypQpwcHBR48evXPn
Dq3CJBtSUjZADR8+fBgZGRkSEuLr6+vq6mpubo7KZmNjM2LEiPnz54eFhV26
dCk9PV35vJjAXeHv0dSrfoOP5r1GjRrVqlVTo3d2uLm//fYbeikJCQlil98/
QK8J9crNza1x48bMQ4qydXFxefv2rdhlRmg+aWlp58+f37p1q5+f39ChQ+3s
7Bg3AR/wp4+Pz+rVq/fv33/58uVnz57B2xXbXpEhJZXy4sWL+Pj4w4cPr127
FqUBiWS6Z2ZmZlZWVnAzZ8yYASU9ffr0o0ePeKo5nz59atu2LVS78E85OTk1
a9asVasWfwsAcsKOHTvglurr6/NRPjyxZ88ePALjx48Xu/D+zZUrV5YvXw6P
gBmRCw8U3TbrPNRrQBehkcA5hYt65syZ7du3L1q0aNy4cX369GE8CzSVDg4O
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
X1//5ZdfCjUaAHRMapWkTed16+rqKDrT09Nlj7SUpBSX9DhFp/yD1PdxSVpY
WGhqatreepRcLrpv3z7qWJu9AnCz6L/A8INRBconKVGH0BE2ScmYMWPoTRBw
QADoaNQnSZud1/X29g4KCqIu1d7engKIvmgpSbnHFT5w7N69u+zJBgYGDx8+
VL4eZZaLUps2evToadOmKXOtXQ4FKJVE7bPylYiKem3l52xtbW2LiopEradN
gidpdHT0smXLBBwQADoa9UnS6dOnK1yP6MCBAzY2NtxHn9yZOVyP2TRJuYZU
4X4llKr0YJ8+fbi/zp49Oy0tTZlKlFku2tjYuHHjRkpnClxlxpShaObWv7Tr
VWpi4cKFiYmJbGsQPEnp4I3HfAUAgIyaJOnPP/88dOhQ+UcKCwupJfzxxx8V
JkK51ZcKL6eopQepAx0ohzJUvvsLDw+n0dqsRJnloteuXRs8eLC/vz+PZarc
+pf2vkpNJCQk+Pn5sa1B8CQlffv2Vef7wwKAmlOHJC0vL+/du7f8tGFNTY2J
iUlmZia3WkT+yU1nd7n50qbxxCWprPtLTU1t5S5snDaXi9bW1i5fvtzMzOzS
pUvK/Ne0zM2bN21tbdnWIEaSenl5Me+1AUBzqUOSzpw5MyoqSv4Rqio0NJSb
nlU4iahpknLzpQqXa+BWmtCTZY9Qk2tjY9NSDcosFz179qyRkRH1tlp2f7F2
YX7SUW5u7r1794QdMy0tberUqcKOCQAdB/MkbTqvS92Bg4PD8xZOx22apNxS
F4VFJbKzdmWPNDY2tnS9uzaXi1LXPG/evJEjR7Z5KzetR+9/aWkp6yoEVlVV
pX3XQgQAybBN0qbzujdu3Ojbty/XGHJJqtBstpSk8qHJNbNNLypI22paQ5vL
RVNSUihnY2Nj2/M/01oeHh70hrCuQnj0La6oqGBdBQBoJLZJqjCvS63BgAED
zp8/L3uEO79Ifm2LMklKGdqnT5+mCzZ1dHTk/9rmctGSkhJnZ2dXV1ft68J4
2759u1auGZk+fXpqairrKgBAIzFM0qbzuu7u7tQhyj/CpSTFIheUYWFhXLZe
vHhRFq9c6ypb+EkvaTZGn/9vkra5XHTr1q3Uqx47dozv/087Xb582dHRkXUV
wouOjg4KCmJdBQBoJFZJ2nRed+fOnU5OTk2fOW/evL/8F3c/su7du1Okymcl
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
VIoYe3v79PR0wWtWK/fv34+Pj6cjB2NjY2tr68DAwF9++UX1JasJCQnU4wtS
oRpCkgKoD/lutHPnzrhVEw8NDQ3dunVrNkbffPPNJUuWqDJ4bm6uu7u7qakp
dXA1NTVC1ay2Hj16lJyc7OnpaW5uPmjQIF9f36NHj/JbskovpHEEr1BNTJgw
ITs7m3UVAKA4qRsZGTlv3jwjIyMfH58rV66wrk4DXL16NSgoyNDQcOTIka+/
/rpCjNIjc+bMEWRDDx8+pE6tf//+tDnKGkHGVCtPnjw5f/68woMUoJSGFKYU
qdyS1QMHDii/ZPXMmTNubm5CV6ouJk6ciCQFYK6lz0br6+vT0tImT55M+64V
K1Zo8Ud1vF24cMHPz48OOcaNG5eYmMjNQw4cOFA+Rl977bWxY8cKu13qSbdu
3cot2Lx27Zqwg7PV5p2+6U1OT09funSplZUV9w7Ex8e3vmSV2vkxY8YIXKja
QJICMKfMKUbV1dVJSUmurq6045oxY8bevXvV9rpwEqBWaN++fdSz6+rqTpgw
Yf/+/fT+yD+hoKCga9eusrfUxsZGvLNSjx8/bmdnR40wfR9F2oTE2kxSeXV1
dZmZmSEhIcOGDZMtWS0sLFR42t27d62trQUuVG3MmTOHfgxYVwHQcbX3TN3G
xsaLFy/+8MMPgwcPtrS0XL58+fnz5zX6fltKopZn165d1P4YGhoOHTp08eLF
1K23cn7pzJkzX3rppb/+9a8mJia1tbVil5eXl0dbpNaYGlVN/wi1XUkqj34O
6bVr164dNWqUgYHB+PHjo6KiuIsE0oEfvTkCF6o25s6diyQFYEXFBS9lZWV7
9uyZNm0atWa071qxYsXJkyefPXsmUrXSo9aSgmnKlCnUiTs4OKxaterMmTNK
rs6g9+Htt9/W0dGprKwUu06ZR48e0UFO//79ly5d+scff0i2XWHxTlIFubm5
GzZscHZ21tPTGz16dLdu3XJycsQ46mN7f9LnSFIAdoRdN3r79u3du3dzp1nS
wT/F68aNG69cuaJZ7Wp1dfXly5fXr19Pu18LC4sJEybQrpj3dXioaX369Kmw
FSqDWuCYmBjqhd3d3TXxsu1CJak8Oij66KOP6KCIetWRI0eGhIScPXtWqCWr
ixcvpkNKQYbiZ9GiRWwLAOiYRL38Au2gLly4EBkZSftDfX19ylZXV9fg4OC9
e/fm5eVJMNWpDO4EUUr/5cuX0w7WysrK2tqa9rEeHh5xcXF3795lXaAATp48
+c0334wYMSI1NZV1Le0gRpI+l7thSnFxcWxs7KxZsyhVbWxsAgMDT506pcqS
VeZJyrwAgA5I4qsYUXRSZ7R///7Vq1dPnz6dMmvIkCH29vbfffddWFjY1q1b
9+3bR/v8nJycoqIiMU5kolik8Tdv3uzn5zdu3DhqNincqQAvLy9qP6lzvHXr
lmb1zu1y8+bNb7/91tDQMDo6WuHMKPUkUpI2exPP0tJSyiBPT09jY2NuySod
dbT3h5B5kDEvAKCjUZOLAVZWVlJ00l6LusJ169YFBQXNnz/fzc1t1KhRFLVD
hw7lzmiiL8aMGePu7u7t7f3DDz/QMykQN27cGBoaumzZMn9//7lz506dOtXF
xcXOzo6ebGZmRilpamoq+4L+dHR0XLhwIb3qxIkTd+7cYfL/ZY568JCQED09
vYCAgJKSEtbltEakJDUxMWn9CRSgKSkpPj4+3E8Ot2T18ePHbY7MPMjoGFWL
ryoMoG7UJEaVV19fT7v9vLy8zMxM2svt2LGD9hhbtmyhHRf99fjx47TXzc3N
LSgooD2elOf2aKi6urq4uDg6zJgyZYr8Pd3UytWrV+kYSfBhhw0bpvykfVVV
Ff10ff/990OGDOGuexwfH3///v1mn8w8SbX7+vwAakXjYhTE8+uvv44ePZrC
he1Jp1IaO3bs5cuXebywtrY2IyMjKCiI3i59ff2pU6fGxMTcvn1b9gQkKUAH
gRiFpqiX9/DwoJ4rKipK9avEqzl3d/eW7gmrvPr6+uzsbEqub775pn///i4u
LvTWffvtt2yTdNOmTWFhYQwLAOgIEKPQiqdPn65evVpPT8/f37+lCUwt8N13
3x0+fFjAARsbG3///felS5d+/PHH1K4KOHJ7UUOqxfeMA1AHiFFQBnVb8fHx
FhYWrq6uOTk5rMsRnkhzsMuWLaPfrAsXLgg+svKQpACiQoxCe2VmZjo5OVlZ
WR04cIB1LUISKUnpjXr55ZcFH7ZdkpKSvv/+e7Y1AGgrxCjwdvv2bS8vLwMD
g/Xr12vHR6grVqyIiYkRdsyUlBT65VqwYIGww7YXHSHQcQLbGgC0EmKUc+LE
CXt7e9ZVaKry8vI1a9bo6+v7+vreu3ePdTkqEfwE1/3799NvVq9evZhcE1Ie
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
H51sqxQ=
      "], {{0, 552}, {622, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False], 
    {AbsoluteThickness[1], Dashing[{}], CapForm["Butt"], Arrowheads[Medium], 
     StrokeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[{RGBColor[
     0., 0., 0.], Opacity[1.], AbsoluteThickness[1], Dashing[{}], CapForm[
     "Butt"]}], EdgeForm[None], FaceForm[GrayLevel[1]], 
     ArrowBox[{{480.2788096331218, 289.7937309570525}, {354.3678784590331, 
      339.11966275721045`}}]}, InsetBox[Cell[TextData[{
      StyleBox["r ",
       FontFamily->"Times New Roman",
       FontSize->10,
       FontSlant->"Italic"],
      StyleBox["d\[Theta]",
       FontFamily->"Times New Roman",
       FontSize->10]
     }],
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,
      FontSize->5], {486.7690638173533, 280.7073750991252}, {Left, Baseline},
     Alignment->{Left, Top}]},
   BaseStyle->"ImageGraphics",
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{255.58611111110656`, Automatic},
   ImageSizeRaw->{622, 552},
   PlotRange->{{0., 622.}, {0., 552.}},
   PlotRangePadding->Automatic],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{3.696828291659918*^9}]
}, {2}]],

Cell[TextData[{
 StyleBox["Example",
  FontVariations->{"Underline"->True}],
 "\nTo prove that the volume of a sphere of radius ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["4", "3"], "\[Pi]", " ", 
    SuperscriptBox["R", "3"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by direct integration."
}], "Text",
 CellChangeTimes->{{3.6968288713240004`*^9, 3.6968288981904097`*^9}, {
  3.6968331361013317`*^9, 3.6968331405164423`*^9}}],

Cell[TextData[{
 StyleBox["Solution",
  FontVariations->{"Underline"->True}],
 "\nThe volume of a solid is always given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Integral]", "solid"], 
    RowBox[{"\[DifferentialD]", "v"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "v"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the infinitesimal volume element and the integration covers the entire \
solid. Working in spherical coordinates, we cover the sphere if we let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "\[Element]", 
    RowBox[{"[", 
     RowBox[{"0", ",", "R"}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "\[Element]", 
    RowBox[{"[", 
     RowBox[{"0", ",", "\[Pi]"}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "\[Element]", 
    RowBox[{"[", 
     RowBox[{"0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", using the spherical coordinate volume element ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[DifferentialD]", "v"}], "=", 
    RowBox[{
     SuperscriptBox["r", "2"], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"\[DifferentialD]", "r"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]"}], 
     RowBox[{"\[DifferentialD]", "\[Phi]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ","
}], "Text",
 CellChangeTimes->{{3.6968331268651485`*^9, 3.6968332230255156`*^9}, 
   3.6968333134495454`*^9}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "R"], 
      RowBox[{
       SuperscriptBox["r", "2"], 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"\[DifferentialD]", "r"}], 
       RowBox[{"\[DifferentialD]", "\[Theta]"}], 
       RowBox[{"\[DifferentialD]", "\[Phi]"}]}]}]}]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "3"], 
       SuperscriptBox["R", "3"]}], ")"}], 
     RowBox[{"(", "2", ")"}], 
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}]}], "=", 
    RowBox[{
     FractionBox["4", "3"], "\[Pi]", " ", 
     SuperscriptBox["R", "3"]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6968288991241274`*^9, 3.6968289273632355`*^9}, {
  3.6968333148531785`*^9, 3.6968333277925353`*^9}}],

Cell["as desired! \[EmptySquare] ", "Text",
 CellChangeTimes->{{3.6968333289740863`*^9, 3.696833332972554*^9}}],

Cell[CellGroupData[{

Cell["Surfaces in Spherical Coordinates", "Subsubsection",
 CellChangeTimes->{{3.696832935940666*^9, 3.6968329413469315`*^9}}],

Cell["\<\
The diagram above also enables us to calculate the infinitesimal area \
elements when we integrate over only two of the spherical coordinates. \
\>", "Text",
 CellChangeTimes->{{3.696832942437742*^9, 3.696832948405882*^9}, {
  3.6968329938129587`*^9, 3.6968330263515687`*^9}}],

Cell[TextData[{
 "One common example is to integrate over the surface of a sphere. In that \
case, we only vary ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "\[Theta]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "\[Phi]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", respectively, and we do not vary ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " at all. The corresponding area element is given in the diagram above as"
}], "Text",
 CellChangeTimes->{{3.696832942437742*^9, 3.696832948405882*^9}, {
  3.6968329938129587`*^9, 3.6968330639346204`*^9}}],

Cell[TextData[{
 "spherical coordinate area element",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       SuperscriptBox["r", "2"], 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"\[DifferentialD]", "\[Theta]"}], 
       RowBox[{"\[DifferentialD]", "\[Phi]"}]}], TraditionalForm]]]], 
     "TextNumbered",
     CellChangeTimes->{{3.6316744801209636`*^9, 3.631674480183967*^9}}]}], 
   TraditionalForm]]],
 "     (integrating ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and \[Phi])"
}], "TextNumbered",
 CellChangeTimes->{{3.631673316841428*^9, 3.6316733269070034`*^9}, {
  3.6316734056825094`*^9, 3.631673407462611*^9}, {3.6316744932257133`*^9, 
  3.6316744993820653`*^9}, {3.696833080503205*^9, 3.6968330994147344`*^9}}],

Cell[TextData[{
 StyleBox["Example",
  FontVariations->{"Underline"->True}],
 "\nProve that the surface area of a sphere of radius ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox["R", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by direct integration."
}], "Text",
 CellChangeTimes->{{3.6968289465796394`*^9, 3.696829004343136*^9}, {
  3.696833347632302*^9, 3.6968333546903872`*^9}}],

Cell[TextData[{
 StyleBox["Solution",
  FontVariations->{"Underline"->True}],
 "\nWe integrate over the entire sphere by letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "\[Element]", 
    RowBox[{"[", 
     RowBox[{"0", ",", "\[Pi]"}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "\[Element]", 
    RowBox[{"[", 
     RowBox[{"0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " while using the spherical coordinate area element ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["R", "2"], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"\[DifferentialD]", "\[Theta]"}], 
    RowBox[{"\[DifferentialD]", "\[Phi]"}]}], TraditionalForm]]],
 ", "
}], "Text",
 CellChangeTimes->{{3.696833363005066*^9, 3.6968333980280952`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
     RowBox[{
      SuperscriptBox["R", "2"], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"\[DifferentialD]", "\[Theta]"}], 
      RowBox[{"\[DifferentialD]", "\[Phi]"}]}]}]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["R", "2"], "(", "2", ")"}], 
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}]}], "=", 
    RowBox[{"4", "\[Pi]", " ", 
     SuperscriptBox["R", "2"]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6968288991241274`*^9, 3.6968289273632355`*^9}, {
  3.6968333148531785`*^9, 3.6968333277925353`*^9}, {3.696833409346264*^9, 
  3.696833425265643*^9}}],

Cell["as desired! \[EmptySquare] ", "Text",
 CellChangeTimes->{{3.6968333289740863`*^9, 3.696833332972554*^9}}],

Cell[TextData[{
 "Another important check is to ensure that integration in spherical \
coordinates reduces to integration in polar coordinates when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "\[Rule]", 
    FractionBox["\[Pi]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and then consider \[Phi] as our polar coordinate. Looking back at the \
diagram above, we find the product of the infinitesimal lengths associated \
with the ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " coordinate (which is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "r"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") and the \[Phi] coordinate (which is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"\[DifferentialD]", "\[Phi]"}]}], "=", 
    RowBox[{"r", " ", 
     RowBox[{"\[DifferentialD]", "\[Phi]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "=", 
    FractionBox["\[Pi]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") will result in the area element"
}], "Text",
 CellChangeTimes->{{3.6968334298065534`*^9, 3.6968335754487114`*^9}}],

Cell[TextData[{
 "spherical coordinate area element",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{"r", " ", 
       RowBox[{"\[DifferentialD]", "r"}], 
       RowBox[{"\[DifferentialD]", "\[Phi]"}]}], TraditionalForm]]]], 
     "TextNumbered",
     CellChangeTimes->{{3.6316744801209636`*^9, 3.631674480183967*^9}}]}], 
   TraditionalForm]]],
 "     (integrating ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and \[Phi])"
}], "TextNumbered",
 CellChangeTimes->{{3.631673316841428*^9, 3.6316733269070034`*^9}, {
  3.6316734056825094`*^9, 3.631673407462611*^9}, {3.6316744932257133`*^9, 
  3.6316744993820653`*^9}, {3.696833080503205*^9, 3.6968330994147344`*^9}, {
  3.696833581469449*^9, 3.6968335947143726`*^9}}],

Cell[TextData[{
 "As expected, this is identical to the polar coordinate area element \
Equation (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "eq1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "), aside from the change in the definition of the polar angle. "
}], "Text",
 CellChangeTimes->{{3.6968336032535315`*^9, 3.6968336635257044`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D Cylindrical Coordinates", "Subsection",
 CellChangeTimes->{{3.6968287007658615`*^9, 3.696828702843116*^9}, 
   3.696830492188464*^9}],

Cell[TextData[{
 "As we did for spherical coordinates, we displace a generic point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"r", ",", "\[Theta]", ",", "z"}], ")"}], TraditionalForm]]],
 " in cylindrical coordinates using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "r"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "\[Theta]"}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "z"}], TraditionalForm]]],
 ". As shown in the diagram below, the volume of this element equals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[DifferentialD]", "r"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"r", 
       RowBox[{"\[DifferentialD]", "\[Theta]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"\[DifferentialD]", "z"}], ")"}]}], "=", 
    RowBox[{"r", " ", 
     RowBox[{"\[DifferentialD]", "r"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]"}], 
     RowBox[{"\[DifferentialD]", "z"}]}]}], TraditionalForm]]],
 ". Thus, "
}], "Text",
 CellChangeTimes->{{3.63167352126912*^9, 3.6316736379827957`*^9}, {
  3.631674429309057*^9, 3.6316744776888247`*^9}, {3.6316745129408407`*^9, 
  3.631674540325407*^9}, {3.6316746763341866`*^9, 3.6316746868237867`*^9}, {
  3.631942126377174*^9, 3.631942137203593*^9}, {3.6968337212529535`*^9, 
  3.6968337322955656`*^9}, {3.696836436603054*^9, 3.696836468487112*^9}}],

Cell[TextData[{
 "cylindrical coordinate volume element",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{"r", 
       RowBox[{"\[DifferentialD]", "r"}], 
       RowBox[{"\[DifferentialD]", "\[Theta]"}], 
       RowBox[{"\[DifferentialD]", "z"}]}], TraditionalForm]]]], 
     "TextNumbered",
     CellChangeTimes->{{3.6316744801209636`*^9, 3.631674480183967*^9}}]}], 
   TraditionalForm]]]
}], "TextNumbered",
 CellChangeTimes->{{3.631673316841428*^9, 3.6316733269070034`*^9}, {
  3.6316734056825094`*^9, 3.631673407462611*^9}, {3.6316744932257133`*^9, 
  3.6316744993820653`*^9}, {3.6316746922570972`*^9, 3.6316746984744525`*^9}, {
  3.631942120667564*^9, 3.631942122820368*^9}, {3.696833735790165*^9, 
  3.6968337366277623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnXlcTV37/xsoEiFDZpm6RYgkY2SIW8YyJCEl+SKEZL4zEyGVpJKKUGlQ
mhUNpqIypChDyldFFDLl+X2e1vM9v/NUUqdzzj7Dev/Rq7PPPntfe+21rs91
7b0G5aVrZptLSUhIrG+CP7NNNo2zsjLZrN8SH+ZYrl+x3HKZ2RTLDcuWL7PS
WiqNjTqSEhIK2P/f//+LQqFQKP9HRUXFp0+fatmhqKjo/fv3fLOHQqFQKALF
//7v/+7bt09FReXEiRM17pCTk7NixYrVq1fr6OisX7+ez+ZRKBQKRRAoLi62
t7eXkJBwcHCo/u39+/d79+7t7++P/1++fIndIiMj+W4jhUKhUJjnxYsXUIHj
x49X2Z6fny8vL+/m5sba0qpVKwsLC/5aR6FQKBSB4NWrVzWKxahRo/r27cv6
+OnTJ1lZ2UWLFvHXOgqFQqEwSWRkpK2t7bZt206dOlVdLPz9/bExJCSEtSUt
LQ1btmzZwndLKRQKhcIMO3fuVFdXT0pKunbtmpqaGlTA0dGRfQcVFZUuXbqw
b3FwcMBuQUFB/LVUsCgrK4uLi2PaCgqFQvkP2dnZTk5OcOkVFRVcP3hiYiLc
/oMHD8jHmJgYfGTvDZWSkoItqqqq1tbW6yrBP926dWvWrNm7d++4bo8QcePG
DRTLr1+/mDaEQqGIL6WlpfDbmzZt0tTUlJGRgbseNmwYL040YcIEeH7WRwhT
lcdQUAeSRGRlZT2pJDAwEFv09fV5YY8QsWHDBpQDxJRpQygUitgBX+3q6jpn
zpxOnTpJ/DdGRkZcP93Xr1+bN28+atQo1pbHjx9XEQs1NTVFRUX2+Hn9+vXY
Jz4+nuv2CBHfvn1TVlZGOWzcuJFpWygUiljw8eNHJBE2NjYaGhqNGzeW+A3/
8z//w/VTf/r0SU5ODnLA2lJFLMrLy7GDrq4ua4fPnz/DyMmTJ3PdGOEiKiqK
3JcePXp8//6daXMoFIoIcv369cDAQAjE6dOnDQwMOnTo8DuBYGfbtm1ct6Si
okJVVRXO/+3bt2RLbm4u+zuLsrIyfFyzZg3rJ1ZWVk2bNi0oKOC6McLFokWL
WLfm2rVrTJtDoVBECniVqVOn1kUaqrNgwYKkpKTnz58jtueiSU5OThKVLyB+
/vyJj5cuXcJHa2vrL1++/KtSTbp06WJiYkJ2vnz5MpQlISGBiwYII+/fv2/V
qhXr1ixbtoxpiygUioiAPGL8+PHEtwwdOtTd3d3BwWH58uWtW7eur2ogsFdR
UZk8efLq1atdXFyQp+Tl5XHcUerXr19LliyRqHycMmfOHPK/pqYmK1r29/dX
VFTEiXbv3j1mzJhbt25xr1SEFW9vb/Y70r59+9qnXqRQKJQ/Eh4eDh8Ll4KY
fOXKlU2aNDE3N2d9W1BQcPDgwT59+vxRIzZu3HjmzBnE/LNmzRo4cGDLli3Z
v23Xrh3OsmbNGvixjIwMkhfUnfj4+JMnT0Ig4PRg8MePH9m/TU1NhVhcuXKF
ZB+USZMmVbk7gYGBTBtFoVCElZCQkOHDhxOZsLGxIc/5paSkqs+SUV5efv78
eaIpvwO5CftPvn///vr168TERDc3t7Vr144bNw7xLWvn5s2ba2trb9q0KSgo
6NWrV/y7ZjHg+fPnpDMzO3PnzmXaLgqFInxcvnxZQ0MDPkROTm779u3/+7//
S7YXFxdjI+sVQHVu3LhhZGSE7KO6WCQnJ9d+UoT9L1++vHr16j///KOrq9um
TRvWb1VVVS0tLRH95uXlcfM6xZJDhw5VvzsKCgpFRUVMm0ahUISGixcvDho0
iMT2u3btKiwsZP8WH2sXC0J2dvbmzZurDLXIyMiolyVIPZ48eXLu3DkzM7Pe
vXuzjgPzoF+Qnvo+qqIQyP2tjqenJ9OmUSgUQQdRvY+PDwJ4OI1WrVodOHCg
xrXkIBYIQdeuXVuXY5aUlJw8eXLw4MHEF8HzN8RCJB1+fn7Lly/v2rUrOWDL
li0NDQ19fX2rKBqlFsjkJzUyadIkpq2jUCiCCwJ4hJTkDXW7du2OHDny4cOH
3+1cUVFRVFRUVlZW9+P/+vUrKChIX1+fW0+QcMD09HTYqa2tTbyclJSUnp6e
t7c363EZ5XdYWVn9TixkZWWhyEwbSKFQBI6vX7+6urqSOR86dOjg4OBQLxWo
L7yYsO7t27fILGbPnt2oUSPi8aAa/v7+3B3KITIgf+zSpcvvxAIcO3aMaRsp
FIoAAV/q5ORE/EbXrl1Pnjwp7M//i4uLL126ZGBgQFSjVatWq1atokMqqnDz
5s1alAJoaWkxbSOFQhEIkDsgeiQTdPTo0cPNzQ35BdNGcZPCwkJc1MiRI4n3
U1NTc3Z2FvOpyFkYGhrWLhYSdBJaCkXsKSkpsbOzI/1RVVRUzp49++PHj/oe
BAlIdHR0bm4uLyzkLo8fP96+fXvHjh1xvU2aNFm9enVaWhrTRjHM5MmTx40b
N7aS8ePHk+5qI0aM0NHRIRshsj4+PkybSaFQmKG4uHjfvn1kLqD+/fufP3+e
47k1yGoRNjY23LWQd3z79s3Pzw9ukITNEyZMCA0NZdooQcHS0hJlUmW0O4VC
EUMKCwttbW3l5eUlKocnXLp0qYEHzMrKwqFwTK6Yx0/u3btnYWEhLS0N+wcO
HOjt7Q0dYdoohlm5ciVKgzVhL4VCEUMKCgq2bdtGRlJrampya7HpzMxMHHD/
/v1cORr/QbHs3r2bTH7YvXt3Jyen8vJypo1ijP/5n/9BOdD+xhSKeJKXl7dp
0yayCNHIkSOvXLnCxYM/fPhQqMWCUFpa6ujoSPoMd+3a9fTp0+K5+g8VCwpF
PHn+/PnatWvJw/mxY8dGRkZy/RQZGRk4+MGDB7l+ZP4DgfDw8OjWrRuuqFev
Xl5eXkxbxG+oWFAo4sbTp0/J82cwceJE3i18lpaWhlPY2dnx6Pj8p7y83MnJ
iUx4q66uHhUVxbRF/IOKBYUiPmRmZpqbmxOZ+Pvvv69fv87T092+fRsn2rdv
H0/Pwn/KysqggOQVj76+/uPHj5m2iB9QsaBQxIEHDx6YmJgQmZg5c+bNmzf5
cNKcnJy5c+devXqVD+fiP/n5+cR/ku7BPJ38RBCgYkGhiDZpaWkLFy4kPs3A
wODOnTtMWyRSpKamkoXkunbtGhwczLQ5PISKBYUiqty9exeBPZGJBQsW3L9/
n2mLRBZfX9927dqhnOfPny+qS/VRsaBQRI9bt27NmjWLyMTixYvru5AQhQOK
i4tXrFiBAm/atOnp06eZNof7ULGgUESJhIQEPT09IhNmZmZi8u5VcIiLi+vb
ty8Kf/bs2WQVcpGBigWFIhrATenq6hKZQLt++vQp0xb9e7oPCNYfV9MWMcrL
y9etWydROfO5n58f0+ZwDSoWFIqwEx0draOjQ2RizZo1OTk5TFv0HyIjI2GS
SD6T+SMRERFkmlYLCwvRmFeKigWFIrxcvXp11KhRaMLS0tIbNmwQtGUuoWKw
7dy5c0wbwgzv3r0j/dCGDBmSmZnJtDkNhYoFhSKMhISEaGlpSVQuhbx58+bX
r18zbVENkMziwoULTBvCJE5OTuQ2NXwWX2ahYkGhCBcBAQGIVNFs5eTkduzY
IciNNzw8HHaK0nN7zrh16xaZh3DTpk1M28I5VCwoFKGgoqLC19d3wIABaLAK
Cgp79+4tKipi2qg/EBoaCmsDAwOZNoR53r9/P3v2bDJ8vrS0lGlzOKHhYvHr
1y8u2kOhUKrw8+dPb29v0iFTUVHx4MGD8DxMG1UngoODYbNoj2uuFzY2NhKV
K30/e/aMaVvqTX3FwtbWdtiwYVqV6OjoTJ06VVSHK1IojPPt2zd3d/devXqh
kbZv3/7o0aPCtajlpUuXYDm3llISDXBDSa/axMREpm2pH/USi9evX2tqapqb
m69atWrDhg29e/e2s7PjeH1eCoXyO758+XLq1Knu3bujeXbu3NnR0fHTp09M
G1VvCgoK/Pz86FPuKsTHxzdv3lxaWjosLIxpW+pBvcQiMzOTlT1FRERcvHiR
l6ZRKOIIROHEiROki363bt0gGeK8lKeo8uDBg44dOwpXv2LO3ln4+/s7OTnx
yCQKRTz5+PGjvb09WVgHabuHh4d4Lt8pJjx//lxFRQX32tnZmWlb6gQHYhEU
FIQqzTuTKBRxo6Sk5NChQ4qKimiMffv29fLy+vHjB9NGUXhOYWGhhoYGbrqj
oyPTtvyZ+opFeHi4g4MD+f/r16+fP3/mmWkUiuhTVFS0Z8+eFi1aoBkOGDDA
19dXlLoXQvLKysp+/vzJtCGCy4cPH4YOHYq77+LiwrQtf6BeYpGUlLR//35y
6yETiIXevHnDYwMpFNEEjW7nzp3NmjUj00EEBAQwbRH3OXfuXMeOHW/fvs20
IQLN+/fvyShLd3d3pm2pjbqLRUxMjLS0dKtWrdq1a9e2bVs5OTljY2M+WEih
iBj5+flbtmyRlZVF0xs2bJgID0NwdHTENQpdH1H+8+7du0GDBqGsBHlKkLqL
xYULF3bv3r1r166dldja2j58+JAPFlIoIsPLly83btyIoAuNbtSoUaK6ODUL
Mi3SrVu3mDZECCgqKiIDaq5fv860LTVDp/ugUPhAbm7umjVryCzi48aNi4qK
YtoifnDixAlc7927d5k2RDh49uxZ69at5eXlHz16xLQtNUDFgkLhKdnZ2aSV
gUmTJl27do1pi/jHsWPHcNWpqalMGyI03L59G4lnly5dBPB1MBULCoVHZGZm
Llu2jMiEnp5eQkIC0xbxmyNHjuDa79+/z7QhwkRISAgKbfTo0YI2OQYVCwqF
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
hEm1KIW0tHQtK+txBhULilCQnp6+aNEi0hBmzpyZnJzMtEU8pKioyNPTk7XE
Rrdu3TZs2BAZGUkWY+JPt1uc5f79+z179uzevTvUioqFQAEhsLe3r0Ushg8f
zvVqScWCIuCkpqbOnz+fNIE5c+YgymXaIv6BhMLW1haxPbn86dOne3t7k2U6
ee29IRbIZZSVlXv06CFiM5mIAKRDlJKS0u/E4vjx41yvjVQsKAILHJS+vj6p
/EZGRgh0mbaIGb5//x4cHMxa8nXYsGEnTpyAA0eiwbserSh8nAJJTa9evaAa
VCwEjaysLENDwxqVQlZW9tWrV1yvh1QsKAJIUlISomhS8xcvXpyRkcG0RQIB
copVq1aR4SQ9e/bcu3cveZ1BJq/mri+COuDgXbp06dOnD2Ra8IecixsPHjwg
i3lVZ/LkybyoflQsKAJFfHz8lClTSJ1ftmwZgmemLWoQb968CQ8P5+6a8vn5
+bt3727Tpg15nUEkAwXFXX8OsYAGderU6a+//kpLS6NiIWiQ1A9SXl0sPD09
uVjfWFCxoAgI0dHR48ePJ7V95cqVT58+ZdoiLlBeXm5nZweX6+joWMtuHMzn
XFpaeuTIEfLUukePHkePHkWoidSDi74IdOjQQVVVlYqFYJKVlYWWUkUpFBQU
iouLG1BnfwsVCwrjIPYmS05ISkquXbv2+fPnTFvETaZOnQqXjigdTTsmJubl
y5dVdvj161dYWNjMmTPR8Os7igqSYW9vT9YX0NDQOHPmDFIM+PaGP5UiSwS2
b99eTU0tPT2dioUAUuOTqLlz53Kv8v4XVCwoDHLlyhUyhLlRo0YbN27kxVs5
ZlmwYEGLFi08PT29vb2nTZuGK7W1ta2+G9w7vpo9ezZn0z4jkty8eTOZ82T6
9OmRkZEQJnj7hkgGeXXetm3bgQMH8q2/LqVe3Lt37+rVq2TmTBa8mxiNigWF
ES5fvoxImPTc2LJlS35+PtMWcR8ypfOqVauioqLgz+Pj4yEHyB1+/vwZEBBw
7NgxeHWyp7GxMbKqFy9eNOR0OTk5ZFkcGRkZGxub+/fvI/LkWC8gFsnJychZ
hgwZ8vDhQyoWAgjuUWJiYqdOnVhKgRz206dP3Ki8NUDFgsJPEDlfvHhx0KBB
qHXy8vL//PPP27dvmTaKJ5DZe+C0P378yL4d3ltVVXXSpEkQC+gIdnj27JnE
f69l0xAgTAMGDJConNjWz88vOzubs75S+FVSUlKrVq2oWAgsZCwMud0Ec3Nz
rtSiGqFiQeEPFRUV586d69evH3kHt3fv3qKiIqaN4gnfv3/funUrLtPV1bXK
V3fu3MF2ExMT1pY1a9YoKys3adKkltwKX9XrlSUyl/379xPvgeOnpaVlZGTU
Vy9I1Io7NXToUC6+N6dwF9wabW1tlljwdJ40KhYUXgPneebMGdLHT1FR8dCh
QyUlJUwbxUOeP3/evXv3EydOVNn+48cPFRUVJSUl9r5P7u7uKBYrK6vqx3n0
6NHatWsnT55sYWGBHARu//3793U34/79+yNGjCAvvq9evZqVlVUvLwSxSEhI
aN68uZaWFhULgSUzM3PGjBlEKXr27MnTZeyoWFB4x9evX0+fPt2jRw/yNPXo
0aNVnsmIKjV2akpKSkI57Nmzh33jzJkzGzdu/ObNG/aNENPly5dLSkrq6+uz
BiSuW7cOO9fLjF+/fu3atQsnReZiZ2cHvaj7I6mUlBSIhby8PBSHioXAArFY
sGABqgp5UVXPelo/qFhQeMHnz5+dnJy6dOmC2kVGGfDuvZuwgPQKpYEgn7Xl
wYMH2LJ+/Xr23W7fvk3kFfuzb3d1dW3Xrh0H542NjSU3wsTEBNJTx461EIvr
16/LycmNHj0aOQ4f/B6l7kD0kTnivrx9+xY+HPEGND04OJijillXqFhQuEtp
aemxY8c6dOiAeqWsrHzq1Kny8nKmjRIIoqOjUSbOzs6sLXp6eggI2d/dhIWF
SVeCYL7Kz3v37j1hwgTOTl1cXEw67o4ZMwb5Ag7+R72AWMTHxyMl0dbWpmLB
OCx1IIvw4vYFBQUdOXLEwsKie/fu5DEUnDln1aOOULGgcIsPHz4cPnyYLBgK
z+bh4cHdhbqEHYimioqKoqJibm4uPiYnJ6OgNm3axNoBblxSUlJJScnY2NjW
1pZ9DPvmzZuxc3h4eEMMsLGxIQoOScrMzKxdLyAWcXFx0DIdHR0qFvynijpg
C9QBYZi5ufnw4cNbtmzJeqkNQUcCCNXA/WpI9fgjVCwoDQeB6759+0gFVlVV
9fb25mD+CnEgJydn7NixKCJLS0uIgoKCAuuddUlJCbag4aenp+Ojr6/vvHnz
4N7fvn3r5uaGgtXX12+4AZ6enjhU69atL1y4AC9Ui15ALK5du9aoUSOkM48f
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
W6/BjRBCiD9gLBBCCH0TxgIhhFBH/wf3OKVr
     "], {{0, 322}, {527, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{279.7777777777779, Automatic},
   ImageSizeRaw->{527, 322},
   PlotRange->{{0, 527}, {0, 322}}]}]], "Input",
 CellChangeTimes->{3.696828318488903*^9}],

Cell[BoxData[
 PanelBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnXlcTV37/xsoEiFDZpm6RYgkY2SIW8YyJCEl+SKEZL4zEyGVpJKKUGlQ
mhUNpqIypChDyldFFDLl+X2e1vM9v/NUUqdzzj7Dev/Rq7PPPntfe+21rs91
7b0G5aVrZptLSUhIrG+CP7NNNo2zsjLZrN8SH+ZYrl+x3HKZ2RTLDcuWL7PS
WiqNjTqSEhIK2P/f//+LQqFQKP9HRUXFp0+fatmhqKjo/fv3fLOHQqFQKALF
//7v/+7bt09FReXEiRM17pCTk7NixYrVq1fr6OisX7+ez+ZRKBQKRRAoLi62
t7eXkJBwcHCo/u39+/d79+7t7++P/1++fIndIiMj+W4jhUKhUJjnxYsXUIHj
x49X2Z6fny8vL+/m5sba0qpVKwsLC/5aR6FQKBSB4NWrVzWKxahRo/r27cv6
+OnTJ1lZ2UWLFvHXOgqFQqEwSWRkpK2t7bZt206dOlVdLPz9/bExJCSEtSUt
LQ1btmzZwndLKRQKhcIMO3fuVFdXT0pKunbtmpqaGlTA0dGRfQcVFZUuXbqw
b3FwcMBuQUFB/LVUsCgrK4uLi2PaCgqFQvkP2dnZTk5OcOkVFRVcP3hiYiLc
/oMHD8jHmJgYfGTvDZWSkoItqqqq1tbW6yrBP926dWvWrNm7d++4bo8QcePG
DRTLr1+/mDaEQqGIL6WlpfDbmzZt0tTUlJGRgbseNmwYL040YcIEeH7WRwhT
lcdQUAeSRGRlZT2pJDAwEFv09fV5YY8QsWHDBpQDxJRpQygUitgBX+3q6jpn
zpxOnTpJ/DdGRkZcP93Xr1+bN28+atQo1pbHjx9XEQs1NTVFRUX2+Hn9+vXY
Jz4+nuv2CBHfvn1TVlZGOWzcuJFpWygUiljw8eNHJBE2NjYaGhqNGzeW+A3/
8z//w/VTf/r0SU5ODnLA2lJFLMrLy7GDrq4ua4fPnz/DyMmTJ3PdGOEiKiqK
3JcePXp8//6daXMoFIoIcv369cDAQAjE6dOnDQwMOnTo8DuBYGfbtm1ct6Si
okJVVRXO/+3bt2RLbm4u+zuLsrIyfFyzZg3rJ1ZWVk2bNi0oKOC6McLFokWL
WLfm2rVrTJtDoVBECniVqVOn1kUaqrNgwYKkpKTnz58jtueiSU5OThKVLyB+
/vyJj5cuXcJHa2vrL1++/KtSTbp06WJiYkJ2vnz5MpQlISGBiwYII+/fv2/V
qhXr1ixbtoxpiygUioiAPGL8+PHEtwwdOtTd3d3BwWH58uWtW7eur2ogsFdR
UZk8efLq1atdXFyQp+Tl5XHcUerXr19LliyRqHycMmfOHPK/pqYmK1r29/dX
VFTEiXbv3j1mzJhbt25xr1SEFW9vb/Y70r59+9qnXqRQKJQ/Eh4eDh8Ll4KY
fOXKlU2aNDE3N2d9W1BQcPDgwT59+vxRIzZu3HjmzBnE/LNmzRo4cGDLli3Z
v23Xrh3OsmbNGvixjIwMkhfUnfj4+JMnT0Ig4PRg8MePH9m/TU1NhVhcuXKF
ZB+USZMmVbk7gYGBTBtFoVCElZCQkOHDhxOZsLGxIc/5paSkqs+SUV5efv78
eaIpvwO5CftPvn///vr168TERDc3t7Vr144bNw7xLWvn5s2ba2trb9q0KSgo
6NWrV/y7ZjHg+fPnpDMzO3PnzmXaLgqFInxcvnxZQ0MDPkROTm779u3/+7//
S7YXFxdjI+sVQHVu3LhhZGSE7KO6WCQnJ9d+UoT9L1++vHr16j///KOrq9um
TRvWb1VVVS0tLRH95uXlcfM6xZJDhw5VvzsKCgpFRUVMm0ahUISGixcvDho0
iMT2u3btKiwsZP8WH2sXC0J2dvbmzZurDLXIyMiolyVIPZ48eXLu3DkzM7Pe
vXuzjgPzoF+Qnvo+qqIQyP2tjqenJ9OmUSgUQQdRvY+PDwJ4OI1WrVodOHCg
xrXkIBYIQdeuXVuXY5aUlJw8eXLw4MHEF8HzN8RCJB1+fn7Lly/v2rUrOWDL
li0NDQ19fX2rKBqlFsjkJzUyadIkpq2jUCiCCwJ4hJTkDXW7du2OHDny4cOH
3+1cUVFRVFRUVlZW9+P/+vUrKChIX1+fW0+QcMD09HTYqa2tTbyclJSUnp6e
t7c363EZ5XdYWVn9TixkZWWhyEwbSKFQBI6vX7+6urqSOR86dOjg4OBQLxWo
L7yYsO7t27fILGbPnt2oUSPi8aAa/v7+3B3KITIgf+zSpcvvxAIcO3aMaRsp
FIoAAV/q5ORE/EbXrl1Pnjwp7M//i4uLL126ZGBgQFSjVatWq1atokMqqnDz
5s1alAJoaWkxbSOFQhEIkDsgeiQTdPTo0cPNzQ35BdNGcZPCwkJc1MiRI4n3
U1NTc3Z2FvOpyFkYGhrWLhYSdBJaCkXsKSkpsbOzI/1RVVRUzp49++PHj/oe
BAlIdHR0bm4uLyzkLo8fP96+fXvHjh1xvU2aNFm9enVaWhrTRjHM5MmTx40b
N7aS8ePHk+5qI0aM0NHRIRshsj4+PkybSaFQmKG4uHjfvn1kLqD+/fufP3+e
47k1yGoRNjY23LWQd3z79s3Pzw9ukITNEyZMCA0NZdooQcHS0hJlUmW0O4VC
EUMKCwttbW3l5eUlKocnXLp0qYEHzMrKwqFwTK6Yx0/u3btnYWEhLS0N+wcO
HOjt7Q0dYdoohlm5ciVKgzVhL4VCEUMKCgq2bdtGRlJrampya7HpzMxMHHD/
/v1cORr/QbHs3r2bTH7YvXt3Jyen8vJypo1ijP/5n/9BOdD+xhSKeJKXl7dp
0yayCNHIkSOvXLnCxYM/fPhQqMWCUFpa6ujoSPoMd+3a9fTp0+K5+g8VCwpF
PHn+/PnatWvJw/mxY8dGRkZy/RQZGRk4+MGDB7l+ZP4DgfDw8OjWrRuuqFev
Xl5eXkxbxG+oWFAo4sbTp0/J82cwceJE3i18lpaWhlPY2dnx6Pj8p7y83MnJ
iUx4q66uHhUVxbRF/IOKBYUiPmRmZpqbmxOZ+Pvvv69fv87T092+fRsn2rdv
H0/Pwn/KysqggOQVj76+/uPHj5m2iB9QsaBQxIEHDx6YmJgQmZg5c+bNmzf5
cNKcnJy5c+devXqVD+fiP/n5+cR/ku7BPJ38RBCgYkGhiDZpaWkLFy4kPs3A
wODOnTtMWyRSpKamkoXkunbtGhwczLQ5PISKBYUiqty9exeBPZGJBQsW3L9/
n2mLRBZfX9927dqhnOfPny+qS/VRsaBQRI9bt27NmjWLyMTixYvru5AQhQOK
i4tXrFiBAm/atOnp06eZNof7ULGgUESJhIQEPT09IhNmZmZi8u5VcIiLi+vb
ty8Kf/bs2WQVcpGBigWFIhrATenq6hKZQLt++vQp0xb9e7oPCNYfV9MWMcrL
y9etWydROfO5n58f0+ZwDSoWFIqwEx0draOjQ2RizZo1OTk5TFv0HyIjI2GS
SD6T+SMRERFkmlYLCwvRmFeKigWFIrxcvXp11KhRaMLS0tIbNmwQtGUuoWKw
7dy5c0wbwgzv3r0j/dCGDBmSmZnJtDkNhYoFhSKMhISEaGlpSVQuhbx58+bX
r18zbVENkMziwoULTBvCJE5OTuQ2NXwWX2ahYkGhCBcBAQGIVNFs5eTkduzY
IciNNzw8HHaK0nN7zrh16xaZh3DTpk1M28I5VCwoFKGgoqLC19d3wIABaLAK
Cgp79+4tKipi2qg/EBoaCmsDAwOZNoR53r9/P3v2bDJ8vrS0lGlzOKHhYvHr
1y8u2kOhUKrw8+dPb29v0iFTUVHx4MGD8DxMG1UngoODYbNoj2uuFzY2NhKV
K30/e/aMaVvqTX3FwtbWdtiwYVqV6OjoTJ06VVSHK1IojPPt2zd3d/devXqh
kbZv3/7o0aPCtajlpUuXYDm3llISDXBDSa/axMREpm2pH/USi9evX2tqapqb
m69atWrDhg29e/e2s7PjeH1eCoXyO758+XLq1Knu3bujeXbu3NnR0fHTp09M
G1VvCgoK/Pz86FPuKsTHxzdv3lxaWjosLIxpW+pBvcQiMzOTlT1FRERcvHiR
l6ZRKOIIROHEiROki363bt0gGeK8lKeo8uDBg44dOwpXv2LO3ln4+/s7OTnx
yCQKRTz5+PGjvb09WVgHabuHh4d4Lt8pJjx//lxFRQX32tnZmWlb6gQHYhEU
FIQqzTuTKBRxo6Sk5NChQ4qKimiMffv29fLy+vHjB9NGUXhOYWGhhoYGbrqj
oyPTtvyZ+opFeHi4g4MD+f/r16+fP3/mmWkUiuhTVFS0Z8+eFi1aoBkOGDDA
19dXlLoXQvLKysp+/vzJtCGCy4cPH4YOHYq77+LiwrQtf6BeYpGUlLR//35y
6yETiIXevHnDYwMpFNEEjW7nzp3NmjUj00EEBAQwbRH3OXfuXMeOHW/fvs20
IQLN+/fvyShLd3d3pm2pjbqLRUxMjLS0dKtWrdq1a9e2bVs5OTljY2M+WEih
iBj5+flbtmyRlZVF0xs2bJgID0NwdHTENQpdH1H+8+7du0GDBqGsBHlKkLqL
xYULF3bv3r1r166dldja2j58+JAPFlIoIsPLly83btyIoAuNbtSoUaK6ODUL
Mi3SrVu3mDZECCgqKiIDaq5fv860LTVDp/ugUPhAbm7umjVryCzi48aNi4qK
YtoifnDixAlc7927d5k2RDh49uxZ69at5eXlHz16xLQtNUDFgkLhKdnZ2aSV
gUmTJl27do1pi/jHsWPHcNWpqalMGyI03L59G4lnly5dBPB1MBULCoVHZGZm
Llu2jMiEnp5eQkIC0xbxmyNHjuDa79+/z7QhwkRISAgKbfTo0YI2OQYVCwqF
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
hEm1KIW0tHQtK+txBhULilCQnp6+aNEi0hBmzpyZnJzMtEU8pKioyNPTk7XE
Rrdu3TZs2BAZGUkWY+JPt1uc5f79+z179uzevTvUioqFQAEhsLe3r0Ushg8f
zvVqScWCIuCkpqbOnz+fNIE5c+YgymXaIv6BhMLW1haxPbn86dOne3t7k2U6
ee29IRbIZZSVlXv06CFiM5mIAKRDlJKS0u/E4vjx41yvjVQsKAILHJS+vj6p
/EZGRgh0mbaIGb5//x4cHMxa8nXYsGEnTpyAA0eiwbserSh8nAJJTa9evaAa
VCwEjaysLENDwxqVQlZW9tWrV1yvh1QsKAJIUlISomhS8xcvXpyRkcG0RQIB
copVq1aR4SQ9e/bcu3cveZ1BJq/mri+COuDgXbp06dOnD2Ra8IecixsPHjwg
i3lVZ/LkybyoflQsKAJFfHz8lClTSJ1ftmwZgmemLWoQb968CQ8P5+6a8vn5
+bt3727Tpg15nUEkAwXFXX8OsYAGderU6a+//kpLS6NiIWiQ1A9SXl0sPD09
uVjfWFCxoAgI0dHR48ePJ7V95cqVT58+ZdoiLlBeXm5nZweX6+joWMtuHMzn
XFpaeuTIEfLUukePHkePHkWoidSDi74IdOjQQVVVlYqFYJKVlYWWUkUpFBQU
iouLG1BnfwsVCwrjIPYmS05ISkquXbv2+fPnTFvETaZOnQqXjigdTTsmJubl
y5dVdvj161dYWNjMmTPR8Os7igqSYW9vT9YX0NDQOHPmDFIM+PaGP5UiSwS2
b99eTU0tPT2dioUAUuOTqLlz53Kv8v4XVCwoDHLlyhUyhLlRo0YbN27kxVs5
ZlmwYEGLFi08PT29vb2nTZuGK7W1ta2+G9w7vpo9ezZn0z4jkty8eTOZ82T6
9OmRkZEQJnj7hkgGeXXetm3bgQMH8q2/LqVe3Lt37+rVq2TmTBa8mxiNigWF
ES5fvoxImPTc2LJlS35+PtMWcR8ypfOqVauioqLgz+Pj4yEHyB1+/vwZEBBw
7NgxeHWyp7GxMbKqFy9eNOR0OTk5ZFkcGRkZGxub+/fvI/LkWC8gFsnJychZ
hgwZ8vDhQyoWAgjuUWJiYqdOnVhKgRz206dP3Ki8NUDFgsJPEDlfvHhx0KBB
qHXy8vL//PPP27dvmTaKJ5DZe+C0P378yL4d3ltVVXXSpEkQC+gIdnj27JnE
f69l0xAgTAMGDJConNjWz88vOzubs75S+FVSUlKrVq2oWAgsZCwMud0Ec3Nz
rtSiGqFiQeEPFRUV586d69evH3kHt3fv3qKiIqaN4gnfv3/funUrLtPV1bXK
V3fu3MF2ExMT1pY1a9YoKys3adKkltwKX9XrlSUyl/379xPvgeOnpaVlZGTU
Vy9I1Io7NXToUC6+N6dwF9wabW1tlljwdJ40KhYUXgPneebMGdLHT1FR8dCh
QyUlJUwbxUOeP3/evXv3EydOVNn+48cPFRUVJSUl9r5P7u7uKBYrK6vqx3n0
6NHatWsnT55sYWGBHARu//3793U34/79+yNGjCAvvq9evZqVlVUvLwSxSEhI
aN68uZaWFhULgSUzM3PGjBlEKXr27MnTZeyoWFB4x9evX0+fPt2jRw/yNPXo
0aNVnsmIKjV2akpKSkI57Nmzh33jzJkzGzdu/ObNG/aNENPly5dLSkrq6+uz
BiSuW7cOO9fLjF+/fu3atQsnReZiZ2cHvaj7I6mUlBSIhby8PBSHioXAArFY
sGABqgp5UVXPelo/qFhQeMHnz5+dnJy6dOmC2kVGGfDuvZuwgPQKpYEgn7Xl
wYMH2LJ+/Xr23W7fvk3kFfuzb3d1dW3Xrh0H542NjSU3wsTEBNJTx461EIvr
16/LycmNHj0aOQ4f/B6l7kD0kTnivrx9+xY+HPEGND04OJijillXqFhQuEtp
aemxY8c6dOiAeqWsrHzq1Kny8nKmjRIIoqOjUSbOzs6sLXp6eggI2d/dhIWF
SVeCYL7Kz3v37j1hwgTOTl1cXEw67o4ZMwb5Ag7+R72AWMTHxyMl0dbWpmLB
OCx1IIvw4vYFBQUdOXLEwsKie/fu5DEUnDln1aOOULGgcIsPHz4cPnyYLBgK
z+bh4cHdhbqEHYimioqKoqJibm4uPiYnJ6OgNm3axNoBblxSUlJJScnY2NjW
1pZ9DPvmzZuxc3h4eEMMsLGxIQoOScrMzKxdLyAWcXFx0DIdHR0qFvynijpg
C9QBYZi5ufnw4cNbtmzJeqkNQUcCCNXA/WpI9fgjVCwoDQeB6759+0gFVlVV
9fb25mD+CnEgJydn7NixKCJLS0uIgoKCAuuddUlJCbag4aenp+Ojr6/vvHnz
4N7fvn3r5uaGgtXX12+4AZ6enjhU69atL1y4AC9Ui15ALK5du9aoUSOkM48f
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
W6/BjRBCiD9gLBBCCH0TxgIhhFBH/wf3OKVr
     "], {{0, 322}, {527, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{234.15277777776316`, Automatic},
   ImageSizeRaw->{527, 322},
   PlotRange->{{0, 527}, {0, 322}}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{3.696828318863741*^9}]
}, {2}]],

Cell["\<\
You typically want to match your coordinate system to the geometry of the \
problem. Hence, you tend to you spherical coordinates when working with \
spheres and cylindrical coordinates in problems with rotational symmetry \
about one axis, such as in this next problem.\
\>", "Text",
 CellChangeTimes->{{3.6319417719913516`*^9, 3.631941854203496*^9}, {
  3.6926649540419083`*^9, 3.692664997531787*^9}}],

Cell[TextData[{
 StyleBox["Example",
  FontVariations->{"Underline"->True}],
 "\nCompute the volume of a cone with base radius ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]]],
 " and height ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]]],
 " using direct integration with cylindrical coordinates."
}], "Text",
 CellChangeTimes->{{3.6311351844787593`*^9, 3.6311352491394577`*^9}, {
  3.63113549779168*^9, 3.6311355342067623`*^9}, {3.631941889209957*^9, 
  3.6319419445276546`*^9}, {3.696833744930126*^9, 3.696833745782152*^9}, {
  3.696834039378984*^9, 3.696834068711817*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ft", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"centerPlot", "@", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
      RowBox[{"Cone", "[", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"font", "[", 
         RowBox[{"\"\<H\>\"", ",", "Italic"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.15"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"font", "[", 
         RowBox[{"\"\<R\>\"", ",", "Italic"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.45", ",", "0.1", ",", 
          RowBox[{"-", "0.93"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.", ",", 
       RowBox[{"-", "3"}], ",", "0.3"}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "160"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6311352579109592`*^9, 3.6311353056916924`*^9}, {
   3.631135335841417*^9, 3.6311354897702208`*^9}, 3.6968283235530405`*^9, {
   3.6968284358253555`*^9, 3.6968284493907804`*^9}, {3.696833714122217*^9, 
   3.6968337152203283`*^9}, {3.696836322776512*^9, 3.696836323104694*^9}, {
   3.69683638205933*^9, 3.6968363822935348`*^9}}],

Cell[BoxData[
 PanelBox[
  Graphics3DBox[
   {Opacity[0.6], ConeBox[{{0, 0, -1}, {0, 0, 1}}], 
    Line3DBox[{{{0, 0, -1}, {0, 0, 1}}, {{0, 0, -1}, {1, 0, -1}}}], Text3DBox[
     StyleBox["\<\"H\"\>",
      StripOnInput->False,
      FontFamily->"Times",
      FontSize->14,
      FontSlant->Italic], {-0.15, 0, 0}], Text3DBox[
     StyleBox["\<\"R\"\>",
      StripOnInput->False,
      FontFamily->"Times",
      FontSize->14,
      FontSlant->Italic], {0.45, 0.1, -0.93}]},
   Boxed->False,
   ImageSize->160,
   ViewPoint->{0., -3, 0.3}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.6311353960908628`*^9, 3.6311354898852277`*^9}, 
   3.696828323865575*^9, {3.6968284428496304`*^9, 3.6968284495485854`*^9}, 
   3.6968337157828865`*^9, 3.6968363232138977`*^9, 3.696836382414568*^9}]
}, {2}]],

Cell[TextData[{
 StyleBox["Solution",
  FontVariations->{"Underline"->True}],
 "\nTaking the volume integral of the constant function ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]]],
 " times the volume element ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", " ", 
    RowBox[{"\[DifferentialD]", "r"}], 
    RowBox[{"\[DifferentialD]", "\[Theta]"}], 
    RowBox[{"\[DifferentialD]", "z"}]}], TraditionalForm]]],
 ","
}], "Text",
 CellChangeTimes->{{3.6311355376449594`*^9, 3.6311355777752542`*^9}, {
  3.6319419599560814`*^9, 3.631942000796953*^9}, {3.631942103226733*^9, 
  3.6319421055823374`*^9}, {3.631942189463685*^9, 3.6319421928800907`*^9}, {
  3.69683375073781*^9, 3.6968337516828947`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"V", "=", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "0", "H"], 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "0", 
            RowBox[{"2", "\[Pi]"}]], 
           RowBox[{
            SubsuperscriptBox["\[Integral]", "0", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox["z", "H"]}], ")"}], "R"}]], 
            RowBox[{"r", 
             RowBox[{"\[DifferentialD]", "r"}], 
             RowBox[{"\[DifferentialD]", "\[Theta]"}], 
             RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "0", "H"], 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "0", 
            RowBox[{"2", "\[Pi]"}]], 
           RowBox[{
            FractionBox["1", "2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["z", "h"]}], ")"}], "2"], 
            SuperscriptBox["R", "2"], 
            RowBox[{"\[DifferentialD]", "\[Theta]"}], 
            RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "0", "H"], 
          RowBox[{"\[Pi]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["z", "H"]}], ")"}], "2"], 
           SuperscriptBox["R", "2"], 
           RowBox[{"\[DifferentialD]", "z"}]}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["1", "3"], "\[Pi]", " ", 
          SuperscriptBox["R", "2"], 
          SuperscriptBox["H", "3"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.6311356784790144`*^9, 3.6311357237956066`*^9}, {
  3.631135812792697*^9, 3.6311358160058804`*^9}, {3.631135851050885*^9, 
  3.6311358570722294`*^9}, {3.6311359031448646`*^9, 3.6311359913899117`*^9}, {
  3.63194201031297*^9, 3.6319420799046926`*^9}, {3.6319421960780964`*^9, 
  3.6319422577138042`*^9}, {3.6968337566292305`*^9, 3.696833790148652*^9}}],

Cell[TextData[{
 "In the Integration Bootcamp, we carry out this same integral using \
Cartesian coordinates, which is much more painful. In cylindrical \
coordinates, this integral is ",
 StyleBox["significantly easier to both setup and evaluate",
  FontSlant->"Italic"],
 ". That is the reason why we use different coordinate systems: cylindrical \
coordinates let you utilize the symmetry of the problem. "
}], "Text",
 CellChangeTimes->{{3.631136178443611*^9, 3.6311362427352877`*^9}, {
   3.6319422724714303`*^9, 3.6319423854312286`*^9}, 3.6319424749597864`*^9, {
   3.6968340839730344`*^9, 3.6968341085019045`*^9}}],

Cell[TextData[{
 "Of course, we could have chosen to go wild and choose the ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]]],
 "-axis to lie off the axis of the cone; the integral would still yield the \
same answer, but the calculation would be significantly tougher. Many \
problems in physics are ultimately solved by approaching the problem from the \
right perspective. \[EmptySquare] "
}], "Text",
 CellChangeTimes->{{3.631136178443611*^9, 3.6311362427352877`*^9}, {
  3.6319422724714303`*^9, 3.631942468860175*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1520, 781},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Notebook"], InputAliases -> {"D" -> StyleBox[
        OverscriptBox["\[Del]", "\[RightVector]"]], "d" -> StyleBox[
        RowBox[{"\[Delta]", "\[InvisibleComma]t"}]], "del" -> StyleBox[
        RowBox[{"\[CapitalDelta]", "\[InvisibleComma]"}]]}, 
    InputAutoReplacements -> {
     "`0" -> "(0)", "`1" -> "(1)", "`2" -> "(2)", "`3" -> "(3)", "`4" -> 
      "(4)", "`5" -> "(5)", "`6" -> "(6)", "`7" -> "(7)", "`8" -> "(8)", "`9" -> 
      "(9)", "sumj1n" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "j=1", "n"]], "sumj0n" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "j=0", "n"]], "sumk1n" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "k=1", "n"]], "sumk0n" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "k=0", "n"]], "sumj1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "j=1", "\[Infinity]"]], 
      "sumj0inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "j=0", "\[Infinity]"]], 
      "sumk1inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "k=1", "\[Infinity]"]], 
      "sumk0inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "k=0", "\[Infinity]"]], 
      "sumn1inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "n=1", "\[Infinity]"]], 
      "sumn0inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "n=0", "\[Infinity]"]], 
      "prodj1n" -> StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "j=1", "n"]], "prodj0n" -> StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "j=0", "n"]], "prodk1n" -> StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "k=1", "n"]], "prodk0n" -> StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "k=0", "n"]], "prodj1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "j=1", "\[Infinity]"]], "prodj0inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "j=0", "\[Infinity]"]], "prodk1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "k=1", "\[Infinity]"]], "prodk0inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "k=0", "\[Infinity]"]], "prodn1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "n=1", "\[Infinity]"]], "prodn0inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "n=0", "\[Infinity]"]], "csumj1n" -> 
      StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "j=1", "n"]], "csumj0n" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "j=0", "n"]], "csumk1n" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "k=1", "n"]], "csumk0n" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "k=0", "n"]], "csumj1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "j=1", "\[Infinity]"]], 
      "csumj0inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "j=0", "\[Infinity]"]], 
      "csumk1inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "k=1", "\[Infinity]"]], 
      "csumk0inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "k=0", "\[Infinity]"]], 
      "csumn1inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "n=1", "\[Infinity]"]], 
      "csumn0inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "n=0", "\[Infinity]"]], "cprodj1n" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "j=1", "n"]], "cprodj0n" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "j=0", "n"]], "cprodk1n" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "k=1", "n"]], "cprodk0n" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "k=0", "n"]], "cprodj1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "j=1", "\[Infinity]"]], 
      "cprodj0inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "j=0", "\[Infinity]"]], 
      "cprodk1inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "k=1", "\[Infinity]"]], 
      "cprodk0inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "k=0", "\[Infinity]"]], 
      "cprodn1inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "n=1", "\[Infinity]"]], 
      "cprodn0inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "n=0", "\[Infinity]"]], "bA" -> 
      StyleBox["A", FontWeight -> "Bold"], "bB" -> 
      StyleBox["B", FontWeight -> "Bold"], "bC" -> 
      StyleBox["C", FontWeight -> "Bold"], "bD" -> 
      StyleBox["D", FontWeight -> "Bold"], "bE" -> 
      StyleBox["E", FontWeight -> "Bold"], "bF" -> 
      StyleBox["F", FontWeight -> "Bold"], "bG" -> 
      StyleBox["G", FontWeight -> "Bold"], "bH" -> 
      StyleBox["H", FontWeight -> "Bold"], "bI" -> 
      StyleBox["I", FontWeight -> "Bold"], "bJ" -> 
      StyleBox["J", FontWeight -> "Bold"], "bK" -> 
      StyleBox["K", FontWeight -> "Bold"], "bL" -> 
      StyleBox["L", FontWeight -> "Bold", FontSlant -> "Plain"], "bM" -> 
      StyleBox["M", FontWeight -> "Bold"], "bN" -> 
      StyleBox["N", FontWeight -> "Bold"], "bO" -> 
      StyleBox["O", FontWeight -> "Bold"], "bP" -> 
      StyleBox["P", FontWeight -> "Bold", FontSlant -> "Plain"], "bQ" -> 
      StyleBox["Q", FontWeight -> "Bold"], "bR" -> 
      StyleBox["R", FontWeight -> "Bold"], "bS" -> 
      StyleBox["S", FontWeight -> "Bold"], "bT" -> 
      StyleBox["T", FontWeight -> "Bold"], "bU" -> 
      StyleBox["U", FontWeight -> "Bold"], "bV" -> 
      StyleBox["V", FontWeight -> "Bold"], "bW" -> 
      StyleBox["W", FontWeight -> "Bold"], "bX" -> 
      StyleBox["X", FontWeight -> "Bold"], "bY" -> 
      StyleBox["Y", FontWeight -> "Bold"], "bZ" -> 
      StyleBox["Z", FontWeight -> "Bold"], "bs" -> 
      StyleBox["s", FontWeight -> "Bold"], "bt" -> 
      StyleBox["t", FontWeight -> "Bold"], "bw" -> 
      StyleBox["w", FontWeight -> "Bold"], "bx" -> 
      StyleBox["x", FontWeight -> "Bold"], "bz" -> 
      StyleBox["z", FontWeight -> "Bold"], "QED" -> "\[EmptySquare]", "wrt" -> 
      "with respect to", "!el" -> "\[NotElement]", "SS" -> 
      "\[ScriptCapitalS]", "QQ" -> "\[ScriptCapitalQ]", "ZZ" -> 
      "\[DoubleStruckCapitalZ]", "NN" -> "\[DoubleStruckCapitalN]", "CC" -> 
      "\[DoubleStruckCapitalC]", "Cn" -> StyleBox[
        FormBox[
         SuperscriptBox["\[DoubleStruckCapitalC]", "n"], TraditionalForm]], 
      "RR" -> "\[DoubleStruckCapitalR]", "Rn" -> StyleBox[
        FormBox[
         SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]], 
      "Eahc" -> "Each", "eahc" -> "each", "taht" -> "that", "Defintiion" -> 
      "Definition", "defintiion" -> "definition", "satissfies" -> "satisfies",
       "woudl" -> "would", "vraiable" -> "variable", "deisred" -> "desired", 
      "Pritn" -> "Print", "Prtin" -> "Print", "teh" -> "the", "hte" -> "the", 
      "ofr" -> "for", "taht" -> "that", "togehter" -> "together", "wuld" -> 
      "would", "equla" -> "equal", "roational" -> "rotational", "mateiral" -> 
      "material", "matieral" -> "material", "somethign" -> "something", 
      "alos" -> "also", "unkownw" -> "unknown", "exercizing" -> "exercising", 
      "oragnize" -> "organize", "idrection" -> "direction", "variablbe" -> 
      "variable", "varialbe" -> "variable", "thte" -> "the", "chekc" -> 
      "check", "Techincally" -> "Technically", "techincally" -> "technically",
       "arguement" -> "argument", "grpah" -> "graph", "messsages" -> 
      "messages", "guarantess" -> "guarantees", "Laurant" -> "Laurent", 
      "algorihtm" -> "algorithm", "compelte" -> "complete", "amaizng" -> 
      "amazing", "replcae" -> "replace", "Everythijng" -> "Everything", 
      "everythijng" -> "everything", "hypotenus" -> "hypotenuse", "hypoteni" -> 
      "hypotenuses", "usu" -> "us", "graviational" -> "gravitational", 
      "cancelled" -> "canceled", "specifiying" -> "specifying", "characetise" -> 
      "characterize", "freefall" -> "free fall", "freefalling" -> 
      "free falling", "freefalls" -> "free falls", "gasonline" -> "gasoline", 
      "Propogating" -> "Propagating", "propogating" -> "propagating", 
      "propogate" -> "propagate", "nothign" -> "nothing", "Curretn" -> 
      "Current", "curretn" -> "current", "understatnd" -> "understand"}], 
   Cell[
    StyleData["Section"], 
    CounterAssignments -> {{"TextNumbered", 0}, {"Subsection", 0}}], 
   Cell[
    StyleData["TextNumbered"], CellMargins -> {{60, 0}, {0, 0}}, 
    CellFrameLabels -> {{None, 
       Cell[
        TextData[{"(", 
          CounterBox["TextNumbered"], ")"}]]}, {None, None}}, TextAlignment -> 
    Center, LineSpacing -> {1, 3}, LanguageCategory -> "Formula", 
    SingleLetterItalics -> True, CounterIncrements -> "TextNumbered", 
    MenuSortingValue -> 10000, MenuCommandKey -> "8", FontFamily -> "Times", 
    FontSize -> 15, FontColor -> RGBColor[0.75, 0.1, 0.1]], 
   Cell[
    StyleData["Text"], FontFamily -> "Times", FontSize -> 14], 
   Cell[
    StyleData["Item"], FontFamily -> "Times", FontSize -> 14], 
   Cell[
    StyleData["Subitem"], FontFamily -> "Times", FontSize -> 14], 
   Cell[
    StyleData["Subsection"], ShowGroupOpener -> True, WholeCellGroupOpener -> 
    True, ReturnCreatesNewCell -> False, CellFrameLabelMargins -> 5, 
    CounterIncrements -> "Subsection", 
    CounterAssignments -> {{"Subsubsection", 0}}], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], ShowGroupOpener -> True, 
       WholeCellGroupOpener -> True, ReturnCreatesNewCell -> False, 
       CellFrameLabelMargins -> 4, FontSize -> 18, FontColor -> 
       RGBColor[
        0.7143816281376364, 0.21776150148775464`, 0.03341725795376516]], 
      Cell[
       StyleData["Hyperlink", "Printout"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]]}, Open]]}, WindowSize -> {775, 657},
   WindowMargins -> {{100, Automatic}, {-16, Automatic}}, Visible -> False, 
  FrontEndVersion -> "11.1 for Microsoft Windows (64-bit) (April 18, 2017)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "eq1"->{
  Cell[39014, 1037, 378, 11, 
  27, "TextNumbered", "ExpressionUUID" -> "73378117-772b-44cc-
   b5eb-452ef211f6c3",
   CellTags->"eq1"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"eq1", 264994, 5340}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 116, 1, 161, "Title", "ExpressionUUID" -> \
"3fcdc44d-ffe1-4793-a3d2-db8df9752cb5"],
Cell[699, 25, 246, 4, 47, "Text", "ExpressionUUID" -> \
"5efac5f1-e97c-4db7-8735-3afd506c8774"],
Cell[948, 31, 500, 15, 89, "Text", "ExpressionUUID" -> \
"7aa780b6-d886-478f-acb4-283f03e66ba0"],
Cell[1451, 48, 596, 16, 37, "TextNumbered", "ExpressionUUID" -> \
"5069ca5f-939a-49da-8d5d-4a8b0b6e8175"],
Cell[2050, 66, 285, 9, 47, "Text", "ExpressionUUID" -> \
"a91ccb27-ef61-45fd-97de-fcf5b1eda8d0"],
Cell[2338, 77, 712, 19, 107, "Text", "ExpressionUUID" -> \
"ff245f0d-16c8-48ff-af8f-c5899502f6e7"],
Cell[CellGroupData[{
Cell[3075, 100, 111, 1, 77, "Subsection", "ExpressionUUID" -> \
"d5552081-0305-4839-8c0b-99da91602527"],
Cell[CellGroupData[{
Cell[3211, 105, 19217, 517, 847, "Input", "ExpressionUUID" -> \
"ec37dfb3-acdb-4b5d-94c5-a572a3d3b2b5"],
Cell[22431, 624, 10657, 219, 516, "Output", "ExpressionUUID" -> \
"d1900726-cf02-4edb-ad76-a8d43a08f450"]
}, {2}]],
Cell[CellGroupData[{
Cell[33122, 848, 117, 1, 59, "Subsubsection", "ExpressionUUID" -> \
"7b8f4193-eb79-4aff-adcd-2334e9f72957"],
Cell[33242, 851, 1180, 30, 115, "Text", "ExpressionUUID" -> \
"a2d51bcf-fa82-4bb5-bbd8-5a0e43143022"],
Cell[34425, 883, 1661, 60, 107, "Text", "ExpressionUUID" -> \
"5c4fdd7d-2f10-445b-940a-25223d8ed0f1"],
Cell[36089, 945, 417, 11, 27, "TextNumbered", "ExpressionUUID" -> \
"a5875548-4f2d-49e7-84cb-37448d647733"],
Cell[36509, 958, 383, 6, 77, "Text", "ExpressionUUID" -> \
"345756db-4ff1-476b-9a5a-4adf023b4a72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36929, 969, 166, 2, 59, "Subsubsection", "ExpressionUUID" -> \
"645f5721-643d-468f-83c4-48d55f2877f5"],
Cell[37098, 973, 1913, 62, 107, "Text", "ExpressionUUID" -> \
"73104a95-519c-4209-a0ac-1b463361b4e6"],
Cell[39014, 1037, 378, 11, 27, "TextNumbered", "ExpressionUUID" -> \
"73378117-772b-44cc-b5eb-452ef211f6c3",
 CellTags->"eq1"],
Cell[39395, 1050, 733, 21, 77, "Text", "ExpressionUUID" -> \
"b431c5a0-955b-4e73-bac9-56b6af8bf0f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40177, 1077, 112, 1, 77, "Subsection", "ExpressionUUID" -> \
"5b020faa-a605-49f7-af82-2a1d4568fd0b"],
Cell[40292, 1080, 2913, 102, 107, "Text", "ExpressionUUID" -> \
"709891c0-7d7c-4b66-b22f-4fcc6cb4680f"],
Cell[CellGroupData[{
Cell[43230, 1186, 10046, 264, 829, "Input", "ExpressionUUID" -> \
"c1421b30-72d2-4846-a8da-a463f2e0ea43"],
Cell[53279, 1452, 2954, 69, 450, "Output", "ExpressionUUID" -> \
"4e3838ba-391c-4586-9f98-b41171830982"]
}, {2}]],
Cell[56245, 1524, 153, 3, 47, "Text", "ExpressionUUID" -> \
"6798e618-0795-4bed-8d7e-8cdc5b8e84ce"],
Cell[56401, 1529, 448, 12, 27, "TextNumbered", "ExpressionUUID" -> \
"8696589b-6135-4ff5-a287-c56137130214"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56886, 1546, 160, 2, 77, "Subsection", "ExpressionUUID" -> \
"97b83b97-39ee-4811-b0b4-69e1f4e25700"],
Cell[57049, 1550, 1522, 44, 107, "Text", "ExpressionUUID" -> \
"7ad51f4c-5e5f-4fd5-87a9-86c29c9ca493"],
Cell[58574, 1596, 710, 18, 27, "TextNumbered", "ExpressionUUID" -> \
"2df210ea-0a0d-4281-9939-f225bcd279e8"],
Cell[CellGroupData[{
Cell[59309, 1618, 48190, 804, 404, "Input", "ExpressionUUID" -> \
"fc62d50c-9e3b-4997-9963-7ace199f73c0"],
Cell[107502, 2424, 48096, 803, 397, "Output", "ExpressionUUID" -> \
"f96618bd-70d1-4212-b81d-3d74409bd628"]
}, {2}]],
Cell[155610, 3230, 549, 17, 86, "Text", "ExpressionUUID" -> \
"01ddde67-3e3b-4551-b90a-34ba18e4385b"],
Cell[156162, 3249, 1675, 53, 147, "Text", "ExpressionUUID" -> \
"16504298-9a44-4bc5-a54b-c54b0bd2b2fc"],
Cell[157840, 3304, 1029, 30, 38, "TextNumbered", "ExpressionUUID" -> \
"f67a3ed2-8feb-4fa9-b82d-4b5aa85e84a2"],
Cell[158872, 3336, 111, 1, 47, "Text", "ExpressionUUID" -> \
"46ddc969-9d04-4dc4-9a09-5468af7acf08"],
Cell[CellGroupData[{
Cell[159008, 3341, 126, 1, 59, "Subsubsection", "ExpressionUUID" -> \
"bfe5fb4b-77f1-4ff4-afdf-91df0a5f41a9"],
Cell[159137, 3344, 286, 5, 47, "Text", "ExpressionUUID" -> \
"37429300-b90e-4d03-b687-ade28a68224d"],
Cell[159426, 3351, 897, 27, 77, "Text", "ExpressionUUID" -> \
"cf857429-9c00-4d7b-84ea-e566b9486e4e"],
Cell[160326, 3380, 843, 22, 27, "TextNumbered", "ExpressionUUID" -> \
"32c4525f-117a-4432-a437-f2c93347b856"],
Cell[161172, 3404, 530, 16, 77, "Text", "ExpressionUUID" -> \
"42fa7bc4-a677-4c13-a605-ff8920736d81"],
Cell[161705, 3422, 885, 28, 77, "Text", "ExpressionUUID" -> \
"daf35c69-e736-4652-ab76-eb72f0a9285b"],
Cell[162593, 3452, 864, 24, 37, "TextNumbered", "ExpressionUUID" -> \
"d73d4ebc-3bb8-4c41-bfad-2002e50488de"],
Cell[163460, 3478, 111, 1, 47, "Text", "ExpressionUUID" -> \
"ea3957b5-007c-4fba-94b0-29d4b859813d"],
Cell[163574, 3481, 1286, 37, 121, "Text", "ExpressionUUID" -> \
"39dfdb3c-d07b-4264-a807-2986d2784df7"],
Cell[164863, 3520, 809, 21, 27, "TextNumbered", "ExpressionUUID" -> \
"0a55d596-c2dc-41aa-ae28-9843fe7549e2"],
Cell[165675, 3543, 366, 9, 47, "Text", "ExpressionUUID" -> \
"1f97782b-7606-417c-8e98-5fc7ca24cff1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166090, 3558, 142, 2, 77, "Subsection", "ExpressionUUID" -> \
"f0206076-f6d2-4bef-846e-686086fb9595"],
Cell[166235, 3562, 1448, 40, 77, "Text", "ExpressionUUID" -> \
"7319a9ae-4520-4eff-bde1-871580d385e3"],
Cell[167686, 3604, 781, 18, 27, "TextNumbered", "ExpressionUUID" -> \
"b1399b0d-47be-43d7-8c1b-7a8d50a06821"],
Cell[CellGroupData[{
Cell[168492, 3626, 38929, 643, 300, "Input", "ExpressionUUID" -> \
"fd56cef6-5a1d-4f32-97c4-de61ead02a57"],
Cell[207424, 4271, 39028, 647, 263, "Output", "ExpressionUUID" -> \
"d955af43-ede4-4577-b977-03114ce4b0f0"]
}, {2}]],
Cell[246464, 4921, 413, 7, 77, "Text", "ExpressionUUID" -> \
"971e9002-c46f-4761-ad9a-dec79974c6fd"],
Cell[246880, 4930, 583, 14, 77, "Text", "ExpressionUUID" -> \
"e0cc4ee0-f213-4087-b461-e09e36035f9f"],
Cell[CellGroupData[{
Cell[247488, 4948, 2007, 52, 169, "Input", "ExpressionUUID" -> \
"b3a36e22-4b5d-497d-bd24-219c94dccab7"],
Cell[249498, 5002, 882, 24, 283, "Output", "ExpressionUUID" -> \
"fa9fb39d-171e-41f2-a761-7be72b20bfc5"]
}, {2}]],
Cell[250392, 5029, 700, 18, 77, "Text", "ExpressionUUID" -> \
"c8eb5bd5-02aa-43a2-96df-01dc18e05a6e"],
Cell[251095, 5049, 2315, 62, 176, "TextNumbered", "ExpressionUUID" -> \
"d0124138-48b0-47c0-a964-adb32892cb68"],
Cell[253413, 5113, 621, 11, 107, "Text", "ExpressionUUID" -> \
"9487559b-0f46-46b6-a145-ffdde3990a1f"],
Cell[254037, 5126, 525, 10, 77, "Text", "ExpressionUUID" -> \
"79fa5958-623f-44cc-9b81-c1f8e6d0e9ac"]
}, Open  ]]
}, Open  ]]
}
]
*)

