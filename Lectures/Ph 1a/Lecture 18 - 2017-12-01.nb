(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1858646,      34953]
NotebookOptionsPosition[   1827474,      34279]
NotebookOutlinePosition[   1840434,      34564]
CellTagsIndexPosition[   1840120,      34550]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Final Review", "Title",
 CellChangeTimes->{{3.621266463036105*^9, 3.621266471145569*^9}, {
   3.621626567988572*^9, 3.621626571641781*^9}, {3.6218317273838167`*^9, 
   3.6218317469930506`*^9}, {3.6218330011098366`*^9, 3.621833002513891*^9}, {
   3.6220903100989103`*^9, 3.622090313346096*^9}, {3.6220921827770214`*^9, 
   3.622092215030866*^9}, 3.622441737349869*^9, {3.622488936783442*^9, 
   3.622488936843442*^9}, {3.6241589645200386`*^9, 3.624158968078845*^9}, {
   3.62431239549866*^9, 3.6243123986186657`*^9}, {3.6245069121515074`*^9, 
   3.624506913245509*^9}, {3.624510566189044*^9, 3.6245105688722486`*^9}, {
   3.624863603623208*^9, 3.624863609254818*^9}, {3.624915972405531*^9, 
   3.624915972920332*^9}, {3.6249391361484113`*^9, 3.6249391521122394`*^9}, {
   3.6251204362711954`*^9, 3.6251204369575963`*^9}, {3.625166542609496*^9, 
   3.6251665459323015`*^9}, {3.6254694849118366`*^9, 
   3.6254694861910386`*^9}, {3.6257006245168476`*^9, 3.6257006505738935`*^9}, 
   3.625712437663611*^9, {3.6261443730668983`*^9, 3.6261443731604986`*^9}, 
   3.7178768829407616`*^9, {3.719869401418244*^9, 3.719869423406316*^9}, 
   3.719869460972032*^9, {3.720205152595652*^9, 3.72020515361667*^9}, {
   3.7205067823633404`*^9, 
   3.720506782917147*^9}},ExpressionUUID->"c0b2c1cd-9e9e-43c4-a87d-\
99d9a29c707a"],

Cell[CellGroupData[{

Cell["A Puzzle...", "Subsection",
 CellChangeTimes->{{3.6241588670214663`*^9, 3.62415886909627*^9}, {
   3.624162601133649*^9, 3.624162602992755*^9}, {3.6241660137680454`*^9, 
   3.6241660251570654`*^9}, {3.624501317182598*^9, 3.624501327275816*^9}, 
   3.6245061181066837`*^9, {3.6249429581264076`*^9, 3.6249429582824078`*^9}, {
   3.625166261075801*^9, 3.6251662634158053`*^9}, 3.6251665698159437`*^9, {
   3.7197176005165186`*^9, 3.719717602086441*^9}, {3.7198693942026405`*^9, 
   3.719869398261973*^9}, 
   3.720298373308648*^9},ExpressionUUID->"8a047809-3914-410a-aa57-\
526936d0c0c1"],

Cell[CellGroupData[{

Cell[TextData[{
 "Consider two massless springs with spring constants ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "1"], TraditionalForm]],ExpressionUUID->
  "71385460-33f0-4ba5-a6de-e39175b76599"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "2"], TraditionalForm]],ExpressionUUID->
  "3dc7f34a-4a1e-4a48-a762-7928f7c84d87"],
 " and the same equilibrium length. "
}], "Text",
 CellChangeTimes->{{3.6249425932409077`*^9, 3.6249426078757334`*^9}, {
  3.624942764516308*^9, 3.6249427653899093`*^9}, {3.6882573053442717`*^9, 
  3.6882573082369657`*^9}},ExpressionUUID->"0e121cd3-5c63-4fe3-af99-\
cba489fe66df"],

Cell[TextData[{
 "1. If these springs act on a mass ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "5b085822-155a-423a-8cd4-ae3d7e4cb70e"],
 " in parallel, they would be equivalent to a single spring with spring \
constant ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "parallel"], TraditionalForm]],ExpressionUUID->
  "d54995e5-6f97-4fb8-ae6d-bac4e58aac67"],
 ". Find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "parallel"], TraditionalForm]],ExpressionUUID->
  "df7d90f0-9b8f-4948-9d5e-7c74ace99f65"],
 "."
}], "Text",
 CellChangeTimes->{{3.6249425932409077`*^9, 
  3.624942688345831*^9}},ExpressionUUID->"95192464-c76c-479b-ad41-\
e3288dc69b9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pt1", ",", "pt2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.2", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t1", ",", "t2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.65"}], ",", "18.929"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.3", "t"}], "+", 
         RowBox[{"0.5", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "t"}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "3"], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "t"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"t", "\[Rule]", "t1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.3", "t"}], "+", 
         RowBox[{"0.5", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "t"}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "3"], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "t"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"t", "\[Rule]", "t2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"p1", "+", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.3"}], ",", "0"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", "=", 
   RowBox[{"p2", "+", 
    RowBox[{"{", 
     RowBox[{"0.3", ",", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"-", "3."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y1", "=", 
   RowBox[{"-", "2."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x3", "=", 
   RowBox[{
    RowBox[{"0.25", "+", 
     RowBox[{"0.15", "t"}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.3", "t"}], "+", 
        RowBox[{"0.5", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], "/.", 
    RowBox[{"t", "\[Rule]", "t2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x4", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x3", "+", "0.3"}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"First", "@", "p4"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "0.38"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"centerPlot", "@", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "[", "backgroundColor2", "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"p3", "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.5"}], ",", 
               RowBox[{"-", "1.5"}]}], "}"}]}], ",", 
            RowBox[{"p3", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1.5"}], "}"}]}]}], "]"}]}], "}"}], ",", 
        RowBox[{"Lighter", "@", "color2"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p1", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "0.5"}]}], "}"}]}], ",", 
             RowBox[{"p3", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "0.5"}]}], "}"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p2", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "0.5"}]}], "}"}]}], ",", 
             RowBox[{"p4", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "0.5"}]}], "}"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p1", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", "s2"}], "}"}]}], ",", 
             RowBox[{"p3", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", "s2"}], "}"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p2", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", "s2"}], "}"}]}], ",", 
             RowBox[{"p4", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", "s2"}], "}"}]}]}], "}"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "[", "backgroundColor1", "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Gray"}], "}"}], 
           "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"p4", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1.5"}]}], "}"}]}], ",", 
            RowBox[{"p4", "+", 
             RowBox[{"{", 
              RowBox[{"3", ",", "1.5"}], "}"}]}], ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "0.3"}]}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"p3", "+", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1.5"}]}], "}"}]}], ",", 
              RowBox[{"p3", "+", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.5"}], "}"}]}]}], "}"}], "}"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"color2", ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{
            "font", "@", "\"\<\!\(\*SubscriptBox[\(k\), \(1\)]\)\>\""}], ",", 
            RowBox[{"r1", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1.3"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{
            "font", "@", "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)\>\""}], ",", 
            RowBox[{"r1", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1.45"}]}], "}"}]}]}], "]"}]}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"ImageSize", "\[Rule]", "150"}]}], "]"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.3", "t"}], "+", 
            RowBox[{"0.5", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "t"}], "]"}]}]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{
           FractionBox["1", "3"], 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "t"}], "]"}]}], "-", "0.5"}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Lighter", "@", "color2"}]}]}], "]"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.05", "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0.45", "t"}], "+", 
             RowBox[{"0.5", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           FractionBox["1", "3"], 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "t"}], "]"}]}], "+", "0.5"}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"-", "1.27"}], "-", "0.15"}], ",", 
        RowBox[{"12.609", "-", "0.15"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Lighter", "@", "color2"}]}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6875564266526318`*^9, 3.6875564743742747`*^9}, {
   3.687556545581839*^9, 3.6875566515546656`*^9}, {3.718829696664877*^9, 
   3.7188299154775867`*^9}, {3.7188299674161406`*^9, 
   3.7188299722202187`*^9}, {3.718830007116393*^9, 3.718830010535941*^9}, {
   3.7188300434950495`*^9, 3.718830119811097*^9}, {3.7188316502747145`*^9, 
   3.7188317156685*^9}, {3.7188318883445625`*^9, 3.7188319224072704`*^9}, {
   3.7188462131943645`*^9, 3.7188463799152665`*^9}, {3.7188464439691334`*^9, 
   3.718846568276882*^9}, {3.718846601650318*^9, 3.7188466871646085`*^9}, {
   3.7188467178831143`*^9, 3.718846850755378*^9}, {3.7188469110062723`*^9, 
   3.7188469967304935`*^9}, {3.7188470906084747`*^9, 
   3.7188471490334005`*^9}, {3.7188474209881287`*^9, 3.718847591790619*^9}, {
   3.718847648348106*^9, 3.718847763901962*^9}, {3.7188478326368084`*^9, 
   3.7188480447064195`*^9}, {3.7188482297371264`*^9, 
   3.7188482514897594`*^9}, {3.7188483580170507`*^9, 
   3.7188484119219513`*^9}, {3.7188484828804975`*^9, 3.718848663139924*^9}, {
   3.718848751446148*^9, 3.718848790424898*^9}, {3.7188488261918745`*^9, 
   3.7188489318919854`*^9}, {3.7188489867376575`*^9, 3.718849299894494*^9}, {
   3.718849354411028*^9, 3.7188494183273606`*^9}, {3.7188494513060503`*^9, 
   3.718849502871559*^9}, {3.7188495334326267`*^9, 3.718849598546183*^9}, {
   3.718849637195266*^9, 3.7188500207176657`*^9}, {3.7188500695342073`*^9, 
   3.7188501647523704`*^9}, {3.7188521537415433`*^9, 
   3.7188521797971325`*^9}, {3.718852219216525*^9, 3.7188522583804374`*^9}, 
   3.718852291530864*^9, {3.7188523233042145`*^9, 3.7188524148820014`*^9}, {
   3.718852461725545*^9, 3.718852481828128*^9}, {3.718852619895807*^9, 
   3.7188526550407076`*^9}, {3.7188527006009626`*^9, 3.718852763963353*^9}, {
   3.7188528031153045`*^9, 3.7188528435392203`*^9}, {3.7188541106085696`*^9, 
   3.718854110999651*^9}, {3.718854152587225*^9, 3.718854165819999*^9}, {
   3.7188543741143713`*^9, 3.718854374449748*^9}, {3.7209422114664106`*^9, 
   3.7209422577602854`*^9}, {3.720942307862746*^9, 3.72094244189894*^9}, {
   3.7209425586124396`*^9, 3.7209425644013915`*^9}, {3.7209431529854536`*^9, 
   3.7209432026592855`*^9}, {3.7209432374670315`*^9, 3.720943284943982*^9}, {
   3.720943334826763*^9, 
   3.7209436011997395`*^9}},ExpressionUUID->"3a81fff4-8dcc-4311-bd12-\
ce2be4c4931c"],

Cell[BoxData[
 PanelBox[
  GraphicsBox[{{
     {FaceForm[RGBColor[0.9, 0.9, 0.9]], 
      RectangleBox[{-1.2943699424772162, -1.4474181019522505}, \
{-0.7943699424772162, 1.5525818980477495}]}, 
     {RGBColor[0.7143926666666667, 0.7243219999999999, 0.3333333333333333], 
      LineBox[{{{-0.4943699424772162, -0.4474181019522506}, \
{-0.7943699424772162, -0.4474181019522506}}, {{
       3.0862009524954024`, -0.4472598444849145}, {
       3.386200952495402, -0.4472598444849145}}, {{-0.4943699424772162, 
       0.4325818980477494}, {-0.7943699424772162, 0.4325818980477494}}, {{
       3.0862009524954024`, 0.4327401555150855}, {3.386200952495402, 
       0.4327401555150855}}}], 
      {EdgeForm[{GrayLevel[0.5], Thickness[0.005]}], FaceForm[RGBColor[
       0.99, 0.97432, 0.91748]], 
       RectangleBox[{3.386200952495402, -1.4472598444849145}, {6.386200952495402, 1.5527401555150855},
        RoundingRadius->0.3]}, 
      {GrayLevel[0], 
       LineBox[{{{-0.7943699424772162, -1.4474181019522505`}, \
{-0.7943699424772162, 1.5525818980477495`}}}]}, 
      {RGBColor[0.571589, 0.586483, 0.], InsetBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)\"\>",
         StripOnInput->False,
         FontFamily->"Times",
         FontSize->14], {1.2959155050090931, 1.3526610267814174}], InsetBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\)\"\>",
         StripOnInput->False,
         FontFamily->"Times",
         FontSize->
          14], {1.2959155050090931, -1.3973389732185826}]}}}, {{}, {}, 
     TagBox[
      {RGBColor[0.7143926666666667, 0.7243219999999999, 0.3333333333333333], 
       AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[0.3]], 
       LineBox[CompressedData["
1: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
uG0E7VOzxH5S5kD7UcVt+2fDKNqzmvRhhKBbVpJ4bg/j2C/jwzLjc9C+0Ugu
jZhXWu+/Olw3NwdTIxvXZqwZxvJitoDO33MgxUVX3jk4hPVDUdkFywR//Wfw
Kx7CxH4r0xWOeTCxldBRuj+EMZNCjdc3zIOhYZJyxJUh5J9enIvjnoeYTx5Z
o8eGcDrjlO5z/nngr+59ydYziBHHdwWrC86D7SrzY3LkIPqZb3Tt3j0PLy3U
VdS0BnED72mHB/vmYcOAu1ZaxQDquA0o1x2YB+UMy9oE9wH0dpz1YUjMQ2M3
nMk8PICG3+TPdR2eh5aURcPmkX406+uNiZQi5J0zzeGK6UdpgxsvhGTm4Thl
fvKWZj+qNlQpucvOA6dZRwaVtR8Tfl79lnhiHiTi3AIDCyi414MsEnNyHmgm
3rt0HCjIWXYx1PzUPKyGJa1V30fBHq8zu34qzoNAtCXFobcP+7WeTxsqz0P3
20Xp2rA+FNpoIxEK86B+YMdb4/N9yCF6fS7s9Dz0pDVm7F/pxcLv1ndvnJkH
0pnzDKm8XjzTW1i/TmUeSnNyRjztezHmyG8ZDwLv1eMS4t7Xi3lcG7u+E/jL
pZ9C4309WMR3nNZKYOFpX2vuqB7U7lqNyifw9dO7Hfw1etD4kvqOOwTmeH/h
syZHD4qeOvbfPKEvos0/5c73btwUKBZwicC8nfx59PvdKKDRPupK2FdvM66D
x7pxx/LhtY6E/eZOhsO/J7qQW+36YSXCv0NFW6qi0rowcLbrDYXw/zhtyCz2
eheaxsjEaRHxsU0KXrN+dxeOnLt4J5KIn9vmZHZ6dye+XxK1+I+I72aPa3ly
LzuRk2/u+ysi/lXn75v+1elEd68ty+NEvpxfr0bONHTgXNSzR9pH5mE6uyvm
wLMONMs+/znk0DxE7njqOXShA98+2Dv1VnweGnw7bwut78Cb8ryh/mJE/s5w
B1Br2vGenwDjtOg8vLk4OiH7tB0FO89faxOahylftTy+i+34iBQi4LmdqJ+G
ug8hjW1o/5GyJ3LrPLx4+1//wbA2FM4prfXZPA/feC4HX9drw4lbN1Poa+eB
+mWWO7OvFTWCud5fYyXykfM9rzKxFS9acPzK/jcHCs1JTn43W1H/YoDk8Pwc
LIm9dViZb8EF74XF0inifF/brFz6rQU5P/p1eDDmgCNnLcj4t+D9+pQY/4E5
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
nd1X8HpwDsWdyt3w+3YlBB13bpggeiOBNykwKqMSRh7LTV/om0P+1sUutLFK
qBO+/jqnfQ6lDSrz7ztbBe89/PLiW+YQJ/9rl+SbKlhrl7Y9pZGsX6B706Wl
ClZUx/Mq1ZD1QkzH7plWgy/v+lOJlXPoY8LDlYsDqkHb/lKSUfkc6uPd93qq
uBpYTlfk15TOoeR12puMFtdA/78owUXFc+iYgLgB/4EaaLk+GrOG6CNHD9VH
W3xqoI13WPJI/hx60z7u+vlXDdy6E5WZnDuH0ovKQ57Pk+s37qduyZlD1mcc
z9XurYXIitQddX/m0L2V750uuddCf8grr7fZxH/tBlnbzFrwKjZlvfhN4mf6
ifaOUwujpw6pfvw1h6ivD6/v21UHPOKXmCNZc2j1CmuOslsdeCUpnjQn/PQ7
Z8I2ow6OZRpc7YY59FWAWdfNqQNN0fXOoYR7pKV5U3fXQ8eIg8dVws9dhDvB
vR6SRLVYLoTNS/9UCv+sB2XLvU6v/v+8kotq7Hw9+AyYRw8TniotPHNdswE2
dE7fciDv07k58Mvbm/DnfxuXEPtyXr+NyGM1QEqTbVElYf2qywb7FjWCgveE
2x/iz4jie/lh/Ubo3xZl1kz89aiOcC991Aj3kzI8JVhzKD4rJLyxrBH80hYs
8SXx+qi5ukJYpAl2iUavWJM3h7o6Os5fNmuCOv8FX6tIvGN2r/40GdYEmRVC
9G8kHwkNJkNRLU2QlGHyb4rkb1HXlbOG9s0QeEo42bRiDlUbTm48/K4Z4l1u
2jRXzSEpdZ75MwPNoBeE6043zKEnF+8W17i0QMXB0ZQzzUTvtncbyGe2wGU2
NzagbQ6NxpS3+sy3wNNtL5fZ9c6hF42+apa+rdBfd+jeYlKvbQ287mVFrXBk
6sGWhoE5lMupOvNmURvYJySKjk/MoWm7ZUarDNrgWHds+2o+LhLye9tbUt0G
l6puBS/i56LKv4zv1GQbGLNLD69bzkXUCqnns6LtMN7f+rpYnItaT9zpmf2v
HQ78bRgV2MFF2nvXJ+h1t0O8/9rVOmR/t5/Z6zy4oANc3LYlx2hykcbyblMv
hQ64rHsnp8GQi3YMLBC3Ot8B67zPnJc/z0XM0JCpzkGij5z8nmheIXq9JWfU
e3knGASErn14k4vKu07Hc1U74aObRvxbfy7Suybl6+HRCZsl9vrRPnCR/9b7
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
ftD+H4qwCEC8HDjB55/cv/iqzKY=
        "]]},
      Annotation[#, "Charting`Private`Tag$71278#1"]& ]}, {{}, {}, 
     TagBox[
      {RGBColor[0.7143926666666667, 0.7243219999999999, 0.3333333333333333], 
       AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[0.3]], 
       LineBox[CompressedData["
1:eJwUm3c4lf8bx1GhLakkUSiUNpLUW6QkGkZGkShJFMmolKikyFcoIyoSSiQh
Icc69nbs7SznWMceR/o9v79cr+t8nvu51+ce13PZanVb/xofDw/PSgEenv//
tbSQ8Tmj2UOKmVfeUPClFfc6WwWVlXtI68KrBOwftqJsxd+Ls3I9pILT2jTF
861Qwee2tat6SA57ryRsn23BbSGxK8pJ3aRNNv/tidZpQdUpMS2xgi6Snpft
l7iJJmimWak/+tRFSvb+evVjeRPag/WTo552kcKOjXWQPzZhlDWySOhEF6nA
Y1giVK8JnxOUysrJnSTjlhV3bL80grph642uzA7S+nj/zNt2FHx54bFR4m0H
6erIWb/HmhQ49doYSDh3kCYWKsXLxCl4w2Q0XFHoIA0KPDRbXNuAT1lZJv/e
tZNkKgQ3HTzUgDhDviz27TbS/NBJutyGehyWF3pieaqNVH4l7u7SiTpMp/pv
jJJqI1HWiOQo1NUhvkDZxp7SSuLXPih41L8ON83Dc24rtZJULRKtopbU4adK
Y/ytoWaS00pvrdYltdhUE66+QGomKYqKlRwtq8HvrxLaBkHNJJnRAy2Pntcg
New/mXPKzSRRk2/7tvDXoEZzQ2/cgyaSt5rC4KoV1fhT2JHmrNtE4jslvv5K
TRWMnhdsXL65iRQQI7D5TnAVvp1pPhr5p5EUcnlwunFzFXyitlSZzVNILz1d
HUsPV2KdwMeZgAoKie9Dzi6lJZUwfCEvFRxBIc1sTCfb1VTgC+2c6ioVCklc
yW2/kk0F/J++OU51bCDZ16vm2USVw2RdhETi0QaSeNyr/aoO5YhkvIzTXtFA
SvHZeK37SDmCgs5+FYivJ13i/y77qbcMUY8lxL621ZEqjcZYOw+UofVx4uSB
+DrSt8Ortb4sLcNeXSG7cOc6UulV/a08vaVwmngrNbe8juQ4eo92JKgUsQ8T
t8odriUJ9jYeXvOvBPUbzFfG8teSimbzr9/pKEEYFC8viq0hyUkax/3MKoEJ
M/x6eW01KWJQTLv1XgmEcwO1imWrSLGis95FfCXoOBt8esmfSlLM3KGKQ8xi
iI8EnxHRryS9fyvsGVJZDN+a2oSEBxUklcmnbvPhxVgoUti3T6iCRPkc0LTM
uxgTFmmigbHlpLzCpU08N4vBSclzaq4sI41d//3zM4qRuyFhU6FlGSlm99QT
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
gjTUXP4okURwn+P7fSmSNIyodsarNXAR55B3YUqZhnRRMb9fBNtJl1XKnKFh
zc/3nZsphH9D7q45fI2G64bb028TbJLB/0nFgwYX827ZJIKZp87wbA6mIbHU
TreJYI3U+ATmFxp4EtsPDRC8o+TfprA8GiS/zu0bJDjFfNSvqIkGz08B7a0E
P3/3vrhpkAY98US9NIIbbB4aVvPRMZRU8eEBwcKSIblfRemo82lg7SH46VaP
gJu76djAWnG8jtD3hs7VM0LH6ZiNkyu5TPA257UvwkzpWB91xL+dsHfLELts
0W06Xu0o/Xac4Guz/ZHnn9IxFvdF4x3hr2G1xACvcDp2NMnadhP+fLvPSSE4
mY6NZoMH1xAcGSyx2KeQDjWpxVV7Cf9HVxyJNW2hQ661S+MoER8FI77IlUN0
uDGfqUsT8YyZjq0XWc9A5vRGXm45F1bVugeu72BgVvHf2nwiH3q37d8TdpQB
ge234kSJfNkx/VczxIYBbe8/V74S+SS0YPjU4j6DiEc/Y0cRcf8Ua5KXBDBg
IG9ZPkPk46oEuY2sNAZseMyvnyAR+fbK1kemlIFet6DTT/5w4XvjtcrhdgYU
OMN2Fb+5CFDoqJ7hYYJuyogO+8HFpYXHcV90mIh+EC189TsX2YV1ommXmHB3
lGiSTOJi3w2HxLe3mNA6/KrXNoGLx3HM5L7XTGQ62jpOfebirkuE5elPTMhm
NnXf/cTF+vfH016mMdH+uGz0OHF/pUd+V/o1MdH6trjz7TsuRN+atuoymTAz
O3GkLYyLc/eiNlCnmdC5IDukFEzkw89PBa9E+6FkWHRE6zkXtv57D9Ub92Py
4wJn+1MiXhq7Dxy43o/bZ3bpch9zITYj+tXGtR9pJMkIj/tchCVeLNYM6YfL
SC0vw56LV+Y1E1VV/ZCX32555QZxn0Vylme190OjjfOt9hoX/7zc5FxZ/TAb
l8nysyDq6f8qOPNwqL8vjjNjmBahLMlShFBECUmdS4iKlCwtliQkFUrWLMkS
QkqkVEqi+kpKCxXFjH3f92WGMUOWUmbG9ru/P1/P57r3nuW+zzmPh09NB+35
mDD1POugP9bLZcleywEdJrDOlQ50H5qH3tecxsv7mdArXCKtZToPErqmr1st
mLDxML9MDZoHUXJM2oZzTJA/H6yUiPV48vyF3DuJTIh+oM18pYb18bSlWckD
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
        "]]},
      Annotation[#, "Charting`Private`Tag$71302#1"]& ]}},
   ImageSize->150],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.720943240579286*^9, 3.720943285270002*^9}, {
   3.7209433374070325`*^9, 3.7209433936839128`*^9}, {3.720943424558445*^9, 
   3.720943442978937*^9}, {3.7209434827183914`*^9, 3.720943516977931*^9}, {
   3.720943561277666*^9, 3.7209436013880653`*^9}, 
   3.7209436405381527`*^9},ExpressionUUID->"69675e65-3d25-44be-8d3f-\
b7c6a5d60d20"]
}, {2}]],

Cell[TextData[{
 "2. If these springs act on a mass ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "92cc07bd-e618-44f2-9522-73a9b28d876b"],
 " in series, they would be equivalent to a single spring with spring \
constant ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "series"], TraditionalForm]],ExpressionUUID->
  "65750cc8-a7b9-410f-9d90-2ed2d1f27b3b"],
 ". Find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "series"], TraditionalForm]],ExpressionUUID->
  "bca0255c-bb21-44ca-b26f-c81052e7a9a5"],
 "."
}], "Text",
 CellChangeTimes->{{3.6249425932409077`*^9, 
  3.624942707410064*^9}},ExpressionUUID->"02efba79-cdbc-4c66-b179-\
f3bc3fb5aad6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pt1", ",", "pt2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.2", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t1", ",", "t2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.65"}], ",", "18.929"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.12", "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.45", "t"}], "+", 
          RowBox[{"0.5", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       FractionBox["1", "3"], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "t"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"-", "1.61"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.12", "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.45", "t"}], "+", 
          RowBox[{"0.5", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       FractionBox["1", "3"], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "t"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"t", "\[Rule]", "12.609"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"p1", "+", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.3"}], ",", "0"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", "=", 
   RowBox[{"p2", "+", 
    RowBox[{"{", 
     RowBox[{"0.3", ",", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.3", "t"}], "+", 
          RowBox[{"0.5", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       FractionBox["1", "3"], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "t"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"t", "\[Rule]", "t2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p6", "=", 
   RowBox[{"p5", "+", 
    RowBox[{"{", 
     RowBox[{"0.3", ",", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"-", "3."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y1", "=", 
   RowBox[{"-", "2."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x3", "=", 
   RowBox[{
    RowBox[{"0.25", "+", 
     RowBox[{"0.15", "t"}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.3", "t"}], "+", 
        RowBox[{"0.5", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], "/.", 
    RowBox[{"t", "\[Rule]", "t2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x4", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x3", "+", "0.3"}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"First", "@", "p4"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "0.38"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"4", "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0.3", "t"}], "+", 
             RowBox[{"0.5", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], ",", "0"}], "}"}], "/.", 
       RowBox[{"t", "\[Rule]", "t1"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"4", "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0.3", "t"}], "+", 
             RowBox[{"0.5", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], ",", "0"}], "}"}], "/.", 
       RowBox[{"t", "\[Rule]", "t2"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"centerPlot", "@", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "[", "backgroundColor2", "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"p3", "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.5"}], ",", 
               RowBox[{"-", "1.5"}]}], "}"}]}], ",", 
            RowBox[{"p3", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1.5"}], "}"}]}]}], "]"}]}], "}"}], ",", 
        RowBox[{"Lighter", "@", "color2"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p1", ",", "p3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"p2", ",", "p4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"p5", ",", 
             RowBox[{"p5", "+", 
              RowBox[{"{", 
               RowBox[{"0.3", ",", "0"}], "}"}]}]}], "}"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "[", "backgroundColor1", "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Gray"}], "}"}], 
           "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"p6", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1.5"}]}], "}"}]}], ",", 
            RowBox[{"p6", "+", 
             RowBox[{"{", 
              RowBox[{"3", ",", "1.5"}], "}"}]}], ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "0.3"}]}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"p3", "+", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1.5"}]}], "}"}]}], ",", 
              RowBox[{"p3", "+", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.5"}], "}"}]}]}], "}"}], "}"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"color2", ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{
            "font", "@", "\"\<\!\(\*SubscriptBox[\(k\), \(1\)]\)\>\""}], ",", 
            RowBox[{"r1", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{
            "font", "@", "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)\>\""}], ",", 
            RowBox[{"r2", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"ImageSize", "\[Rule]", "220"}]}], "]"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"4", "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0.3", "t"}], "+", 
             RowBox[{"0.5", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          FractionBox["1", "3"], 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "t"}], "]"}]}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Lighter", "@", "color2"}]}]}], "]"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.12", "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0.45", "t"}], "+", 
             RowBox[{"0.5", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          FractionBox["1", "3"], 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "t"}], "]"}]}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1.61"}], ",", "12.609"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Lighter", "@", "color2"}]}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6875564266526318`*^9, 3.6875564743742747`*^9}, {
   3.687556545581839*^9, 3.6875566515546656`*^9}, {3.718829696664877*^9, 
   3.7188299154775867`*^9}, {3.7188299674161406`*^9, 
   3.7188299722202187`*^9}, {3.718830007116393*^9, 3.718830010535941*^9}, {
   3.7188300434950495`*^9, 3.718830119811097*^9}, {3.7188316502747145`*^9, 
   3.7188317156685*^9}, {3.7188318883445625`*^9, 3.7188319224072704`*^9}, {
   3.7188462131943645`*^9, 3.7188463799152665`*^9}, {3.7188464439691334`*^9, 
   3.718846568276882*^9}, {3.718846601650318*^9, 3.7188466871646085`*^9}, {
   3.7188467178831143`*^9, 3.718846850755378*^9}, {3.7188469110062723`*^9, 
   3.7188469967304935`*^9}, {3.7188470906084747`*^9, 
   3.7188471490334005`*^9}, {3.7188474209881287`*^9, 3.718847591790619*^9}, {
   3.718847648348106*^9, 3.718847763901962*^9}, {3.7188478326368084`*^9, 
   3.7188480447064195`*^9}, {3.7188482297371264`*^9, 
   3.7188482514897594`*^9}, {3.7188483580170507`*^9, 
   3.7188484119219513`*^9}, {3.7188484828804975`*^9, 3.718848663139924*^9}, {
   3.718848751446148*^9, 3.718848790424898*^9}, {3.7188488261918745`*^9, 
   3.7188489318919854`*^9}, {3.7188489867376575`*^9, 3.718849299894494*^9}, {
   3.718849354411028*^9, 3.7188494183273606`*^9}, {3.7188494513060503`*^9, 
   3.718849502871559*^9}, {3.7188495334326267`*^9, 3.718849598546183*^9}, {
   3.718849637195266*^9, 3.7188500207176657`*^9}, {3.7188500695342073`*^9, 
   3.7188501647523704`*^9}, {3.7188521537415433`*^9, 
   3.7188521797971325`*^9}, {3.718852219216525*^9, 3.7188522583804374`*^9}, 
   3.718852291530864*^9, {3.7188523233042145`*^9, 3.7188524148820014`*^9}, {
   3.718852461725545*^9, 3.718852481828128*^9}, {3.718852619895807*^9, 
   3.7188526550407076`*^9}, {3.7188527006009626`*^9, 3.718852763963353*^9}, {
   3.7188528031153045`*^9, 3.7188528435392203`*^9}, {3.7188541106085696`*^9, 
   3.718854110999651*^9}, {3.718854152587225*^9, 3.718854165819999*^9}, {
   3.7188543741143713`*^9, 3.718854374449748*^9}, {3.7209422114664106`*^9, 
   3.7209422577602854`*^9}, {3.720942307862746*^9, 3.72094244189894*^9}, {
   3.7209425586124396`*^9, 3.7209425644013915`*^9}, {3.7209431529854536`*^9, 
   3.7209432026592855`*^9}, {3.7209432374670315`*^9, 3.720943284943982*^9}, {
   3.720943334826763*^9, 3.7209436011997395`*^9}, {3.7209436685405793`*^9, 
   3.720943804000573*^9}, {3.72094384053404*^9, 3.7209440523372*^9}, {
   3.720944084166263*^9, 
   3.7209441571056523`*^9}},ExpressionUUID->"b8b312c3-2d39-4777-920b-\
d366ce185c8a"],

Cell[BoxData[
 PanelBox[
  GraphicsBox[{{
     {FaceForm[RGBColor[0.9, 0.9, 0.9]], 
      RectangleBox[{-1.2914819296142217, -1.473890988843045}, \
{-0.7914819296142217, 1.526109011156955}]}, 
     {RGBColor[0.7143926666666667, 0.7243219999999999, 0.3333333333333333], 
      LineBox[{{{-0.49148192961422177`, 
       0.026109011156955096`}, {-0.7914819296142217, 
       0.026109011156955096`}}, {{3.2061169180149847`, 0.02838517233005084}, {
       3.5061169180149845`, 0.02838517233005084}}, {{7.086200952495402, 
       0.05274015551508551}, {7.386200952495402, 0.05274015551508551}}}], 
      {EdgeForm[{GrayLevel[0.5], Thickness[0.005]}], FaceForm[RGBColor[
       0.99, 0.97432, 0.91748]], 
       RectangleBox[{7.386200952495402, -1.4472598444849145}, {10.386200952495402, 1.5527401555150855},
        RoundingRadius->0.3]}, 
      {GrayLevel[0], 
       LineBox[{{{-0.7914819296142217, -1.473890988843045}, \
{-0.7914819296142217, 1.526109011156955}}}]}, 
      {RGBColor[0.571589, 0.586483, 0.], InsetBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)\"\>",
         StripOnInput->False,
         FontFamily->"Times",
         FontSize->14], {1.3573174942003814, 1.027247091743503}], InsetBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\)\"\>",
         StripOnInput->False,
         FontFamily->"Times",
         FontSize->14], {5.295915505009093, 1}]}}}, {{}, {}, 
     TagBox[
      {RGBColor[0.7143926666666667, 0.7243219999999999, 0.3333333333333333], 
       AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[0.3]], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$79423#1"]& ]}, {{}, {}, 
     TagBox[
      {RGBColor[0.7143926666666667, 0.7243219999999999, 0.3333333333333333], 
       AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[0.3]], 
       LineBox[CompressedData["
1:eJwUmHc8ld8fwFVGSZGEkG+Dhig7Sn2MSGUlVCiSlUgyKpUQEiWVlShkJSV7
hGNzr3XH89hbtsu1hfR7fn/d1/t1nvM5n33O5+6zcja02cjCwsLFwcLy/9+W
Q28/33PrRTVKcnyGxdHAL/M0Z4NdLzq81BKgXRUJtmXLihrXelGKivTTuvow
GDdIu9Kq0ouaOmbtVbNfQ9+2w2IaLL1os66ykfM7O/AIHc0zYfagM+9jsFG1
f6VhR776C/X1oJhdg8id2x6dHBrszCrtQbaZvhU9Ez5IUuD84MGHPcj+iNbf
m51haGVQtrLYpgdJt6yU9tIjkawtg2fT5R700/5b3nB9NHIwUpCMl+xBSukX
gyWuxyGT+OsK4l3dyClZkxl0LhnxX7JTsZTsRvJH1yOoGzORBH0giH1XNzqc
qlZnVpKJWHKe0G/87ULb7FRfvn6QhRxjsybEG7uQz1PVU+3j2chh7FEh7+0u
9CTtqm56Qx5S9AusfPOuEw0/anP9z7MYXTh/KdfBoxPd9RaedpUqQVZbezJX
rnWip07+84p9JWiSQ7ny5N5O9Nt/JntFAyH2G/0W6l87UOgmyQNcG8vRwNH2
tfTv7eiG69jutsxKFGCYf1whqB1VmR67oLKtCvUsWyQ42Lajb8/P/5Wwr0J6
9YZLPXvakV1R8MfPItXo3Sv/6D+BbWj22/De9Gc16OXInZQbBq3onqiW/BtJ
Eqrz6DKcOdSKrCYjDqQ+IyH/dAZd6V8LesR/+9tRGgnF3nrjOZregvZ/OrDi
4E5G2ik7s9pZWxD5C7yJyKlHyeM3V56nYGicccp6G18T4rF+9inFE0MtJsVC
C+ZNSNol1ealLoYktQ+NSSQ1IQnr9yMvZ+nojIWLgqdcM9pY14yHKtNRx/YN
4iUHKCj9WOKXfE46ainu+2moSUHvjZ2a4ztpqCe5bzjQloK+nDL4U/GEhnTO
8JzHUihoX7oz42IxFfFvXj5ME6eiEGOp5bhgKuJYf6R89SwV3bj8Zr7UlIr0
c7v2PLKiIi7J7MSryxQklP4wITCWivK+Gl0VkKGgBsuh3vrtNKRnrylBl21E
r47/d8y4m4ZiBHddkaQ1oK1wZDF1jjj3UIb7SZcGtE0onfFxCx1p2cZ/9/xR
j850Badfl6ejtcu7LDLEyejst9G4s/50FEA6YItVkFCXnMf2gCg6Ohv9uqnA
goRGr5y/eesbHXmpN/NVR9WhhO3aJ5jNdLRsRl7g2VyLblRu+6DNhyHLHSpP
Tb7UIC7aGQELMQyJXRM8bHumBgkq6P7cLo+hoJjPN8Zcq5E6T/D8CUMMpQUd
SbXYXo2sCpPZMi0xlD7VGJqUWoVWjj7+W34XQ7+z5qqTuirRk78Lz9NeYsic
fVublUclSg07+NInAkMXXlvxLXBXInaxQ1bTCRjibAmK+6RegYovFr4PKcLQ
Wc+tmlLJZWjqoHAg9htDTdo7+4vOlKEuEeGfZlMYqniSQbr0A6G6ib0TD5Yw
pEqb+XSFuxQV1ygN3N2Moxy6j/ALKEGpM3HnzvPg6OF54Wpf52LEO1XMWyCA
I9aM7s3jTUUoxMb4rKE4jt6xHjA1Wy9EFSeMbZ4exVGT3WutRKlClDHJc1NF
BkddRxq+1ZoXIMttx4TeKOKo7pKefV1wPvon9djd/RSOUuflzL4W5aHSh8xr
04Cjs0Fg7TSWiwqkfv5c08CR75naWwKCuahUgMMm9hyxH5JPpmnlIKFFR2vq
BUI+5zHyYfdsJNvp9ylKF0eqOQLz4V+ykJT3HrY5fRwlHHePnqdmItvXMq/6
LuHobnjC53MsmaijdeTIzcs4GrU9Mfz22E/k+f59i5sRjlQSpuPTC38gc8+c
V8LGOOrrDvY/zv8dtYwuahsTzLrr4Oms+9/Q0yk5zv0E1xXHh5xs/oo2G7lQ
fYj95t+roeloKhKM6I93I+RjiaL8roHJqAcb9F4hzher7285NpSIfhZs8thp
gCPmiWYtDvUvyPPinyBE6B/oySex8XM8EqhNrV8n7GOevxF4YfkzCru6X4tK
2N+X8yljMisGmbbFc544iyN7iYuKll4f0Me5cGdNVRzx/JRgV78QgR7/K3wy
Qfg3ji1tPob/PRJ7eufckRM4srxX83Wp5g0608Yxsk7Eh2eJMkW7+RKdmJ9w
c5TEkcE+UaP+v76oOMOV6/5BHLFgMmr5I/bomRLerLmbYMt3Ot7zvGBabq7C
x4ujsmE39g4eB7A+MCD3mJPgmKTs3lPPIV5LyGznCoZ+HiIF8oS/BPUrpp1n
ZzBUICByxWryDbgYZb7gHsVQFKW36uWFCBA/4CHsgmFo1KBVSsz1A1zZq3Rr
MxlDiXedfBKjY8A9MD9SGWHIRGSXNr9rPEiQD8Y6pGIorzc7gpvtC1SK8PU4
xGCo+MtksW1EIjgk50+whWKIJlX1fnd+CvAtPrXa5oEhhw/6TQ5aX0FLXPyi
pz2GDv7wmWfF06BhIvCfrymGuv58Pv1v+jtEz/7qtT+NoYnVx+9Pb8+CnqRL
HiHrdLTB9Ll/OS0LPAL7UvoZdPTfXOdVPCIb1Lj++0froiOND4LeCXtygeVs
sPPbQjrqYa8weSVeAIcNkhYD7tJRk1ksWXu4AIoPsI9gpnRkH9vB55NcCCJD
Qs2VWnR0aemEsZn4Lxj9pcsbsIeOdPcNKtwXKQWJA+9jU2poyG1r7WpdWync
a3/yYPNPGsL3ax8PDEPQIFr0ZtsHGqJlb5UW9i+DEv2zquwONHRvonzr5qVy
CDGrsC3loCGDEU+DDnIVqDimvsuVpSJ5oXsX1Y9WQ3hUwRdJPqJP/9Z8ciq4
GiY2C21WW6CgqGucy53na+B19sfIs3kUpHOtUDajvBZ4RHcNk+UoyC5XItlT
tA48L7tHqPJSUJfS4vMGzzpYPpbUltXXjMxdyi6uy5AgqlRRftqkGQ3c4dX0
iCbDu+jutqWTTWjgubrMpTkyxF0YNVCbbUQbHJvvpF6shzTJm1XdqY3oqtPl
hZqVemA8faHGz9eIzO3IYl8MG+GerPdwzkA98p6gereNNMO760vvjluREHZS
vW5RmAJtb2ayHnCTUHWG2rM8DQqw2oxsPl5chxSZpe6X31FAuq+gZ3ZnHfoi
0Fa+cJQK8WtNH1lLalBLgKanqwEN5FLFU9iWKlGlcv5ypCsNfiQ3uh6JqST6
YeF1hwganPRbnOtUrURxJj7aAp00WPtyVX8hsAKJylmzvbCkw4q4YpkcXzm6
tlXoobMZBjcpI6KuMsWoZPj04sUHGPjlbmh69uQXUsziONX1DgNF062SG2uL
UAP1irwACYOz36pUPEwLUbF5+xpTBofR+R1K3o/zUI1fUrHNRRxkLlvTPlXk
oknaSvwraxyeeZyZ1N+Si2oCPx1hhuNQk5Qs+zA8G3nevfthywIOV++Gvjj3
9Sc6YecxwsnVAhu3ZwiUd2SgYjGacMn+Fojv/003tPqB/ty+kiun3wLzGTc3
ZTt/Q5pi2a62iS3wd/rJAUW/JERp1PNthFbgrg6mxCi8R4fCA2Sol1qBpy76
wqxSKKJIHXTzu9UK5rN3zk4+CEIvdrFF/PFvBe9lOy0+tqdoeSgT31PbCm6d
n9nu4PdBSuLFp9iWVrgdL3gnp94LpgfyRxuGWiHKcLdjpqU/8N9W5D+5qQ26
V275PUsLhWZRn3L9k22wTedRkC3RF9KmF9x1zrWBcuDOlT3hnyH//dz68uU2
YHvWf/rjuXgY4BRpuenYBhUvrtumqCYCSjw17PahDQz5FLhKpNLAXovNZ/ZL
GzDthIvrU77B2imT1L0/2qCGyaOmv+876OF6/G/K2yAd431zcctPuOrBI1zw
uw1kfxx7/X0xC57WygvbMtrg6XynRUFZNuT3iu8pWGiDdXaGm15QDsitJW04
z9YOPw8/rN8ikgcu74WvBHK1g+auHzXiv/Mg+d7hMMed7bB8dfFB0bd82P6H
pUJsbztYBlLfnlIuhL3L/op/xNvhrqNIo+i/QrjdsSPa9Wg7lGH/WdtXFYGH
bL5cmHQ7mJN663a+/AU6pz7qmCm0g4IWh4uIbjHwH54/TlJuhyieTS1PeUrg
ux3H0Z7T7XDfQ8Rdjl4CA52HXkertQNp8X2zUngpZLHmpKyfbYc82i+HlyYI
LP/ja+LUbgdpjS32oVvLIEC5wBhdaIeksB9aT++UwR4l/ggR3Xb41mEptKW+
DGJpKaP79dth8cO9HzIS5SDlO5pKM2iHK6MPKfOB5bBsfVle0rAdntk7GhiM
lMP3XTfHj19uh9UTCSzqmhWg88BfsodgluaB3NqECjjkLnXjhFE71FPdzvX+
qwCD/OLfpwjWoh95E2BeCZcvBh+aJL5P2nzn9q+CSvBWG3yjTXAWQzP3MV8V
xJxZD7xEnOfZ/tCo2rkKZDZu8ua41A6Cz58djSD6oHP/xt8OhL4aHp/3TYpV
Q73ikvgTwh73B/N7q72qQbumtODUxXaQb33C/19bNYTxC+9II/xhnyM+uyRd
AxvR96RazXbQkWpN1n1ZA3ZpC1Nh6u1Q7eUtIdpfA3/0dOx4oR2oO8Q87JRq
QaFzIIiYTKDdY9D/0Jta0EeFjT9l2+Htf//NbjpVB0lbHk3NSbWDv9CQiUho
HVQeu1cydrgdhutcQr/8rgODlF9Ppve0g2/Ret5iMAnUrFuesAi2Q+C4QG1p
DwlqAjMu1OxoB84nqrMMaTLUZl31vc/aDqWCHuyedDIYKNG2mP5tg3fP247R
D9TDmdcm0ctEvpJVts4Eu9YDh7+L2PXhNti4dXWMb0cDLKocPS/W0waCFelP
+280QAD78cZEvA3Ug6Rs2NMb4CDLLTOssg2OBDXvNDzbCL9ulMf6FbWBvH+X
ifubRlhZLM1g/mwDz97EobH2RhjNv1G1HtMGA21GnGWOTTCxeOg96/02ME6e
vzTzshlcYIjeYdsGP5pD5ySbmsErIPqym1kbvBopzG7fTIEGLCpmTqMN9DPQ
Ld2LFMCVsh8o8LaBNu0/SbyeAr5cd0kn2NpgkxstY8sEBRorXcI3LreCNKmT
3r2FCukZPIbzXa2QiiWpWmlRIUTT6INZYitc86hlIRVRgWX6FDMnvBWaRRbr
R1qooChZc7EroBVmhHuW4mapcLc0ZyLSvhUC2JzWeg/ToM1SaHPrkVYoK8/c
6B1KA4auQW7O7lZISRbcfvMrDez0U5Vst7RCkJdGfWs5DURW8ZJzoy0g9bj1
uN8MDYanFjt3E/31kIf9CukiHQRwLt1v71qAVW2w8/xNOjj0xify+7RAosqz
K2YedOiV0drrdb0FPgz7gsxnOvBxDNIeX2yBzP06lfNZdFBS2fHSRLkFZNvW
ubVr6GBrOCmezNcCQQnn9WIm6NDGfjNeZGMLhJNU7sT8pYNCGeO86zQOFcS0
JsGNwa/vdZerSDgY/HGfnZbGYGKvN3nrUxyEJ9m9djpjoHfm45Ho2zi0cDAV
PZ9iILUv5wi3CQ45YkInHIMx+B553vDnMWK/MSeNmYRB3nVMtEcIBz3Nctw3
CwOlBWdsgR0Ht4ufZj+VYjA156U93IPBWvcTWzccA/uD0z/KyMT9OHnnlFQf
Ie+SpV5gHgb3Vm6IO49j8Kd7+dXAawwq505fev0Xg7Bst1aPRxgcNVY/eJuQ
2zEamrlqjcG17V6Kjdtx2LdXxbnjFAavNHfpSIkS96iByOsPhzGouqocnSOG
g/aFJmG9XRhMBoAIXQKH+UY78vIGDGzt6NmB0jiIhR7Xjp6iQ0546llcAQca
7cNZuU46fD/9OKfgJA57WDSdq2rpUBDLMyELONRrLD7Qy6FDt9cJmoYGDqJi
EdtpcXSoSagzntAizt8tNaj/mg4Jh1JuHbmAw9bDfUl1j+gw3V828VcHB6f7
DPbTtnQQSd/eZ6+Pgy2WmvfdkA6C6WHyDpcI+R4PbYSBDj9CrHo3XMYh2oZa
GXCUDljB+7bjRjhYisv7MgXoUHpXX2ieYAvtI5eusdJhiFkXp2eMQ9imM/3l
TBpQQsABCE6sZBmU6KZBQ8a6Rw3xfXH5X/ZwEg3cqddJg4T8F1G//rLk0WD3
kzKbSEMcTrbnP3BOoMGSZIRhvwEODXG3xPtDaGCuaBpVroeDvdTefJPHNAgL
f6+mRNhz2u1UN8WOBpWlmKnmeULf/MlzBkY0CLnxa3ZUE4egPZdScFUapO9g
7j6gjsOwlv23m1I0uMp7cHDuNA4sIzysC7tp8LFT6JaZMhEfM7aboew08K0I
/3lNHoeEc20u8nNUUPa3+z1F5B3Pn0DHDw1UUC/wcuzZT9hXnpxjVkgFfqnQ
NSURHGLPiDgdSaaC+Y034xK7cNhvqzg29owK+4VV7uJsRD68MN7S40iFrmvj
+iFEfpGDigz7rlGBpB5wqHcegxsJNwR45amwRT/P9vwABkkZw5Pq+6jw6ry9
xK02DIy6Ic5vOxV4MLWYXU0YbLR6cOn0GAXeLv24qlmAwTytID7iMwVgrutc
ywsMKqoKj958TYG1eCnfX54Y/OXeN6n2mAJp9u0nTzlhIJpZl6N9hQJN137L
b72EwTHD09vvaVKglvxng7k6Bolmnqo/5ShwUhKz1pbDoMTEt+EpDwV0W34K
LuzEwKrZYERwvRkysEXWvE1E3pu8FnHqbIZHUgElO+foEF+ObFBEM0Q0yvUm
U+ggP8FjepynGeZnXtxUeEGH1PezHjcnm6Dn7HSW6n06XJ1s1uira4Jj9XM/
OsyJ9YfNl8i+TbBy7ExMsTSRp0bnI5+sNMK8wmKoFp0GeT32UapE32fdDw54
EQ3ebGvov17QCPw9e4SX4mmwOf6KW9qDRhDOpZ5fuEsDWcPPcnkrDdA7pWTA
2EQDf7WF/5y7GiAYtZ4/MEqFhWiKw+vSBhiX/DvMrKdCRlLV2r/nDfBY5NVn
43dUeNNhkzm0swHuYMyIK0JUUHkbpTa7XA8HBE8fub5KATPO2SznnnoQ/L5W
8a+TAv/1j5Er0urBL051XDSGAnyex5WZ2vWQpSr6rl2AAse043XTZOqB9LQ6
J3+iGYR9H+zrE6qHKIHLKhtTmiFn+LB61RQZ0hruejgLN0PjqQvi7u1kmK9x
NAnHmqDztO58chUZ/kaqBHK8boKLi85W72LIkLPx/u3W1UaYvGnmrfeSDNtu
stgpZTUCr2nmi1APMvB1fTKctGuEoIHuY98MycDG/ufXZWoDdHDuUQhQI8Nm
GasUTv8G6J59OTNB3PN17vvNhZUaYGmb7AnzHWT45D928FJMPQQuvNt2eyMZ
tDsH6h7p1oNMjIU82zwJVHM26WxaJ0OuEW1suo0EK9MVCqrXyRCW6PdNtYEE
/ip6mktbyXDoxo8D4mUkCAmufsFfRIJk5YyH37+SQHw1bk84HwlSd6Q7Xf5M
gphDkQrLZXXQGWRx/m04CbCHL7bUO9bBPl0NbvtXJFjj4fDjFqyDq83GqO05
CUYzRt/VVtSC+3M+k9+PSbDHXebQgmMtMPk9GoLdSCD0ZptCNH8tdNb+FqA4
keBaW1V2AaqBwCYliSw7EshaZcQa2tfA0KcBn2ArEpjf/nBBk78GeqBlbPo6
IX95uba2shoq3A1F+64R+njXF3TeqwabmeY2cxNC/hxU+O6pBqGEv822l0ng
YP8juJRUBQ27SvLXDUjQU/imNNS9CnRHRNXE9Ukwxu3Ovrq3CjhOWQh16hL2
2v7j+VdfCXPnB6b2EuzG0fr6k0cl7FiVtlvSIc5bTjjWubcSbgcvHLYg1h1u
saTkkSsg8Oxyy1U9ErxlPEqXdauAYjWRHUOE/CmuZ4sGeyqAoWHuxmpIAkc9
szM7a8pBN6w2Ot+IBE1hUvD4bjm0LXgJ/7tCIt4ZvblB/OXwNSkzqNOMsPeT
8E2N0jKwcIh+pGtJApsXWhtSbMrANuuJh7ENCXauuV7N5yoDu/J4rnkHEkjO
lBhN2iKgThpXHXEhmLf8ITm7FHxHhvYvPSD8E9mYxsVSCsFCpR2mL0hQtr3j
WX1EMXRyBh2ffUOCXOsKXf3+XzClIr//wAcSiD61fKZ59BdcXc/Ju/ydiGfi
om9kSSE4hnw/ZVRAAoNlg4gVtkLg6KsUY1aSgKuMJbRHtwAahLJrV7tIID1x
Cz/RlQcv5Fl1HMdJ0D2Q5JGzPw9eOlqQHi2TYLOiwtcy+1xwoU3vc+Inw7Mv
NgERc9mwUST7x+WDZKhIcoqyU8qGywofItsUySCjdIez9UkWBHLZlpZeI4OD
zsjsZ9ZM+OtWELbXkQxk64t9LNo/Yd/ahuV9z8ggGB+mKMqfAS73X7qyphD1
bDc+77c3HX45rEzpEXWCXxaz6zqWDCckCuayd9XD7P6iDM3MRJh4gesVSdXD
vwzuHk25L1BBPfnzm0U9QMkmOKIYB617bFjF6+uhztbbI/5eGGwyP5kfNVIP
ibqFEcH33kJw3PaSH6wN0L83/ezJvldw5uLIxgrVBvDlG5sd7vKGwg/qwQFl
DWCQw652OtsRhX7hCrvV3wCcmV13W/Z5IquSLlLXxkYQuFlmUjvvi5x15T98
OdcIh9frTuv+CkHNpyMP+7Q1QoSSbqTC3o/ox+6zPGfWGyExquBIFvcnlDw9
Ehoh1gTPNyn/030WhwxHozt2uzaB0fT0LnD6ggqSn161EWiGM24/znic/YrQ
uadDK2rNoKD/+fG+wjRUURpeKOHUDDr+xloXpNJR1aiAydXqZqDl8Iov78xA
nqdTLtw/Q4Flx30+/xyzUNHstzhVVirkjbyuOL+vAN1f1bujK0qFyf5syyG8
AP1tCptKVKJCXZlnJUdQIQqT678kd5cKux/yitCZRYh1hCuutosKBqHqAWIF
JSjhj4h1dC0NWuY/HrUIL0dPgvOqTgzToJ93pVtgohx1JPawi7DRIatpTvCR
agW6nTy9pUCDDv+umKQcG69A+35H5ilU0UFfamVNSbkKibFkZbDQMDhsMK5h
V1WDxKgPHvYvYTDM07crWagWffXwfs1NvCP5rNgPWN6rRSuzZYWX7uCw+bMV
nBGqQ2siWKDllhYofedj4WRHQtv3/zelcLkVHt4vzl8eqkfkOCnnjKetwOjo
P7lVrgHRBnSZTqmtUCLimvn4WQMK43dJyV9vhaTWR5+d+RuR1dU8P6cfbfD2
l+d1N5UmJEi+sdqxuwPkTTTdKuQoKMFk9r25dgeE6GB+bUYUdOdonNHuBx1g
77LwK9SdggpC7VLU8A7Y+GI+43cuBd3ESwtPhnUCb0ZvIrsslZhekyp9qzpB
Wt2EutuAisxvhgewLHSCUKy/N8mJivhnPO2jTbpAzGmqdDWFilSGOTPlRLrB
rxrFfxCgof29rnG79LqB9cWFIi9ZGkq2zHh1yLsb/k2+VV3VoSEuc0v7tt/d
EBLad6LAm4YqdvpdvPazB+hvpctlBmko+wCrdvJgD/RxrB6sWKGhxsQTqnsE
euGUS8bjoR10pDwYwhPg1QsuXC59A2foSDOEpTjiUB8YLC6lpL2no8X9/1oE
VPtAzbUz2zmZjv6ZwYvUq33wdscNZ1oBHeVUl5kvveyD/XtOvXDuoqNctp1l
aow+mJB6nbguiqH+yMg7iuz9sP/MyaCUYxiaGnXmVvqvHxKW190nTmOowjV0
0vJSP/hYnJfWMMNQ7oYLyZDXDyd5LQwl3mIo5s4SetfcD1dmvZ5+icWQ4Fm6
GHO0H4rUnJ/nfsUQm4Cje53wADQdVpT+UoahG0euZasrDICvp7G1Vz2GfkBb
X7XeALgz2l7P4BjinJ9PH/IZgOO75mc+jWHoIdv1GJ+PA2ASK0hum8WQ1t1p
EfHcAeDtKKZ9XcXQhrzHLj6jAxAy918tDxeO1CV3hCtvHIQb/k2WyTtxtO3j
1rEl4UF4QOkOoAnhyKibrcxffxB4VRPHGYdwJPH+61uj24OwMbF2uEsKR8lP
/0offj4I0oHikzflcKTFwqfJEjsIfJp7e58o4UhUbsytK28QgoYlk6VO40gw
ztqumDII777Rj7ip4YjEYlb5eXwQKh7/NDLQxNH7tTfHA1h/wwVD150V2jja
NZJv6Cz6G95/6jMiXcTRnNcjuqnSb3gUTd1iq4ejnnTnq9qGv0EwQl48ygBH
dPWjgSccf8Nx5W0xFoY4+vRLfsvhAGK9yM2m+DKObFa2+e6O+w2GnNGeP4xw
5MEp/2Fr0W+IWC5vUTDGifzcu/CX/huCtc89MCQ4aqeuCpPxG/6haDNWgnvT
ZHYNcAxB1hEN/4vE/tLm8wfp+wjW7V46RMj/GMbHX3lqCAx6hQs/XMLR1Wz+
4EzjIXhnWUuJ08fRjE7X0U/OQ6CzWqJ9WhdHvF9XPgW+HIIi/TlJ5ws48lnY
EXzvC8FK94IVz+FIhq05wrhkCEL8Dd3ea+BIhZthf6J1CNS/NvzxBxz5Op1I
3TUzBJEW4tLbT+Fo0TR4dZpzGCLP5UtJKuLoTWb7lhqxYSh2ZXL2SeNoIeWw
Z+SZYciZvjRw5CiOgkPC525dHQbSKWfKFnEc5ZsWf5oMHga1w35OrwRwVBtC
m6OkDIOVClXnFTeOvjvbkL9XEuvUv+Y8HDgKva12Un91GG6/1elImseQUd2+
OV6BEaDVZWbnj2OoMSDLsVF2BKpEPCP0+jCEpV4ZFHMYgV8dNGcuMoaaj+dt
KPcfAR6KyphcKYYiPG8cMIwfAeOlQpf+TAy5aOC5l9pGQM7gEdYciaHxS5Fb
izRHQf3a5JONNzB0jbtRcdZyFFLKDy1Z6WHI2v30kvCTUbg5Q96hcwZDotJp
AepZozBfYppUKIIhIb0rwpQ9Y7D8IvX8NoyO9m6rOfJSaQyaAkbzS8qIfsES
4iZ9eQzuSKpyrKTTUTiZT0g7cAyOXf8sIuhHRx+kLyuHzoyBR+h/XkuSdGRm
zF+csXUcvhtZnOHjpyPW2NsqReLj0JK3Qi5bpyGVUvHPIdfGQeK58b36Jhq6
lFo+fqRsHKT1loLzbtMQa4SvUUT7OATb6p2+qU9DAxYjH8dnx4HTVuBinDwN
lXRTTp8Xn4AI1jdz3X+p6Ft3mCYWOAGsp1o0bwdT0RYOPh73+AngXeWLrCP6
79P40l8rhRNw59rK/XJ9KjLVbNHIHp8AydZDb3x5qUixMVag+cIkrDzbdtLk
PQXd5u1nsWZjwGkZchKdrRk9XJt4WirMgIfvN3VUoCZUeRgL+SPDAJ+p5NZN
j5rQgV+XT/DcYIAQOufhM9aILnJZX83PYYDNsQL2qIoG5CsvOp5uNgViFPiR
aEJGkZdTZhjOU6Bg5ejhxk5GrcMe27f6TcHmfb71P3NJaMd/fM/bvk3BLtlF
TQ9eElL9F36r8M8UVLMdvGRXXYvW+WjcN0KmgfZnn7MvbzXSuTj2SiNuGiwN
dM4tF1ahN6+a7mzImgaT+V+Zy5ZV6O5JVm82fBqY/SN7479XIjOtG9VhXEzQ
POklVadWgfhXcOkuHSZsGHjZdftHKbpxWoscYMQEl7+cQsHMEqQSPSIhYs4E
37TVvI2yJWj50/0l9jtMUJSvZ7Jl/0JazgKUjhdMkH4JV+jfCxDz0pFEpxIm
sGpSz+gEZaGcrIgmg0omNO3RWz9BzUSNt5Wy9pKYsHNObaZeIBM1tKX5BGDE
+gS328K5DGTZcODG7XEmTB78ZPjT5StqmXB1zJxmQqzSWBh9JQXVXW5eHJpn
QklGbLr382RkLyVjz/ePCV+abc+Gv/+CPOc9jgXwzsC4+bPioRsfUX6USbCM
wAxsJt/msLgThcJL9gJJeAb8dhz8a/EgHG2m7ogrEZuB/fm71WxF3iCm7ARX
kcIMsHz+5JRZ7YQM/A/+ZTGaAU0zFLV99j3QGBwqLldmIACGRzSHI8D86FlK
o+kMeHwGC66OD2Dz6zubzs0ZiNUai+Qq+wx6G8J3XneaAWnHtvJ9FUlQVLtw
W/reDBz82Z/+QzkFou+cVWben4F4C0Fx0s9UkD0Ra6bwcAYGfhZ3v4z9BqNS
7fdbfGagu4zkrFTwEx4+SLi03W8GLvQnXKC4ZEJfxfJv2YAZeI3zHec9mgU3
RqX11INmQGBHP80/JhsShe6fkHo1A7dK0tx/GuVA8uf1VdaQGWjn5R7z4MqF
gWu1ao/fzoDKD/U9JM88YLwwbt/9fgaMPk9RdGXywfwV7WFS2AzxXt1xynIk
HxBFncUvcgZkxqSk9xoWgi/ZdUNr1AzYf4tFNexFMPx2+2mB6Bm4rfluO6Oo
CNo1lz9YxMxAckDS9m/7iqFxl9PVp7EzcF9z95DBYDEcTLXX9P80A99d92jp
J5ZA6E0etwefZ2DFcoYWb10KlEyO5ctxhH1OBdJnxRCMxjsPCcXPQIT2+82y
gwjuWAwbNBDcENz1PNugDFaqAvTtE2bgqkads3NGGYz2jixOEbxu8TuBvK0c
drqKXLf8MgOc4sorFXfKYcEjK6qY4PnhrcYmpHLoicgq25RIsOVEmO/BCnD/
9nlSgWDTv79iNZ9XgK2sh/xlgjN5qoxjeyvAvPLbTzOCEXtB0otTlXDS95in
PsF3fGoeboyshNch1mnHCI67nVi8dbYSTO8dNftDnHdsJupmvE4VSPi2JmcQ
PO3/0rQ8uQrsr8qlXiK4LJct9jZLNQgefObZS+g/sPHyvqhr1dAqek/5GsEz
qQ8HLmRVg2bL8Q3o//64dLHnGWcNlMWYTfEQzFr4cJeCVQ34tW8S1Sf8J6H+
Pti+sIaY+799f0T49/ejPecEeWqhrFnrVyjhf6WX4ZfUbWuhgXLKJoyIj2mE
d/7vX7Vw95El2Y+I39hOj8C/PHXgFrqyxerjDFSsS7QG2dTBno5SDUki3i5b
nhYGFdaBZAE6GEjkh9a1p3EdFiSI1AzaIRQxA+Rd/P0Hs0iQ+vjDow9EPtnn
Kkr1bCKD9V2N8zeJ/Atpy/ILSCJDgW/Nwtc3M+AvPD/sukCGEIvrX/tez0D5
cuzG6rP1UJPOnyNI5LfSueiTwf31wN5tdVkokKjfk/vIa8caQCabL4iTqIfC
GyF/yI8bIDntqmE+UT+zPlNaHjsbQT2j302LqK+zD4Ra2042AZch71yZ+ww8
rPd78c+3CdbFNqgcdZ0BnWudV93JTXBp32BTM1G/fqU3xs5daQb1/v0OnHdm
AL+u9DA+phkUDxXcV7CfAYq6Q61GfzMMLNy6f92K6DepZOVj8hTQUf5QYmox
A6XWeX12xhTwDLUQPW9O1I9rbpu6BwXMq6Ib/hgT9f1Vvao9jwKstIMJGdqE
fNR1+oEcFboO7K521yTi91jzcoo+FXYqd++WVp8BrmtH1p7doYKg59Ckzymi
vl5+bD2cQAX87cqlT1Iz8O6gT/n5rTRQiW4T4pSYAT7KbtcMMRoMIWeNOweJ
+lgw9is8TYOOwFa97f8R9ZBV1FhwlwZallciO7lnYG7T22iTBhrceXQxaXHr
DHR5bOmkDtCAsvu83ubNM+CtxyxiLNPAt+wHLw/LDPw4YhDDJkYH7Y6LbblE
v84OjD6Y5k4H23dW0kETxH2jkRYh+pIOAeY/HExGmMCZdumGdAwd9LhTJFt7
mKBSKOYuUU4HVms2L69GJnhcac2+y47BXqNAL37ivohnbq2p5MeARSQtK6WK
CYcqnltnH8RApEzqZt4vJhw4acR+UxMDe/UwGfl8JvS0l94VNcLguGJ8/7cs
JoxnvZdyt8JgioM35OVXJmzN6AphPMXAb+v9/ulEJtScjkjeHozBKz7nCoM4
JuR+OPevNhKD+yJOXRsjmdD/JsJt408MInS0nIzeMeE7pY3/+S8M+I/cORX/
mglF4TfYPtZgIE03UZXyY8Ky/LGxN50YmIrlNTs+Y4JDSIKb4xAGIbdDdVM9
mSDik/mwdwqD0JWmmp0uTCjzoksFsuCw/+A94bOOTHikXeBfshmHBHXWHS52
TDCd6PoSyIPDuI/qu/LrTJizCo3sJeboirzvD4auMuGsWY7YHXEcdE5FZLIT
93dav8ZI8FEcDPlYnMT1mZD6RKdMTQYHwd6/LWoXmMT9tvTulSIOdYzvIuaa
TNBXDj7reAqH4FvKd9xUmcCj5lDcBzg8M6BPB51iwoDkrt9jGjg4N+a3flZk
wlFbiZQX53Awv6A2el6GCc+ynzz8cwGHUuq67+xRJlSF79rM0MWBQv3Q/+Eg
EzIYbmetDHAw2Vp5WnUf4Y9Ujv+uGeIQcEqGOiTMhLVdh19RL+NAq/6MB/Ez
4dox0ef1RjjEXG/0O76DCYLV/61rGeNQleEpiG0l4vXNYEWD4NNct8kP2ZnQ
UVHxoIL4Por7GrZnAxMu/HF/VEHIE/jA2xewNA2kk1fZzhLnHZ24/YM+OQ3h
Oppi5wh9dLaJv9g/MA0LUewD9YS+jd2J3a6t02A8ZqhLI+yxcD8lXtcwDRzc
TQ9MCXvlHh+h/lcxDamemz2sCX8kP/po9Dh/GuQqvCyYZ3DQkkvZ35k+Db92
fdBbV8bBfVn7ByRMQ2tCmmWIPA7hfy0dvkZOQ8UwMzfuGA69mT9Jgq+n4dj0
OxeFwzgw+dvOhPhOQ/PLuEKdfThkj3rIv3aahus7qsI38eLQdNn5g8CtaQjk
e+r3ZQsOEftUur9enYbl4qGcGiJ/Jjls60Y0piHJqisjkoGBXWOTYZjyNDy8
IzGpOYiB5DZR3wvHp0E1JEn3YRsGXmli73GhaThoeuq5QzkGr9VETb7xTMOX
7s19ErkYnAx56v2KfRq02Gxd76VisL5PpP7+7BTUXHh599VrDIryvMkPR6fA
yKHC/dYzDGRcQqeDe6Zg5pnTbNk9ol4e5Nh0kqcg6ilrGo8hBufdvd4Llk8B
y6PR6E3qGLzpvRZnnT8F8qYSTl4yGNSfWOY6mjgFXSs3VbdxY/DsqNGup15T
QI9JYP9YRYfIT777TrtPgZPJxOW2n3TgM7O5y+04BfdqTXvjiH4SR/ZwnbxG
vKdde9/h9+lw7cjlrPeKhH69PLKdu+ngfeWd3ozUFJzZKHLAeyMd3JT33LcW
nwLxll3mOeM02LGTeFDzTUG7AtbVUEgD2+XnWTNzDDDYIn+0yZAGLxV3Xjk6
yYBoMWGDx0o0mKyeqHzymwGsm5sMyvbQIL39soM9zgDeH2wX+Uao8HXDtUXH
Agb8eu92e8GNCjnOCoy7mQwouLPjy/0rVHAVifYPTmNAQnd66StlKojvSljb
FcsA5u+P56PXKBD9ZtvrR88ZsFm4dFTKiwJUha97TJ8yYAP77utJ1ykQsLBx
09UHDCAHKpxDKhRQvWu/+/sdBlhKYN1Fc83geiNgmtWWAZIZIcY1Gc3Acei5
9WNLBizKUzJF7jRDrkG1U7UxA15z5pz+2dsEgoOJ8R8MGHDyknIQM6oJlPaG
Zb++yIC/v/7M+1xqgpz67V9b1BhwYfxA0KeyRtgT3qowf5wBM60vdCYjGkD6
S0BR81EG6EoWbB680ADf1XY+ajzEgOX38dxK6/VgL3SnUnovA2JW/7VvulUP
gp+EuiNEGJD4+CWfF189CAs56ezdzYBZ1f4X16vJkLO6Fz7xMsD7s5PUZXEy
BO0RuPCemwHxTmazjhiJmPtbCtO5CP95ue+a8yWBzYwYZXwLA9qCHOxHpElQ
0rjQqMvBAM8sibKLPXUgfNhhDmdlwE227vl9wXWAv2569nwjA24vY/13TtTB
Xsc7Nfrrk4A3+Ny0CqmF2FDO1btrBOeYFfEq10KGuXVwzsok7C3IuHJmsAYU
ioOy9v6ZhMKs7WIjr2pgE1d2WvbSJJjLLHBxK9aAcqP8d6fFSZh0LNtY0FMN
btcDZ/UWJuGuwpflwYBqEMnRzLoyPwmdDdG/w45VwyexAwcC5yaBmXkLNeBV
kCE+79k3OwnGZnf9Xj+pgrw9qVOWBBsM0mXa91fBUfnzWVsIVk28UJdZVwkn
Dq8ud8xMgnSN0MXddyvBRnJlHiM4vYS3bMfOSnhY+6F1ieDTxY+Px+ZXQGiR
BlWD2J/Auz2xxKwCbk567CgkWMZ/SML9Xzls9IuhXyT0edLpwLbhazkM7gpu
3kjoez7kH7uCYTl8XEk80kPwVl6bXt7VMphLiGTrIezru79FNeZLGbgMmwZs
JPzxcHS9k3axDCyNpZsuLk8CuXK4+d4IApeQhPVCwn80XgP5WEUEvZF+Srqr
k8Dwphod8y+F/SozH9n+TsLsIY7EQ/QS0HS4oD1IxOeqoXfkq70lUPtByXyY
hQE7tH6kWDoVg7Bs2sL2TQxQ3EDXTyn8BRULNJnrxDz/YXR6mzXbL9jsclSK
SuRDmn2OVbRBEURaJTRLbGOAv+t0r89QAexfYU3n4WGADOM1/8njBdDlK5ol
spMBU1UsLJ4P80H8X3tsCpGfN08M7fu8JQ/OPqFmHdzDgP8wmcfBl3JBmVfC
oIHI73fXh+q2fcgBWd17nsGHGcAmcyN64GA2HJDKk06SZIDcOU99FacsEGni
qhiSJlj4hdnJ7EwIsrlU1qnMgN1+CtMyZ37Cns2vtsTqMqAi8ZDqWFwaVO6a
ezxtyADtPx0K3w9/haDkBxduXyXs/xnENp+RAkrWg1L0WwwosWQ+OVSSCPvO
xar5PGFAfylP+HBSLOQ0xzdyE/3Eiz3qj2JGNEiJDbLVvGSAeI9L/MaCSNjE
8zrsayQDfvIGIK26t+Cfa5apm0vUa6HXjmdhD+Dji5dHhUoI/9WQ509b2AHV
rOLe9mqiHw4/+fephBPt4t92/S7R/1L3Wdi4/HuAhAorIrYuM2B4P2JdHXiL
Zi+H0fPPTgGHf2KPIzkRKcdUDvToT4EmP1tG461kpMZsuiT///9LNr17/20t
BQnnMnkc7k/BUKSaWqHkN7TN69H+fwlTcFvOsjK44idqDOM+F5kxBVzmjqI/
XmWiPwfY5K4XT0Gjg3LnbZMsNBfbw3K/ZQr2OIhu/ziajQ4e+hZVzDUNeu+M
5m9x5KMUNHegjLj/NlivjFIa85Gox6mPzMPTkJywlp71vgBFZT9taNWchr7j
W95V7ClC3xfiH/zymSb6ziP+CIkS5NVjdK6ThXi/PdeUD39bjqq3GzSe2sIE
vdKQSdvpcuRG03yVSbxfQneZVDfrVKDBK2FGXfuZsPs0u+EN9kokfeKvvqQW
E9pqdubLuVUhnucJdz+FMiE978uVaaVaVNAtoaQVTbynQKBM6U0t0vJp8NlA
vFfF18Zsln/XIsqkkEAW8d7dn6UeSQupQ5OnnpUs9RLvy3ZO/+JOEjLNrJNc
kpuB9KAI9fKrDchUSHMP9xlivnzpOvUgrgGNpx+VVCTmjeX6kR8xIw3IRKPm
cCYxn1jFLFRLuDWig4vPxa8Q85TNdeHrsgFNqMi16v3v0BnYM8iSJktqQmdL
Jv/zJuZBpW08nBFbm1HQTzWu/p/EvFZ9osQ7pBktKiQ91eqaAYdyhQ5LLQqK
q6kTVxuZAT1eXMzMhoICzU3atWeJeSnsbNcGPwoKHbfGvDbPQtOKzn7DMgoy
7dl82EdhFrQ4Pt5gyFMR+dylodK3s5Cgad4Tso2GBD20+R7FzoJJp9kjzkM0
dPLLuT+nv85CTeXfV0dUacigepv2SNks9Cg2/WfgQkNVslOfs5mz0L3mbCfT
TEO/FXoOobVZWFB7fOzXEA1JToyLY5vnQNDuUMLvVRpKfZLRt3vfHBy0u9/I
d4iOymw4GrkN5yAhPNGw5yEdiYabPLe6MQeeBkdCr72io5Bu0q0Shzm4l81y
xOUzHdkHjfwJej4HPLssxlyr6GhlqYnqnTsHLU8pT0u2YCh54oQMT8Uc4LJb
bu4QwlAp08Y6uWkOzB3lGtePYKjl/JGo4ZE58GKm/k3UxtC6UpFjptA82K3v
s+D3wdC7idMesofm4YEwdpHxmliPWSktkJsHlb9L/hbRGDL4/tUW05kHLeNY
Jl8WhrSnv7jcvkbwheX0KyUYCno7unOT7TzcO+nZJF+HofTMW+4az+ZBn2Xj
3ZIuDAUcnOodC56HMA3nF/bDGHIMdFQKi5qH+fOYyvdpDC2+2bllPnMeOls6
azduwNGw5OLRr6WE/IB32ju34Ej9nPq7m/XzED/u8KuYB0fb9fCnnb/nwUjX
eLBdFEc/dE2+x8zMQ9tx9cu64jgyDM9zs1yfh5sDHEevHcURpWYm9eDWBcBs
OXT/SuPIOmFJdFpgAQyx2FhlRRzFtad/KxRbgOgesU3//78/emDiQIDMAuRd
nrPxJKZo63p/c6MzCzD25vpPLw0ceW3TkBC7uAC0kdwmoXPE/pu/by5cWYCW
zboZehdw9Or9gbZa6wWo0b+vLqSLo/0mOTc/uixAyS43z6f6OLonoEl39loA
ubnPFx9ewtEk9myDZvAC6P1RT+e8jKOqac5yoagFsO7/GiZvhCPVDUHDzMQF
yJXd92+BYMWMT1q1mQtgemNhRM8YR3e9x3JjSxfAjnpfFwiWzOTc4la/AGf+
Dh2vJb7P4/jCd6FtAfaafHw7TMgvTTX6/t/QAnSf6/WINcRRz0RlyvzMAuB7
14cmDHDEKh3VVre+ADxzGiNUPcJ/GU/4YrYuQtydNT99HRy1Ge+Tviu4CEfj
7tdbn8cRFnqKBcQXIZ/GrNuhhaOiQy+ubZddhMSjZa9N1HFUsK2Wp+vMIgze
PiwpdwZHXIo1KykXF8H+pXNBijLhb7urky5XF6HLol07R57wH49ZkbLNIvge
T1m4ehxHKwXmUOG1CBi3NfedAzjK0dSL8w1ehDWbqrw2ESJftkTKqEYtwso+
h+meXTj6yZ2knJW5CHe9ZD/nshP5w1lvaltK6DP30TJgncjPS1s3CNQvgjFX
6znmAoastxjKOv1ehJeVqzKhgxg6E65mzzuzCC6bJ0Jq2jE0pfnfo+y/ixDl
l1sd0Yyhh38MfEf5l+BT4N0gtiIM+SVxRew+vwSGlMeW+4MwFJOhqZZqsgSS
YYNm3E8wJP2m8LG09RL0PHU/FeCEoTxnbrLksyXQHF1Z5tUn6u+iNkdzzhJs
LO87k8WFobpeaVuxCmJ/JQgtr9DRfNpihkvzEog84a8gj9KRoY60wtzYEjAS
l0UEK+mI61G6/SvRZUjscxK0uE9Hn869ffbx6DKcPSx5Q+A6HR2mR4/GKS0D
q1jausU5gm/njr42XIbPz06fSxSio1J8UnbCfxmKbvzS5CimoZaPmdqB48tw
uejF08xxKlqeiHs+tLgMjtbc/hlNVLTYYrhVcdMfeHnmXp9WFhUlFM5r/xT+
AyqyJ8XOPqQizzRrf1adP6BwTcE0+B8Fmch+kVy68gcqx70dbPsoiMI0Kui8
9QcOhL+U7CP686cGctOjx3+A1Yfzc5Y3BeVkaGqxpf2BgCJvvealZjTZIH3d
N/cPiDaMnvmQ3YysDrxnZZb9gRtfFm3T7zaj2Ua5mzGtf4AqkxeZM9CE1sf+
TcqzroBS2OnZhxWNiOU6m5mG6Qpw+oaJqVvVozqlsz2s1iuQ9fH5uXTBenRS
qa07z2kFJMrDzEOayGiZGtE34b0Ctjqm0mVKZHRse/tERPIK+Nhfbd3EQULa
S/Hd7VMr0CGwX+rGqxoUM33EN2JpBUiHXN1XT9YghydCG9VZViHC9avokbFq
VFrseMJmxypYPtLaoHK2GilFW27okF0FDtPWJ04LlSjao8Hb4f4qeOT/inXR
LEcGhlFZnJ6rwKPdwt7BKEOjf5vdonxWYbjtoDMjvAx1+B+1fhJKrG+aOE+o
h2jZEfzW31fBlt045f2/YiRb/ROSBleh6mn1oX79fDS5nrLGP74KtD+nHPMi
84j8eGTmzlyFP4RMod5cZFUsRllaW4V7oud3xjjmIG+5aza8u9ZAYIu9/pRv
JnpVV/gvXG0NaE27yayqKeju6nY5lXNrEPXmTMGBpCTE8urlP7LOGvQkma5V
bElEUexPtBOurIEq+eX9VGoc4n/nvqzouAbDUlPHZIvCkJ+Bvv4+lzWIu0LM
wl5vkafKI/559zWY9VnRmPV7hfyCP08YPluD2zvmMkrFn6GWh82BC6Fr4Jfy
3qom1Q1CTy4pHAhfg7Z8/g2rjd5gGn1ZV/nDGnhSvLOPn3sBrEXT5aLxa/Ap
bLP/hPA72FjEytecsQbGO/uzltk/g8g+Q0vV7DWo/I+Hc8feePh94rFcdN4a
ML8cLFQtToCzHesBHCVr8Ha0XfDiXBKMHrn2nVS3Bke4dyRuNEuHwBStpWf1
a6C2aPrPZu47LOroc/zXtAZ5zXXZgsEZoMLl/0WAvgbZ0mM6B8wz4ZPmjKYL
vgZ8bZ9etB7MggSrxY7s1jUw1GNk7Z3JAh22A9zznWtAl/FXtvDLAbIeqW6m
ew1kvrpcuKibC/Z2bGltvWtg1eyaX7grD9gXN4taDa4Bl4GA9NakfJDl8W9m
HVqD+xHPNw/dKYCsV/+GQofXQDaF2nJMthBmD/D724ytgWCxIy9LSRE0ubyV
/jG+BptTeey8fH4R81tdQN/EGqxjj7xNNYtB8pd79NrkGlyz9eh8s7kE1jxx
r41Ta/Bw6dvy7voSwj8p52YJ5tmfZT7/qhSK9xzf0jC9BscYkqFCegi2Pzje
9oa5BgPv5rjPcpSBedAU6fTMGiTreeiJ2JVBA1N2HieYfMiw6X1NGfAWaDhd
nSXWT7ibp4qXg2DvyMVqgkFyV90Vv3J412yTIjK3BqlyxQOfB8qBjPlG3iA4
pd3Y20u1Amzf+MoHEzzTeurBTGwFaNkejEwg2KFVPW5xpQIC59PbEgku3V/b
EnylErIWvkS/I7iD3dtuQ1YlDAzWSTsSPD6+uoGDqwpM8s1yZAiWynqcHG1T
BW7Pt8MgoQ8roU5RaRVU/Wad8CY4ZlpF2FqgGvQc6TROgud9sOVw52oI2vxs
hw9hn3a87KpubTUU3HlSMUj4g70j43iQaA0MOGdskCPYxNc6Wdu9BlQeOkzc
JfxnXSJ3/0V9DRyjOMVEEv59crcl9ey+WujjGJH5ziD8LTJs5eVRC9Z690gZ
RHwSK0Z+ydbXwg0St89nIn51ESY0i//qYLi8nKxFxPtu3YMykZo6oOgvRq+P
rMHB1/q/UwVJkE59zpFI5McW0/nryQ4kqIi7p1hA5JN65bNtU1xkqFFRPHlo
YA0abQZT5a+TIWDxv+t+fYQ/Puy3GUong8PTNy+2EPkZoet73OtCPbDEpNJl
iPxtlEIlVlH1YL7AWafdvgYs6mJOaUP1kNOy84QGkf9DO9KNzb0aYFH7wr67
DWuwdnx4r3BqI9SobonjJq9BqPwD1zFmI0i7JU7E1a6BlprV223KTSDx66fv
+4o12L81k2xQ2wQtiUnCC4jIhzrzEsdtzfCj5InIOaJenfxYJdoMm4Fs8WO+
OJ84f1vBhcjOZhgeuCTSn7MGEpHZK67cFPAts9NZzFyDFZHcTeXSFGjJlnCY
/7YG3T6Bp7XuU0A+i1Xy7Oc1uLXn9Z4xJgWY/1rFFj4S56udak7gpkJW1KJH
VNQavLyg5rcq9b8Kzjwequ+N42NmjKUI7WUPIaWQbHlOi2yFLKUsIdqT7NKC
KFQSEr4UQrJnSSWOfV9n5lZChKQFKS1mLL/7+/P9uufe85znfJ7tNa/X9MDz
y2eJ5/fmoMjHx+jm6R7Qa1prcfj6HDSIZo7+7uuB8BHG2CMyn53P1T9w/28P
fL99Wbs/kIzvd49jOsWYcNnOp3urN6kXVxHTpUZMEFsV12PmOgfrfuavzMhn
wvDqy5RgpzlQfC3y2LmeCVEGpk1P7efAKsvSqfY9E9R6/pQPWs+BZFvMs7MM
Fiy1rHH/uHcOzD9sY1geYcGY5ZuMdjQHwum6DhLnWZAaPJ9fqDcHetdz08KD
WECN3/HeQYO0v9Lbe2cWC1ymu/iObZiDnM9nNFdNsGBIrm23kNQcaM97DL2Z
Z0GBomR86Toyn9lL52kIs2Hrs9WbpkTnyLyRfqJxMxs8e57jECEy/1y0eTmr
x4ZmxxQxEYE50Bry+t1sygadv7eS1lDm4OLXCYbOKTb8kQvdEMflgt14qnmf
Dxs+uKWLCf7lgqX4xVOrr7OB03Ky/dMEF/Rt7jKOJZPrrU9ZOfdxIce521C+
lQ37MtYXl77hglUp81A8mw1yjoVtNCYX4gK8nVM/sCH5SHjf/WaS185lXJ1m
w+s0PsXeOi7QWfeCLDlsEC7v7VuDuTAeoZhSRSWAn1WiEFXGhechVTOOYgSM
bQxdUV/EhXSG73DMWgLUtDVX/83lglZkqq+jNAFbpq2ObnzChazp9Ls1CgRk
93gL2KRzIfTtmNBrFQLOiO+0CEoh91PqYx1QI8CVa3/0aQIX1F/MNPjuICA5
+65VdywXFOsLWjX1CBi/n3TydxR5Xr9brXcQAd5x+2vXRJJst6IocC8B4nOX
7+qEceFm3fuTFCMC0pmC3KNBXFDY7D+03pSArJ99Wy8FcmE4Lkqw8wABqWr9
9gm+XNhT1/xulQUBCbfmcsoucuFS1Hv4c5CAUVAzZJ7jgoFYsOY5KwKqeXwd
Jk9y4eVASJm/NQGda+vWCh7nwuKqovL1NuR+d1ZlyztygRM3rG1DsuI+d41d
R7jQPzmvI0+ytGbzV3trLqmzqYpb5PuRQTJ//c254H+2AIeT3xd75BN234QL
Mld0TcUtCYgPr6wpNuCCnEya2z7SvuK3k2+7ERcEtH+t5jMjQCX6SvgNXS5s
1k6RlCbPd6mflrlTkwsPV8zurzQkYO+zK25/tnLh0IEXzz/sIeC1/wDPs01c
MNK39wwF8r46BIvPK5D9VcL2xAIdAn6qf8xXkeHCs67jhg7bCXB6t2Xz5Hou
iPqx/4tWJcDDsORk8Sqyv7qz+4WREgGOmyTvB5D9m2359powWQK6+YQn9izl
goU7zwfD9QSEH0/kDPNwYdXKEwt2SwjgtIlIvZjjQH55gmMBqafwS7Wm98j+
cGEbcevGLBuOWsYmWUxwoL9vq3zLJzZktzGVd4xzIFtOiq7Rx4bUnMhHsiMc
+N5XfF++mw3ev71EBXo5cOFnLTvlBRuQ6HAgnU32r6vWLZHPI/XvB5m8XWR/
urqFV+MRG+gx74XWNXDA+DXX7ysZPy7pxi83V3NAfLlGVAwZXxTgnzOs4MB6
UeWsuhNs0KjQlrz3jANmNiGatYZssJ78khv4kAPCu7smdOhsEA+x+dKSyIHX
xiPLt/9kQVG41Unp+xxSn5U7KgZZsDvX+M/YLfJ7P7WVzr9kQULnd6GhAA7M
/F261vskCxiHqIs+PuR5ZMKC3h9kwZYvkx0rL3Jgf6dbZLcuC0on+ru8TnEg
TiMj/LwwmX/cvw8VHOaAdFQCK6CACZab5SDRigPNqcNDZ+8zgZEhLXjXnDzP
Yti76UAmWAhJPk0x5MApmfneCkMmPL8qa75fiwP+GsW/bN/3QIb5riMPNDiw
MzpYhFvZA7ZdfmZTW8nzZRbNbU/rgYX2iZJGJQ7UhzGH/U/0gI7ICfc14hxo
H4MGg+/d4B4bYMa3lgO/pPqH+zu7wcMvNoe6igNLrLndks+6oXP9DzcpEQ5M
/jwemOndDfwiEkt3CXEg8L3ymW825Hq3Da8vCHJAL/N01AfNbjiXUFU/Q84n
RqyO/pSpLjixdLOLKZUDzuNXWUmFXeD4TCG2cHEWqo4Fqv9174LQ+KuaaZxZ
UNIZtWB9I+ufV5Xs5ulZWPPr+n87P3SAiZHzwq/JWdiqv9npaGIHLN037NXy
fRbev2uV+WjVARYn9uakjs+C9yE9KbWmdshQPfA0fYyc1+RF5RavtcO4RkhV
yegsBM93lOtqtYOIZ2AG7eMsfOTN3inwpA3qn9Ke7R6cheltWctSHNpAclLf
9N4A+Zws1VnL22D/f3+THd7Pwsp6d13Jq60w5157p+/dLGSt7l8frdYKqdT3
V0+T85lgR5jmlbEW8JUQ6yljz8JaLYcNXftb4Kj131PerFkY7T9N2bHYDIz7
z9z3MGdB+pDzZulnzRAqxZ6T7ZkFfzaf5m2XZvA4/XDz8u5Z+FP/X/bl5c3A
SeCuW9E1CzmkrH7VNcENnpAP8p2kfddfikx7NcG/NM97Rh2zsGtj/xb/DU1Q
m/Fi/+X2WXAbFeKPZDZC/MdxxZq2WTggEaCpGNwIzU679FeT7Hg25pC1aiNc
HcrOuNo6C63eInwiAw1ww67A62/LLGwuHxm3j2yAH/fCa4NJVti35ZHejgY4
FbsyW4JktWu6XUUj9XDU9L1OW/MshBT7SVfcrYfXwtR7kSRzqk/qOejWQ+sm
x2o7kp8UpnYmjNWBU6DbB32Sn27FoRfu1QGaUadokDwrc0x4RLcOBFGkji7J
GTzLJX5/qoVVlh1p1iS/t7VzfXK3FtZQGCZBJF8Xf5jI1aqF6OShfVUk69Al
vX99rAHx2LxcYdK+iHfTedGRNRDPsL91keQ15dwFtloNiFy8/m+MZBWzIYXa
99WQbXCE9wJ5fpllC8NHQqphb1xZnQDpH2Vb118pStUgXChqUE7yb+X76tJp
GDg9N5P8SP8qlAqru05WwdJ2JtuE9P+LIeELS3SrICrnAH0beT+V9RHea29W
gofORRl58v7MmrXOyLx5DUaGUXGbyPt1cHObSJZ7Df+cGssukHqwf6IhM4df
QfJcxLV8Ui++J1uTxpa+Asm8B2/mST2Jfk9XtzzyEkJ3U53ekHrrpdI9Xv0o
B/5xjVzH3lloWdY1ValbDgWZ9mWzpF4nziFDixvPIVp1v8apD7OwrqHqgOq6
MhhmDPErkvEhNPD3w46dxRDEOn/JkIyfDjkdteVhz+Dr/vXzAV9nIV2KsS2x
vQiMEoVs10zNwrz9lYATZQVQ+sAPdGdnYbezuzP9cza855asnuHOwv7l338o
ez4BdgKvXvUCqd8CrtngXCa0Pne/FkPmg2t19h+FRB/DH+3Tl6REyXwcuXgi
9kwSqNye1vdaQea7B5f+mgY+gIS3fF7vV3Pgm4SocsytOEhY9kBjRJIDCTeE
jvAcugNrHsVYfdjMAYtG55UvdpwEl1Gvjo5tZP6ZVRWTzaRjyreS2u7tHPhX
WxU72H8Sr3PeIimqz4G1yunxXyqC8ZjFscuBZH69Ie2Qvzk1Dl+9KVPOsOZA
Iq9yxOjdB/j5hL1zpi0Hxn1q0xWvJeE/O/f+FXfhgOKJd8XLtqRiKtf45QyZ
73M+9Xat58vCQYJxo7vSOMA1OBCf3VOEcyqCf157woHbx7o3dyU+w+6mwZ7s
fA5cOc4iop2L8XOB4cTqVxxQj7npxZoqwT9YVrIZBAcu4xqNXkY5VhQjjtxa
xoXJkn9ugusr8ei0Gl15NdkP2Pp963xfiVUsWzZ9kORCGb1IdzyxCl8tNcu4
sYULpbzWIvQl1VgkuJZLmHGBBx8QrgupwdEXl1YfJfuvn70q/F8c67F0UMJK
w2Syn3lPnPZ5UY9bz4T4G2ZyYcZr9m+kaAN+c9SFc72cC8Kh46nGtQ24mSb6
cbyfCy+SuNMDEk14t2mQs9GmOXA+Ie9ZXNGCdxfyc09unwODUnvH8aWt2DJ9
P06EOUgUPzwW7tCK36c9Qepk/y70+FIsdb4V52xPsNe5SvbLinlPsjTacbu2
gVMAOT8dDS6IUA3rxIJpOmFfB+cgyX9KKbipExf5uVw9Tc7zswcOy2oLdGEn
SuXZ6MU5cHC2WHgT2YUbj/5KuKo8D51dmqlWe7pxKOdl09Ht84AGD2ynu3Rj
zs226j1oHm692MBzPKgboxu0cN1D8xBwQ21I8XU31nl8M6EqZB7qbobeblDt
wcoSysbzd+ZBRH1DylvTHsxR1c0xTJyHXUoaNrEnezCz0Pj7QuE8pD6MieV9
2IOF2/jO/BqYB6uRxbuNDCa+9NPsFEt3AVoioz1Mmph4/IhPRoXhAqxjpvW+
HGBi22maer7VAry7Mri87RcTh3Zxs3PPLsDXJyIGPZIsvKZuIlE0eQFWWZyg
Onuw8FUPraUoewF+CSpZsK6zcPfesru+pQuQmfdp22g8C8/13Fbgti+AJ+Oy
5lAFC/u+2SbquLAAaTMJVjt42Di5KPdWs+AimDS47YkTZeNDeqLt2qsXYUvT
ddodGTa2OGX7R3XrIiQuf1Vugdg4arD+VqneIshd3Sm23pyNZ+w09MF4EdJt
vwkEObDxj7h+8xMuizDx/WDJmgA2juPNO0K9sAhpj/f1md4gn9/JJx4HLsJX
r6Hba2LZOMl1j/+fuEXw7z1390ouG48qCBUQTYugyNoRe+EtG8esLLXLJRbh
g06Slc4w+X4UsMNGFuFNwYG7kd/Z2LFF2tBocRGcZD0jXi2y8d+wj+MPGBT0
SsTybSI/gWvKfj6+I0RBJleO43kRAue0SN66up6CLnosSbaUJrD6L9q1AFkK
kqUUae7ZSGD2ov4/HyUKmlTNKC/fTOCnASnvvbZS0L89ArOF6gQWzxgV8NpB
QQnne99u0iZwkAzztJc+BREJ4+qb9An8MUH8g7cBBckrfZrK302Q/vE28dtP
Qe6ZttMl+wisIhQac8mKgvZaZUvvNCHwgsF04tWjFHSiZuVp4wMEVt3psPe6
MwV57cIv3pkTGJ138wk/RUEtFqmUbwcJvKiTIRJ1gYKyf9zTCLIi8NrkZ7Ox
vhQUOGFimmBNnrdyw4qkKxRksdJJX92GwKdy7+5JDaWgUIe9ggdJ9vwdcTbr
FgXd/2tUME2u/3z4yYW8GAqSs0lRWfn/31ecr6gXJ5L2rzePrLAk8MSax0nl
qRS0g27SNWpBYJesZ+Gvn1CQSvFhxj0zAhv/3fuxuoCCat2ldlabEvjgibmb
9WUUFNEnH+ppROBk50CnptcU9Du6ffLJXgLLi54xa6mjoKK8g7FOiMCcOZ/t
ra0UJGHeFZmsS+CLJZazLT0UJMqvO22nSeCtF15daX5HQa1qbp8ebiUwvdI9
q2GQgpR3/Qt3UyZwtIz24ZoxCtL640cp2kBgouqbV8UEBX2/i7yuihNYTTI4
KIdLQS42ln+eLCXwLK+21iMqD+L7GXacRiewbUXot3sCPIirToSNcNjYJ2KR
7bGaB6kulNeqfWbjdi8Xlr0kDwqX7bZI72djo1W1DvvkeVD2VcHABz1s7Lvo
/0RUnQe5SrCeLn/Fxllafqq/tHnQpg4brf/y2bjAqobdg3hQpduQ79NUNm4e
0BO4YcaD7l2M17QLY2Oe3GRnOxsetP7ur8OLvmw8ezjr9GZ7HqSu/+L0plNs
bBL2aX3TaR6k8EOlUtyYje+Mj96N8uBBG6REy4a12NhLdYOhpR8Poi6pEVBT
ZOMDfAPLO0N50J7HI1buvGysMfFeJ+4RD1LJEGk79YqFG7X36rdm8qDplpaq
3icsfN0+xXAulwcJ91cqjMWxsEvDytXWL3iQ9oREL/M8Cx/XCTra3c2DmJQ3
g4z1LFzStVN/9A0PqtY7ds2Rl4WvLFsa9KufB608Y8K0nmJiXeXkNtoXHiSy
fMNhqVomPkpVN/pCoaL77xpytI4z8YOlgR8JBhX9O52YGWPCxJvihzQrl1IR
beXhZXe3MfHKodnGwDVUtOohbLu40IOzX24+8lyVilquSMl+ie3BcrdHI0Uc
qEhaYJuRTEE37juh8OGRCxW9OVSsPHy3G7/8El+leIqK2vPTrc0uduMMx9uD
Cl5UtKxl409l9W6MbUdKmeFU5Jio8EzoRBdOTz/woreYigb67dLKDDuwbyen
YbacisSstsnp8HTgi4feWIpVUtGaX8hI+VU7fpudmqvSREUzGQx5K+V2nIzr
8uh9VPT9QFPOFK0N1w96CW7noaGZQ2NTqSnN+J/Mpk9VvDQkoxkpLmnRjNUu
bMtFgjT0mx5RtYHajLcfn2ratJyGhPx9XTpdm/DKsCMzD+Vo6J1oUFabXCN2
WO8rPWVAQyFJH5fURNfho/P+8NOYhnQnoxlX9epwdaXPg+8HaKjd//65/s+1
uOzPrbZGGxqiJffNXd9Ziw/e5uwUcaOhpKFd0nmj1bjYlJY7FUxD9rFefTmG
rzFdWUHRJYyGfu4TLRmMq8Ctu+iH28Jp6F/kyMTtj68wzjEpCL5LQxeP+x5y
DHiJlZSu3LqSTEMHbv9b2Pn4Ob4rXj6Q8YiGhmnKX+K/l5H1U6iwNp2G2BO+
fKHby/AHL/WXH7NpaIX+xE/FxhJM5aT155XSkByfhxdlpAj/d7z8wc1yGlry
OHvAQakIazD/5ti+oiH5P/npbz8U4F2Xaa0DmPSPpDiY/87F65R+h3q1kv74
9s+eIZ6Fz4TnObUO0NDzh5b3avPj8AMVfwftIRoazGsyFrt0Dyct392ePExD
N6Z+d83euo27NMc46DMN0Xklhkq8ruGZvOzwhSka6kw45MDT5wXnLdoWRX7S
UHNdz3W5w0Eg9Wn40+oZ0r+GL3pOV9+Am7nHqbR/NJQiK4TSm+/BmsoLj80W
acjD+IrpqriHQNFWKqfz0FHgMo2skuFUqH5+w7CQSkcFvGL+nEvpUFrz78tH
Xjqix9A26edkQt3aROoZPjo6mMx+pLjrCVwbmckY46cj3vxfd26/zYaPB7vj
K5fQkWNFjEQyNQ+omycnVwvRkVmszNntD/LhRylt+IQwHd3YfCNyw6ZCuCig
mD8sQkepZ+hD5xSfwXmWuqflSvK5wmp82LgUjIskdS1X0VHyw2v2/iJlYJ3d
0bFvNR35XK2TlHpbBp9sS88Jr6Wjbo9/UhMu5SA3lHvzI8kvN2qcX6L4Aopa
xyKerqOj6v0r5lK+v4Cdladd14jTkdiKYxLC3q/AfLXXAUzyM7XDb4c1K2Bo
9W6wk6CjVaO7ZNfNVkDW8Te7v5Mc1PIgqfDVa5h67+7sKUlHf7IChh4GVoKi
a0TGBMntRS0PRsh56Vfp8EpHKTrqr997KoBbBey1vriO5IQ7/83bvcJwQe9K
rqQ0HRk2Nlzfo1cNJ8cvjLqTfJ5vTpybVA2tnTSfUpITQ4OzLGerQdpI5dQU
ya8mYhYMD9eA8Mp1LVIydFQ4n8HbW1oDqRK6jw1I3lrr8ZAmVgtyqjpUZ5Kd
3i7mN7jXQuGLhemLJP+7/2K9RFstwI28q/4k86mf6eHbWAfBlx6XepNsx7St
uB5SB7qG11JPkBwVadwcNVAHR+RWm5uRnHA06ouCVj3khV3p2ERyo4jYcpOY
etjVtai4SNonJuuq++dbPfjyK1xoJvm7Z72dkkED5N8pzr9J8iURVY+PKQ1Q
Xp32U49kg96TfuJ/GiBrcROaJP3j6j0XRjVqBLUFn9/xJCsH1x3wT2yEj+1u
kjtItn2+S+Py10bwuru0qZP0d9lj7bSluk0gjLK4DiSzX5UsbLzVBA8vJjaP
kvcleIDxsv19E5zayHHoJe83QHEPT55/M1TH8yFDktdUZHmNNDaDan/+RN56
OvKkf1rycEULrLXsGDpG6uX30ef34gtaQF5p2658Uk/RV8/69XBaoOE/6uOf
a0j728y8Iva1gk56ULobqcevF/lenelvBSnJo/axpF69acmi9xTaoNKPY/6S
1LPGku8JWzzawMg/SXJyOR3Vtmefb+FpB9vTlNXzYnSUUXZsoM64HQy1Zq/T
Sf454l2jeq8dHHev+De3jI5Eb84aH5LsgIzP7RKTZPzMq8pvFHbtgKGMvb/f
kvH15cb2r9uedkCn+fZ/98n4O3fAoaR8WycUxjkLVTJI/Rp7T8frdkHaFptr
PmQ8x3/bHhF+uQsGddTlNtLpyOhPqF/fa/J5Zb+xL5kPJGW3y3dLdIPX3+Dh
Bi4NyW7LiapJ6AZ+R69mYw4N2ZaOWxU874a1AkvONpH5pWtD9tA+djdsYXps
LvpNQ9IPWuf9hXtALqcwVZvMV94Bj5x6rvaAquYd1zsTNOTkecxjaVIPFA4W
+vZ9o6Hu5+Mdk6U9sJO3vvvEOA1FH9U89ORLD5TY7Lqg95GGKnQatHvNmPCX
J77cdZCsFzaFxugkE4ZMOWM3yXzqxGOfYnKNCdfizYxxLw1R3u/ebFjAhDKt
DftmemjIsOHCBhYfC+xTrgm0ddEQP/V3qrAUCwQDjt9J7qChOZ2Zv++2s+Bb
tY3+1hYa0nOJWrvGhQUeHQGPfjaS+fKP9YdbfixwczBXKqqnofHBnx63b7Og
Li1AWqKahmpydomqlbHASqqltr2ShjI1zm5508wC+YCqv34VNLRrxkWLt58F
mZ2loTXPyffFncypPGz4PMeVkMunoXRU0nrOgA3MiK+GJTk05MiMumxvwwbQ
UBrQJ+uRdWBOH8uVDVMXE8pNH9OQWKeNpm0IG/7dnlPvSKUhwTKd667RbDge
tSrS9CENie8Qlv6bwgYhZoYaJNKQaa/wkoJyNqCSj69L42no9Q3Rmp46NmS5
u0ZvjKOhC+7P4i91sYEYCL7OS9bPmjtZd49+YkN1llufx20aOjYese3eFBtW
bJSe6I2goW01Sj9MZ8n1wnsLM0PJ87puG9q/hIDl21wS+ENo6HDjsicxywlo
2orzTl+joTcmSWV26wnQYfbwt1ymofe8eOCJLAHSfOtbFC7RUOsG8xlfJQK+
GcgLXvejIfUvi93NqgRMDV0fH/CmIf20s2Yp2wkAB2bQDk8a4g0UM5nRIeBE
S8nU3Qs09MTGLqMDCJhbzjz4+RwNWQXGIaW9BMw6D9TtPENDS01n6HxGBCy4
3nKJPUlDBj2J70+YEuD2LN5k3JXUh/mdfCMzAixWVCXoudDQwWfV5/IsCAj6
Unc6+hgN3f61TDDGkoDNF8+/H7GnoRc+uy7NWhHQJh/Ct+MoqdedjLJhawKK
RduEIg/TEFWRU3rAhoAeOTHBAWvyfgQy/HRINouUWbvVkuxnXvnMZ5Pr5Rdq
D183p6HqNe3GieT3+mTx8Jv9NKT8Y9JlCbmf+Nv+N8omNBT/RsRy0ZwAn1tD
FtcMyf1+m23wOUCAVMKt8+y9JNcWfTpnQgAr5j9j5d00xMjamDu2j4CijBae
YKChjfeiwod3k/sPtRS/0yPXhzy976RPwNADk4BtOmR/MCs34aRNgHfJr4u3
dtBQhO39vBF1Ai7wnXg5pkHG73bfmfHNBJw2pz5JU6WhbLW/+YHSBKBNdrVC
m2moxfOA6ea1BFSJ/74TqExDvldj7p0QJUi93E+zl6chjUlKhweFgI03bKS6
ZWnoct2Y7O6/bBi2bn1hIE1DU5JqI/9NsCHtecPTHevJeNvSEvzlHRtyHLM0
S9eQ/d0jmTcDHWxY4zFprL6Khkwu/gmyq2VDbknneW1R0t+OB0Z+PWWDuJ14
1Ck+GpLseliQ6sUG8yefts3Raeihjo7/ZzJ+bJ0eb4ml0lCkG2XqJRlfCzVT
SW3zVORn8w3RNNnw4vI+/fNcKjq15Vf3JXk2yKVJp4vNUtHI2Ge/ayvYkPSF
T+z0DBWxDsRHb5tmge7ktoPrflKRzrqCtsEPLNDmrC7vmqKi5LAzReLtLLh+
7qC94TcqGgp3ld+bScb/g5S2c8NUNDtSueyQJQtCH5yn7B6iopXr/3sXpseC
uNA3G8Q/UFHjc+kvhgosaMbOCYO9VBSZzzcY+o8JMmnXBjN7qGinwfoHPx4w
gSvH2ZrZRUUFNwbpNVeZYPV1eFtOBxVZ8BTPbHRjgkns6tSGFirKftmfUbGV
CQ62bi/31lJRoffvHsG6HpC2ihDzribnl2GT1kdZPaBy6Q3raRUVLRRdWNkd
0QNHTLLHFSuoaPOh8h285j3wKnN1k18pFdV/UdnGJvO9qvyFzn5yHqnTEN9+
qKwbxhgRE0bPqOiy9brv/ve7gZY30qRZQEWehXb7H1t3A1jv1TybTUVOFwJ9
UEoXlBgez5V9QkVMzqU0cYcuUPvu3DeUSc43R67LOoh3gZxmat7Fx1S0V1tW
RSSxE3i1+s/vTaciyV2nUNihTuDn/aEkmUZFlAiBmuPLO6GpXbxn7CEVXQpm
gMutDqikSvQRKVSUvuvcYOi+DhgeqpVoTyb9aaKhtoqnA059MIjoTCL9E69s
HendDss2STxQeUBF+7V3fvlg3QaM0R28h+PJeUr0yKmUJW3w3LRFOuI+FclI
ncklalqBwv/jAT2OioJrGrReqrTCtdW/hc1iqegoReHkyY8tYFVnfuZRDBX1
eCTI3L/fAi8ctGhH71GRy7CvpM9cMxwvnDtaF01FCXmjtsqFzeDzMaRNg2T/
q0eWuTk3g8WWEOeCu1TkbkrUKSxvhkDnCKWtJCunFnE86pvAPHFB9VUUac/6
+zoGPk3gLiAVvJ/k+70+SzPlm4CvakHx8x0q2t17k3uPaISBY+HqkSQzzXTu
C4U1gtzs5bztJBtPbzm9VqMRVCq8Hn25TUUhOmoC5cMN0FvfuzqL5JlkdYHx
6Ab4/mVa+izJ3QU7F/P1G0AykN2gRfIrE/frgt/rYfmyC6LLSFbImlRdTKiH
FftDhSdvUVGKw7fUOwb1UFyc20SQ/Mf3tnf5dB0onz5o2Ehy05EJk6spdfCM
7/kDTPL6qhWNI0Z1cMdtsraG5Nx73yO+/KoFoZMjzHaSi1naevce1oJ9+8Ge
IZLvnIwL7TeqBUWe1qZ5kq0+OC7t+FkDmycK8QbSnss7qq66JtdAUoNOrSXJ
Awn3wjMMasBi0PtdJMmUhdPvoiargT9Ed0k7ybKDwZLyD6rh4Gv946tI/4x1
lS49DdXgqcXz5TTJM5sm8150YlAWe5fRSHL0hSRnHkkMR/O/PlQh/f+OcTOj
8FwVWG8JPL+CvC/fw2cTTPgroajf+WD8/++z2khN3+Y1qN+ziZEh7/t19DKV
zLQKOHtuh5E1qY+ffUmqfVqvID9+XRuX5I8XV2g9u/4SxsNnGvNIPR2ZqErh
73wBhXc892wi9Xfp9u1EY+dy4Fl1JU6Q1GfwQKt7Y9JzuDQTpvCb5PjPH+0w
qwz43uYpfyf1naghk7VjbykMK5fk/EugIrP4UsnqwBIw3RB+U4SMh562mk9v
iovB/3C8hwsZLxlW9iU1Us8gLTAzPJmMp+H5ZV8f2hSBaPeWlcNkvEmIP32o
vaoQvvpeSb1LxuO40KLeuq+58P3yHNWHjO/Gr7dXX4/MhA2a6XuWPKWinI8T
jabTj0FgMmJ9fg4VtbX0rUo9nA45FcEpy8l8IRRj91Vm30No1f6x7VwZFZmv
FXZVP3cPaiPsfY+Vk+d7ddZp5enb0D/y7bjjSypqdz2mKjkbBqPztvrXKkn/
jUafe6rqCZdWdsztb6SipV73kXBeEE4/HZWQ0kxFeoPmry+K38SmC5YfZlvJ
+1q3w87s9h287JTRcYLMp+pFjscnNe5jfceyDWveU1FSbPDUUkYaHnuhP9zQ
T+rdUv+saGo6Puf+VOfaIJm/97rueKqdgY/YCeSt+ETuNyN09vzZJ3jPYoBC
6w9Sr7tsIvY052PrhAum7F9U1GLOrRlwKMSvRHS+fPlDRUq8Mf5OAUV4rURb
wA6yHhkYWmVJChVjBZMyYztBGuJ8Szl0Q7UMH9wtmo4VyPrOO3uVYV+BTzsO
GeiT9Xbfi2oDQbHX+NDuD6GNZD0+b4gMrzW9Ju3LKPtF1m/p24/vFWytwp5T
5ynVe2iobb6SMXilGv9QpEatOU72J+U7XtZr1eHGfbZjKmR/NKJCiwmMqsPC
h2WMTc7S0KzMyl+dI3VYZZ0XLdWL7P815cL33qnHdTETq56T/Z9jPw+fXl8D
fmk/GBpC9qtmoU/zvzk3Y8Jlt5Is2d8OzatARlEz7jT2Xtv6jOxvzs7oDS40
Y9mYvCdqZH+cEb3X6E1iCw7nUeK6dtLQqfzmlyktrdj7y+E/u/7QUOr5yv/2
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
wzVOj0eqEiFV0yNVOov09163XIpoCvwP3tE65g==
        "]]},
      Annotation[#, "Charting`Private`Tag$79447#1"]& ]}},
   ImageSize->220],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.720943841243858*^9, 3.7209439331020503`*^9}, 
   3.7209439786719522`*^9, {3.7209440349371123`*^9, 3.720944052581302*^9}, {
   3.7209440845615807`*^9, 3.720944106757867*^9}, {3.720944139774711*^9, 
   3.720944157467325*^9}},ExpressionUUID->"94d267b9-89de-4ce8-8a91-\
f61f070a648d"]
}, {2}]],

Cell[TextData[{
 StyleBox["Solution",
  FontVariations->{"Underline"->True}],
 "\n1. For a displacement ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "671777a2-4810-481b-a31a-677ac17434cc"],
 " from equilibrium, the force felt by the mass will be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["k", "1"], "+", 
       SubscriptBox["k", "2"]}], ")"}]}], "x"}], TraditionalForm]],
  ExpressionUUID->"fd52d30d-0537-4d12-bfd1-6a7bba3cd8c6"],
 ", and therefore ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "parallel"], "=", 
    RowBox[{
     SubscriptBox["k", "1"], "+", 
     SubscriptBox["k", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "924d1f6c-59d9-41d7-967a-8d7cc8323bb2"],
 ".\n2. Consider a massless object between the first and second spring. When \
the full system is displaced by a distance ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "f26b8dcc-905a-4757-85b5-b120930efcac"],
 ", the first spring will be stretched by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "878cb9b0-e572-4cd7-9bc1-cdda20448148"],
 " and the second spring by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "de2b2dc1-e7bb-49c7-9fb0-183ec60808ee"],
 " so that the total displacement is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "+", 
     SubscriptBox["x", "2"]}], "=", "x"}], TraditionalForm]],ExpressionUUID->
  "cc7219b5-71af-498b-a9c8-0ba7cd0678d0"],
 " and there is no net force on the massless object ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["k", "1"], 
     SubscriptBox["x", "1"]}], "=", 
    RowBox[{
     SubscriptBox["k", "2"], 
     SubscriptBox["x", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "8d369b48-3dcc-471e-b8ef-95d1fabf6fd1"],
 ". This implies"
}], "Text",
 CellChangeTimes->{{3.6882572859726257`*^9, 3.6882574356465764`*^9}, {
  3.688257661096781*^9, 3.6882576915421543`*^9}, {3.720064382312258*^9, 
  3.7200643829667826`*^9}},ExpressionUUID->"861887d4-bddc-425d-b70b-\
799813211737"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["x", "1"], "=", 
   RowBox[{
    FractionBox[
     SubscriptBox["k", "2"], 
     RowBox[{
      SubscriptBox["k", "1"], "+", 
      SubscriptBox["k", "2"]}]], "x"}]}], 
  TraditionalForm]],ExpressionUUID->"e1166969-a638-477f-b81d-b37aad626a76"]], \
"TextNumbered",
 CellChangeTimes->{{3.6882576924014845`*^9, 3.6882576940267963`*^9}, {
  3.6882577509279785`*^9, 
  3.688257753937498*^9}},ExpressionUUID->"82e8a406-b75e-4ca2-a212-\
301f0ee80f05"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["x", "2"], "=", 
   RowBox[{
    FractionBox[
     SubscriptBox["k", "1"], 
     RowBox[{
      SubscriptBox["k", "1"], "+", 
      SubscriptBox["k", "2"]}]], "x"}]}], 
  TraditionalForm]],ExpressionUUID->"94f4bb4b-0f19-4162-b520-387d614d415c"]], \
"TextNumbered",
 CellChangeTimes->{{3.688257699511598*^9, 3.688257700402481*^9}, {
  3.688257745377733*^9, 
  3.688257749302785*^9}},ExpressionUUID->"0de22de2-f13a-4ade-8b92-\
2ef9ca983f4c"],

Cell[TextData[{
 "Therefore, the net force felt on the mass ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "1049116e-3f1d-4fc3-b6e4-1c477813cb53"],
 " equals "
}], "Text",
 CellChangeTimes->{{3.688257765819474*^9, 
  3.6882578212145863`*^9}},ExpressionUUID->"6f355150-d74e-4de1-b793-\
412858d879c0"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["k", "2"], 
    SubscriptBox["x", "2"]}], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["k", "1"], 
       SubscriptBox["k", "2"]}], 
      RowBox[{
       SubscriptBox["k", "1"], "+", 
       SubscriptBox["k", "2"]}]], "x"}], "\[Congruent]", 
    RowBox[{
     SubscriptBox["k", "series"], "x"}]}]}], 
  TraditionalForm]],ExpressionUUID->"0a146fe1-d500-4b14-b83d-3fff97317faf"]], \
"TextNumbered",
 CellChangeTimes->{{3.688257822559664*^9, 
  3.6882578451480246`*^9}},ExpressionUUID->"696039e5-12d3-4bec-a8fe-\
01c215f4828e"],

Cell[TextData[{
 "where we have defined the effective spring constant ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "series"], TraditionalForm]],ExpressionUUID->
  "ea14689c-848f-4aae-87db-5e2726b9ffbe"],
 " of the system. Note that "
}], "Text",
 CellChangeTimes->{{3.688257829066248*^9, 
  3.68825785175809*^9}},ExpressionUUID->"02a6ff9b-d6ff-442b-992a-\
85bc566aa3fe"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", 
    SubscriptBox["k", "series"]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["k", "1"], "+", 
      SubscriptBox["k", "2"]}], 
     RowBox[{
      SubscriptBox["k", "1"], 
      SubscriptBox["k", "2"]}]], "=", 
    RowBox[{
     FractionBox["1", 
      SubscriptBox["k", "1"]], "+", 
     FractionBox["1", 
      SubscriptBox["k", "2"]]}]}]}], 
  TraditionalForm]],ExpressionUUID->"a92ed6f9-646f-4ee5-ab67-57ffbe4c0cb8"]], \
"TextNumbered",
 CellChangeTimes->{{3.6882578546094313`*^9, 
  3.688257871337647*^9}},ExpressionUUID->"4e76f518-9361-46d5-b4e8-\
b1f96b6d09c8"],

Cell[TextData[{
 "which is the called the ",
 StyleBox["harmonic sum",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}],
 " of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "1"], TraditionalForm]],ExpressionUUID->
  "eddb01b8-a328-4373-8e57-1d6478f91efd"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "2"], TraditionalForm]],ExpressionUUID->
  "8699c30e-1aa8-4102-8f37-02108b07f907"],
 ". \[EmptySquare] "
}], "Text",
 CellChangeTimes->{{3.6882578761638885`*^9, 
  3.6882578855835085`*^9}},ExpressionUUID->"ce9852b1-8e80-4db8-a2a6-\
340a327408f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Superman Orbits", "Subsection",
 CellChangeTimes->{{3.6220610076158524`*^9, 3.6220610091169386`*^9}, {
   3.7164448192798796`*^9, 3.716444847246496*^9}, 3.7195064176704855`*^9, {
   3.721094262986981*^9, 
   3.721094265087612*^9}},ExpressionUUID->"e8bbac8a-7782-4661-9b4c-\
e1171438dc01"],

Cell[TextData[{
 StyleBox["Example",
  FontVariations->{"Underline"->True}],
 "\nSuperman stands on top of a mountain and throws a series of stone \
horizontally, with each subsequent stone thrown at an ever greater velocity. \
Describe the motions of the stones as the initial velocity of the throws \
increase."
}], "Text",
 CellChangeTimes->{{3.622061017778434*^9, 3.62206113100891*^9}, {
  3.7205063830563326`*^9, 3.7205064398246317`*^9}, {3.7205064778221827`*^9, 
  3.720506554773465*^9}},ExpressionUUID->"bd3aa307-f4eb-4b0b-a5d4-\
0f472153ea80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQdcj/v7/8/3HOdrp5RVCmlo0JBZVkeEjDpmCNmSETqhbI5xkD0qo0j2
DBkRihQaSNp7R0vO93fU//X/XI/ux+2TOpxhXs/Ho/txf+7ufb/f7+t1vcf1
bmU722rK99999928WlhYTfill4PDhIU/y+LHsFnzpk+dNXlSv1nzJ0+d7NDZ
9gds3I2FFf7+/3o5wzDMZ0ZZFXwp52cYhmEYhmHeB1Z9DMMwDMMw3wKsyhiG
YRiGYb4FqlJ9/xQfet2P+ewMwzAMwzDfDqz6GIZhGIZhvgWqUl9v/iE+9Pyf
+n0wDMMwDMN8nfzbqu9D+dTvg2EYhmEY5uvk31Z9f1QBqz6GYb5NuH8Lw3wj
VM7aUvpK+C9t/7//+7/Ke9JPsUCS0kvin3QUVnAqQc5J3VVJSUlubu7Lly9f
SSguLsaWgoICLPGzqKioWAL2SZKQmpqamZmZJSEnJwcH0g5YefHiRWFhYV5e
HvZJTExMSUmJj49PS0vD/linLfhXcnJyRkYGVtLT07EzHYgL4SZ///33yqUf
VOI73xXtSdvFR0lpVxKZwqkALoSl+HDhZzXfTkrHSl2U9qnmDAzDMOWs+hjm
a0RKnIh1yAflbvGBYrEhnFlqe3mFsKFj//e//0FHiY/6nwTSVxBakG2xsbGP
Hj16+PBhWFgYVh5UECYhNDT03r17t27dunjx4tGjRw8ePOjt7X3ixIlz585h
y7Vr127fvn337l06PDIyMjw8HFvOnj3rI8HT0xPLY8eO4ahDhw4dOXIEP7Hu
5eWFs126dAknpwtFRERERUXhfqAbX0vAHZI8ww3j5kmtiQWtuPLw/yqgh5XS
ZpVV9Pt8O0ExVv5kXFYzDPPXYNXHMN8O1bdskpIhYVZVc6dQPmAH6KLS0tKS
kpLi4mJIuAIJeXl5ubm5LyRARGVKSJWQmJj4/PnzKAmPHz+GVLt58yb02+HD
hw8cOLB///59+/Z5eHhgiXVPCVjftWvXpk2bli1bNn/+/OnTp8+aNcvR0dHF
xWXVqlUbNmzYsmXLjh079uzZ4+7ujqN27969evXquXPnYs8ZM2bY2dnNnj0b
P3GUvb39nDlzsI7l5MmTsX358uXbt2/HJXAh3APEIeRlSEgI1ONjCbjbhISE
5ORkqiGkSkI8ID1aeno6lnkSsJKdnY2lUEsJ8HKk6kurL10F9SiuUxUrQIH3
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
igTLUlxc/PLly5SUlJCQkKNHj65Zs2b69OnW1tadOnVq3ry5jIwMbBbFYNHU
1Ozdu/fkyZOXLFni7u5+7ty5W7duRUZGpqam5ksQolUIwdCEOar+T8SHDs5l
mI9P5WQs5SUJne5+//13ZCIs4e9AAcbFxUEBnjlzBvLP0dER/lHPnj21tLSU
lJQaNWqE3KSiogI3qm/fvuPHj4f2QyaiSj9hZBNdgrKq4Kl9ujfBMAzDfL5U
X3dBTau0BaYqMzMTFury5ct79+5dtGjRuHHjzM3NjYyM2rRpAwtF05Lip4WF
ha2trbOz85YtWw4dOnTp0iUc9fz587S0tMLCQql4uWUVfQjfR9qVVTTsSg1y
ZJjPljcVc3+INwo16qWlpdnZ2U+fPr1x48apU6fc3NxcXV0XL148adIkKEAa
ANK2bVsDA4POnTtbWlouWLBg69athw8fvnLlCrJVUlISHCjKpG/envGQYRiG
YaSoSvWRpnr9+nVJScmrV68KCgoSExMfPHjg4eGxcOHCfv36aWhoUJ0exJ6c
nBxUH2wT9J6dnd22bdv8/f1jYmJSU1Nh0aD0Xkv4/fff6eRUQVFW0WFPHJ2s
8u0JozYEiyZ0oPrTljWG+Ti8EU2pRiGMhFHn4lRKYz2QF4Q6uvKKOQpfvnxJ
ExSmpKQ8efIEOcjHxwcCz8HBYcSIEZB8WlpaLVu2hIcFHfjzzz87OTnt2bPn
5s2b2BkHUqA/ymXgE7wChmEY5nOCjBGtC8ZISnEJlRJQehBs0dHRUHp37969
evXqgQMH1qxZY21tbWJioqioWLduXRkZmebNmxsaGvbu3XvkyJE0IPfo0aMh
ISEwXmR6qq9LZJhvk6ryheBzvXjxAn5TQEAAMhTUnaOjI7SfsbExspu+hJ49
ew4fPnzZsmU01e/ly5fv3buXlJSEnCuVxQR3STweSirmDOdThmGYrwxxIU8K
8M0b6SnpqX6vuLg4Pj7+zp07Bw8eXLlypb29PSwOrIyenp66unqjRo1q164t
Kyurra09ZMgQZ2dnNze3K1eu3Lp1KywsLDExMS8vr7S0VCq+H1sThhGoRu+R
MENmLCkpycnJQYaC8wXPC/Jv9erV06ZNGzRokJGRkaampoaGhqqqaocOHbAF
29euXXvmzJnIyMjMzEyq8aOqv+o7QpSJmoY5nzIMw3wdkKirXIxTLzvYBTIT
MDTJyckPHjyguaUmTJhgamqqq6vbvHnzpk2bYqmiogJD065duz59+kydOnXr
1q0BAQE4hBqtxDKSrQnDVMUH5YsySaeI9PT0e/fueXt7Q/tNnDiRMqaamhry
Y5s2bTp16mRpaTl//nx3d3c/P7+IiIinT58mJCTk5ubSFG+Uu6lPBWV2aoMG
NIie8ynDMMxXg1Rk18oKELItJycnLCzs4MGDCxYsGDlyZLdu3Vq3bg2x11AC
7IuxsfGoUaPs7e0hCGmYRkhISEpKCqyJMPy2GqXH1oRhiOrzRVlFg6yQoZC/
IN6ysrKg5YKCgs6fP79r1y4XF5e5c+dSyy8UILSfvr4+3LGxY8c6ODisWLEC
mfTRo0cFBQV0WqH6nZSe1KAqzqcMwzBfHzRJrtjNf/XqFaxJVFRUQECAu7v7
pEmTOnbs2Lx5czk5OVlZWWVlZS0trQ4dOgwePNjOzs7Nzc3X1xemJzs7G9ak
qKiIahLo5O+0X2xNGEaKqvKFMMG0VIBKEmzYTjGfX758mZSU9ODBA2TGHTt2
zJ4928rKqmvXrpqamqqqqlhCB/bt23fKlCnbtm27fv06cnd6enp+fn5eXh4O
RwlAJyRtyXV9DMMwXxlCLC8pU5KZmRkeHn7mzJktW7bMmzdvyJAh2traEHsy
MjLNmjVr37798OHDHRwc1q1bd+jQoStXrlBoZQjFqi4kdQm2JgxTmWpUX/UB
yYXxVpBqFDkT+RcZk6Z7mzt37rBhw8zMzDp37tyuXTs9PT1TU9Nx48YtWbJk
//79ly9fDg0NjYuLg7MmPiGrPoZhmK8MoZe40MoDlz81NfXhw4ewF/Pnzx80
aBBsRNOmTaH3GjRooKur26dPn1mzZu3evRs2JTIyMj09/aUEYXCu0EJE8Sje
GZ+WrQnDVOZ98kWZKDql4LUJLb+0vaSkBBk5JycH8i8qKurmzZseHh7Lly+H
+wbh16pVq+bNm2toaHTr1s3W1hbb9+zZAxfv0aNHyPtU7yeEUeJ8yjAM8/VR
WlpKU8Pfv3//3Llzq1atGjt2bMeOHdXV1Vu2bAkD0b17d2tra+i9DRs2YIeI
iIjs7GzBNAjnkRoRLHWVqowIWxOGKf+zDCI1q295pRkJhRo/8Q4QgcjacNB8
fX3d3NwWLVr0888/d+jQAdpPSUlJW1sbWbt///4TJkxYtmzZrl27jhw5Aofu
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
Z8/u3bu3lpZW48aNmzRpAu3Xt2/fBQsWeHt7P3z4kKbtJr+SPM1P90AMwzBf
JNSRT9Bsr169evToEVxvFxeX4cOHo/itW7fu999/D8lnbGxsa2u7fv36I0eO
hISEoATGzu/0sgUZyT44wzACVdXLwT3MzMwMCws7f/789u3blyxZMmLEiC5d
ujRv3lxZWblr167Tpk3bu3cvXFHoQyGsn/i0H+X2GYZhvgYg+UpKSrKysmJj
YwMCAlxdXSdNmtSxY8eWLVs2aNCgYcOGqqqqpqamv/zyCzxu7JOTk0MtudSt
WnC6BV+ex3EwDFMZoScelRI0mxs1CqAIKi4ufvnyZWpqalRUlKenp4ODA4Rf
06ZN5eXl27RpM2TIkPnz50MWhoaGUqWf0JQgNPsyDMMwf0ppaWliYuKtW7cg
6lauXGllZYUyVlmCgYHB0KFDUfyuX7/+9OnTjx8/plBa5RVtuNV72dyvj2GY
8oqeJOLigpzEyuvQcvArw8PDfXx8FixYYGFhoauri7IIhZKJicm0adM2btx4
6dKlJ0+eYDc6iuv6GIb5xpGKuSd0gKHSVRynBW5yWloaStGlS5f+/PPPnTt3
btWqlYyMTIsWLX766adZs2Z5eHiEhIQkJSVlZmbCE+foqQzD/FO8qQKq9AsI
CPj1118HDRoEydesWbNGjRppaWmZmprOmTPn0KFDYWFhEH4UDV7oXUytDDQk
TdjCrQ8Mw3ytVCXDaCM1qdCW4uJi6L379+97e3vDp+7Tpw/0XoMGDRo3bqyp
qWlpaeni4nLs2LFHjx7RRBs0kS6rPoZh/imqUn0k2yD8bty4sWXLlsmTJ/fs
2RPaT15eXklJycjIyMbGZv369WfOnIH2S09Pp+BR5aL2hapknrhekWEY5kun
qhkxyt6eEw0rkHx3797du3fvzJkzu3XrBslXv379unXrGhoaTpw40dXV1d/f
PyUlpaioSOo8rPoYhvlHqEr1Cf/Nz89//Pjx8ePHnZycrKysNDQ0mjZtqqCg
AM/U3Nx8zpw5Bw8eDA4ORkklVO5JnV+qdOLBvwzDfE2IG3CFARf4SUUiKCgo
gAeNgvTcuXObN28eO3Zshw4d4EE3aNBAUVGxffv2U6ZM2bNnT1BQUFZWFg4v
LS3lztIMw/wbVOVFClINXmpxcXFsbKyvr++OHTvgkPbp00dHR6elBJRXNjY2
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
hQsXenp6hoaGYs+yt6cyZxiG+aagOXzT0tLu3r3r4eGBYtPc3FxfXx8Osry8
fLNmzQwMDMaOHbt69eqLFy8+ffqU5iESl5y0LnjfQifAT/lUDMN8RUi1LFCj
RrmkJ15SUhJ80s2bN0+aNKljx45KSkp169atWbMmyi5DQ8MZM2Zs2bLlxo0b
CQkJhYWFQjH1KR+GYRjmUyCeSfz333+HFxwTExMcHLxnzx57e3tjY2OakRyo
qamZmpouWLDgyJEjcXFxJSUlQi/oqrxm9qYZhvn7iDuTiEsVFFnwQNPT0/38
/DZs2DBixIi2bdvSqLTWrVu3b99+6NChCxcuRJEFfzYnJ6dMFIGKRm0wDMN8
UwitJFIjfKOjo0+dOuXs7EzzuKEUrV+/fpMmTUxMTKAGUYqGhoampKRA+1Eb
sfgkwsnZm2YY5u8j6D3qtywINki+zMxMKLr169dbWVlB6clIMDAwGDlyJPTe
wYMHg4KC4MlSLALhhDRk4xM9DcMwzOdFmWQO37i4uJs3bx44cGDu3LnGxsYQ
fj/++KO8vLy+vr61tfXatWvhXycnJ0Mlitt2oQBRJlMpzd40wzB/E0Hy/fE2
KKPi4+P9/f03bdpkaWnZqlWrunXrwjPt1KnTlClTtm3bdvnyZeg97CbML8l+
KMMwjIC4+UMY5fH8+fOzZ886OTn17NlTWVm5vgSs9OnTZ8mSJRcuXIiNjcVu
QnWf2Ilm1ccwzN9ErPpo7gyUNlTF5+HhMXv2bDMzM3V1dTikWA4ePHjlypXH
jh0LDg5OT0+HT1r29rxCn/ZZGIZhPi3ifn3CujgwaUlJSWJiIhzqDRs2jB8/
3sjISElJSUZGpkWLFr169Zo+fbqbm9vt27eTkpIKCwvL327k5X59DMP8TcQV
fTR6Nysr6969e1u3brW2ttbV1VVQUGjatClJvvXr1wcGBiYkJOTn55PGI9+T
ziA+JytAhmG+ZcTFIFbgI9NKaWnpq1ev8vLy4Fm7u7tPnDjRxMQEwg+edZMm
TXR0dMaOHevq6nrr1q2YmJiCggLsLw4M+Mmeh2GYLxBqaJCSZCTYsExJSYGo
O3LkiLOz85AhQwwNDRs1alSnTh1oPxsbm507d16/fj0tLQ2lkKDxuBRiGIZ5
H8Tx6iHk4F9D13l6esKbnjFjhrm5OZxrFLl6enrDhw9ftGjRrl277ty5ExkZ
mZGR8c4TwumGgORmX4ZhpHhnAD1hCxUd6enp/v7+u3fvtrCwgMxr2LChjIxM
s2bNOnXqNGfOHEjBp0+f5ubm0qkoEH05tzgwDMO8H1JtInCfX7x4kZOT8+TJ
k/Pnz69du3bo0KFaWlrNmzdXVVXV1NQ0MzNbsmTJoUOHgoODsRt19qNgqtyY
wjBMNYgDfhLi8AKFhYVxcXGXLl1aunSplZUVCpz69et/9913tWvXhtc5ZcoU
FDthYWHUQlEuqRWkUWaf4EkYhmG+TCqXw7SO0jgjIyMoKGjv3r1Tp07t2rVr
ixYtFBUVVVRUevXqNWnSpC1btty8eTM2NrYqvcelMcMwlRFmkxQaGvCzqKgo
JibmwoULcCrhWlIE0Tp16sjJyenr60+bNu3o0aM0VrekpISOoinIP/XTMAzD
fHlITbTx6tUrioyak5Pz7NkzX1/fFStWjBw5EtpPSUmpSZMmrVu37tOnj5OT
k7e3d3R0NPakYpyibFGZzFV/DMMICNV6KGco7hP9pLjxKEbOnTvn4uICyYdC
5r///e9//vOfRo0ade7cefr06YcPH46Li6N+I5U7BFIA0o/8OAzDMF8c4uo4
YQCd1IgPlLQZGRn+/v47d+60sbHR1dWVkZH58ccfof169Ogxc+bMQ4cOUTc/
dsAZhqkKsTATlzzFxcWQfKdPn168eLGpqamCgsL333//ww8/NG7cGJJvxowZ
+/bte/DgAZQhdfwTDhRKKvI3P+azMAzDfIlAob1POyxK1NTU1JCQkN27d48e
PVpbW7tWrVoolps1a2ZiYjJr1iwfHx8Uyyi9pY76126cYZgvDHEXPlqhsRvh
4eFHjhyZPXt29+7d4UvWqFGjQYMG1JpgZ2e3f/9+lC25ubni8oSahsnB5DYF
hmGY9+RNBVIlJ4VIFcbHlUuG1xUWFqL43b59+4QJE/T09Bo2bFi3bl0sDQwM
IPzc3Nzw3+zs7NLSUqFn4Cd4JIZhPm+ECC3wJYODg93d3e3t7Y2MjOTk5H78
8UdZWVlDQ8Nhw4a5urqePn362bNnNO9GVUPGuDMJwzDM+0NtslSiCjNglr9d
ltJG/MzLy7t3756Pj8/ixYsHDx6so6MjIyMjLy8P4WdjY7Njxw5/f/+4uDhx
KwzDMN8glZUYNStAwlEv4tzc3IiIiK1bt9ra2kLm1a9fH15k48aNKTrotm3b
IiMjad4NqTgDzNdB2Z9RzbGV6yuqOaRyL1CpiWCEfk3COYW4QLBlZB8BfiL1
vnjxoqioSKgYoRAW9F/wWoTUDhQXF2fAFqqsxsa/MOZReD9v3kbqYanbg2DN
K79AweiLz1zN/fyFz8R8QVT1fZFIkOZjY2OvXr26bt06S0tLdXV1+Ob16tXT
1NQcOnQoNvr5+UH4FRQUiJM0JXL6WVZp1DDDMF8NZG6EFlhCmMORjGl8fPyl
S5cg7UaNGtWhQweIvdq1a6uqqpqbm8+aNcvd3f327duZmZklJSV0Tg4I8PXx
oSriPU1GmaiyQqzi3vOuKH0WFhbm5OTA6UiVgOT67NkzOCmhoaH3798PDw+P
iYlJTk7Gv7BPhoT0CjJEZEqg9ezsbNoBW7KysrDMz8+n2LaUUwQVihuAPqQ7
gXoUJigUj4F658sUZN7fQUpMVvWZWPV9ZVTzfZGoUBQjtd+6dcvV1dXa2hqF
dp06deTl5du0adO/f38HBwcPD4979+4hndPY3nKR0iMXg1Ufw3zdlL1dc1JW
MRMQlikpKadPn3Z0dBw0aFCLFi3q1q2LAgQr8CI3btx4/fp1GNmXL1+KI71X
rspgvnTeX0UI6UfoNSS0+AsjEMvfntRP8DXoWHI6SESRmoIVKy4uhriierlX
ErAFSgxy7vHjxzBhsHEBAQGXL18+deqUp6fn7t27t2zZAqu3d+9eb29vbL92
7Rp2gIdCe2J5586dAAm3RODnTQm0HfvTUQ8fPoR6LCoqwnVxdXH1IMAN0xbK
R6T9yiQVhtT5Suqpy0QxNIRXJ57iUKh4FLfrCTWZgvJ8/y/Fqu9roqrvK667
Q7EcFhaG9G9nZ6empgbVB2+9YcOG2traQ4cO3bx5MxI2/JqCggKp3jiUtFj4
MczXjTiDU4mRlpYWERFBks/U1FRVVbVmzZq1atXS1NQcOXIk7GlgYGBubq5g
4IRip0xUgfOJnob5h6leS0jZnWq+u1irlInaPYUtkDSQVUhXsEdQdPApnjx5
cv/+/aCgoLt3796XAI0HwQYVB4Hn4eEB+7V69eqlS5e6uLggrc6cOXPChAlI
olZWVkOGDMGKra3t3Llzf/nllyVLlixbtgxL7Inl8uXLl0lYLoK2ODs70w60
ZeXKlZs2bdq1a9fx48dPnjyJTHHhwoUrV67AbuKuQkJCcFdYhoeHP3/+PC4u
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
NAYEhQn+NXfu3L179169ehWpDskmPT0dCpA13hfEm3cNSxdn2Nzc3Pv37x84
cGDy5MkoSZAGqCdAkyZNjI2NZ8+e7e3tHRwcTMO9pc7JdoRhPgJCjkNhjpwI
I75r1y54anp6ejRiF9nWyMgIhh7bb9y4kZSUhN0qm4NP9wTMn0MN9zR+MyMj
IzIy8sqVK8eOHdu6dauLi8uMGTOGDRvWo0cPfX19GGiKuwVQXMNJ7969O/47
Z84c7Onq6url5XXhwgUIRShG6EZYbZxW6nLi8ryywBNbispjdVn1/SMIb17K
kv5RiTdvU/Z2R19xK7C4LVhopS0uLs7JyUlMTHz48CFcwlOnTu3evXvhwoU2
Njb9+/eHm4AkhDJEVlZWUVFRV1e3Z8+eI0eO/H/svXVYldkXtz9O2AoGGIgB
BgZ2d42KWNhid4yKndiFgV2o2IWI3d0oNiKCLSKgYjvO93pfPbz3j3Wxf4/n
AOM4Kjo8nz+4Dieec54da91rx9qDBg2aNWvWqlWrjh07duvWLZWeUZFnAhSZ
rk+TtlGpB7IkOCp6xO/x48dBQUEEksOGDXNwcMiZMyfxI8YE20IDaN26tbu7
O9j/5MmTBLsHXboSsVRuNFjuxo0bGzZs6NixY758+VKkSEE/xVbzmH66fPly
f39/zPuHmJRo2m2herT+3UpGZoA98CwiIuLevXunTp3auHHj+PHjibudnJyK
Fy9uZWWVNm1aScMo03PYZ1tb21KlSvEGPLiHh8fevXshPRw0beD169cygSve
X75IO8SnPXk2Km4n/iG2vHkifYb3X8poN/SnfMR0YFYtv9S+TRaEyJOG6JyK
MswrGbxpGDQSYgoshpubW+/evWG/YsWK0Zysra1lHxD4R9OC/eTM361btwYE
BISGhsqWH64ABH7Z0tD1BWXQHIijogAVL8iKEZoEgQDh4YQJEwgbzaKFQyGW
zJ49O1W/efNmwgRZ5Kn2d+jrOXXp+oISs6ztVtq4Hj9+5coVT0/PLl26FC1a
lB6aJEkSAIDH3bp1W7FixcWLF8GGBPrtuv5/xbX4Wfu8LNhTuycwwo8ePYLZ
1q9fP3XqVBwxVrdq1aolSpTAF+OIicSxxvzFI+fOnbtcuXKSTnny5Mk0CXjP
z8/vwYMH4eHhshJbrRXUrbQuU8FseHzsyYkTJ7Zt20bIQKv7448/GjZsaG9v
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
PD09iXwlVW+UZoDIoCdC/7ZSyUufP38Ov92/f//48eMrV64cPHhwzZo1qaws
WbII8hH/UpVdu3Z1c3PbvXv3jRs3nj17JiO0akGmGrKIKx+FPqCh6/uUilBU
VGK0vcLw8Sld2gREsumDIPfQoUPz58/v1asXfSdfvnyZM2dOly6dpaUl/ahs
2bLt2rWbM2cO/Yt3hoWF0d1k5ld9hU4R30ymc/eyXReMx7J5eXn179+/ZMmS
adOmpfrA+A4dOixatCggIIAq009q05U4ZbQGLEqT842/4eHhgMHQoUOJcwl7
f/rpp19//ZUeRD8aMGCAt7e3v78/mJFwP/8/K6NTQWOVoLV2mfq9e/dwWEuW
LBk9enSnTp3q1atXokQJQt2UKVNaWFgUKVLEyclp3LhxmzZtOnHixMWLF3Fb
cl7e178hXf9WCsK1TkpLL/LgU5BDcZF2TCxWOvqSN/CDiNDpwYMHFy5cOHLk
yIYNG0aOHEmvgf2IeVOkSAH+5cmTRw4lHDVq1KxZsySPJWZQm6vKYLKPWD0f
qxLiRv/jIpiVM+KHDBmCGYT6qDvqsXnz5nPnzgXaQ0NDjdJx63O+uhKDVEor
aecyORgVjRD0Gj8/P3d39zp16hDtJo2WJMDs3Lnz6tWrZWJXP+bma8hoOlVZ
JLVhUL1ThmRljGLv3r1ubm6tW7cuU6ZMjhw5MmTIgK1Lnz69TOm2bdt22rRp
+LJHjx7JvhvteKy+J/d7kKp3o4FWw8dpGJXEbfGkIAcfkb0GMlYfz9S89jrq
X+0vSeSOj2Kkj9y/f3///v3z5s1zdHSUnJYYQDMzM0LgggULwn4NGjQYOHAg
cIgxfPLkieR2lsMgDCYH0Kjt8Dr1fQPJCcuPHz/29vZu37597ty5kyRJgj0k
+MUSLlq0iLCXKpaN2NoPmlacLl3/MWmdC7ZOKO7Fixd0CrpGq1at4AfZvoHF
kx27a9euvXHjhjp9Qx8s+krS+mij9UjKKFELUNyZM2eolKFDh9avXz9//vxE
tfimLFmylCpVqm7duj169JgyZcr69et9fX0xg3F9l27ovit9SnIJgyYNhTyj
1lqoD6q17uojpoAn++7l38S8YlMOnVHlgzEE/Og1S5cuHTlypBztkS1btlSp
UiVPnjx16tQ5c+YsX758t27d5s+ff+jQoVu3br1+/VpdzaicjfLF6dT3DUSZ
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
1549e3b58uXFixdjKOzs7MzNzS0sLAoXLtypUyfiFDBDnyn4NzKar1H/yvGm
8gze9s6dO5s3bx43bhxeOGfOnMmTJ0+RIoWZmRmmo169eqNGjcJZw3uyUVdq
UB/r+yGk6l3GVf5PHFK5emQU972J4hrEi3VMz1RR0U3uzz//pL8TXHTp0gU2
KF++/JAhQ2CDe/fu8arkB5b949rvlQVm8ttijRx1fTMZTRZQLyEhIRgHDw+P
3r17gxnwRpo0afgLe/DMihUrTpw48fjx4w8x63PiWgGiU9+nKB5/Sl0AfocO
HRo2bBg9CwLPnDlzpUqVhg8fjm2Hz6WbfzBJcpvQ96Trv6a4WqlCPoJB2mT3
7t3t7e0zZcoEZlStWrVfv36rVq2CBp8/f87bJEGfrs+QQTO4J97cEDMpJn9x
xPjc7du3Dx48uHbt2unTp/8tWhiNChUqwN4LFiwghHzy5In4bnUFfZHVj6VY
Lbw8+c28rXgc2punpyfOaNKkSbt27QoICNCu5ZMHcU38qR9sOgGt6xtIGxHI
M2LGqURvb++hQ4c6ODjkypUrVapUgF+pUqXat28/derU48ePY0DU+XqG6GM7
BO9N15zoikdx+VPKU2K6R48e7d69e+DAgRC4paWltbV1rVq1Ro8eDQ3KsR3K
+McK3gl1X7r+S4onNqGhYv/37NkzatSoMmXKZMiQIVu2bMQm/fv337p1a2Bg
IMhn0E+R/kLSulE19hIZGXnjxo1t27bhgoFtTETSpEklVC9ZsmTXrl3Xrl0r
ufdVQob3euL9H0F/60kVPql1cYaYs3JUXCZja+9jsnYrZxHrYKDo/8Yh+ayM
1718+dLf3x8SOH/+/IMHD+jm2kME1LcbreUzmhnUPqk3xW8v7SQCluT169dY
EoJHSN7JycnGxiZt2rTm5uZFihRp2rSpu7v7iRMnwsLCwHsJG1Xlqmg0oW/o
x1A8/lREPw0JCfHx8enSpYsMpOTMmbNevXrTp08/ffo0Bl86teqSRldOiHvS
9V9TPK0UkDh16hRWwtHRkagEE0F4IjM+d+7c4VVtNmZd/1IGzSjKixcvHj58
eOnSJaz03Llze/bsWaFChcyZM6dIkQJbja1o1KgR0eKaNWtu3rwpO8VUXbyP
WW+v1873rPex5bgzmByVon2P4eN5N67w119/vXr1Ck/x+PHjiIiIp0+fPnv2
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
reCf3Br3JcsCQTho0MXFBThs3rw57Ofg4AD+UUq1a9fms6CvXErWJXKpxo0b
U4xw7/z58wHpvXv3ghlnz569cuUK1unBgwdUhDqZOtb60hWPVCPRFprRbCP/
YpcCAwMhDVdX11atWhGk0B5wCnXr1oVADhw4QABCHKranrp4gt3YDyUjJvkQ
vRFPjjukbZ85c4aID1tBcETASMzl5OREh8JTGO3g0xWXdOr7FNHYbt++jbvB
GVWtWlVGJwj0pk6divfB6aiBJkEOo1KNNX7RFY/kxKvLly/j8fGz+D4KHPea
JEkSHmBdR4wYsXPnzmvXrsHbfzukrx+W9C8Vz1jfX3/9BSaBHCdOnNi8efPS
pUvhmaFDhxIcgSh0FnwiOATaYZ/h9iJFisgULS/Vq1cP4Onbt+/o0aOpaB8f
HyjLz8/v0qVLkuAuKCiIB7LuTqZl4TF5EBkZifN9+/Yt7kA7Xmf4+EQ209ln
U58izUOQD3DCZXMjCxYsgPFk/0iNGjWAVRphgQIFiDjMzc1Tpkz566+//vzz
z+nTpwdi69SpA7Apps2cOTPvobnyACCEbPNGi0IA4SgQCkEmrCtWrMjFCR7b
tWvXs2dPvnHMmDEU4KpVq5YtWwbxwor8Bq5cuXJlfoCNjQ0/gK+oUqWKbE4h
9uEjs2fPJjiCiv39/Smi93HomzaaH1YGzbpig8nmAnlMU6FN0lbXr19Pa6cl
07apHVrCsGHDCBNoRX/++acQiz7K99lSUzaq9YaEhBAA0lPoQYRd9ER6Vrdu
3bAed+/eJfrTZ3j/Vjr1mUoNYnyISRT5+PFj6A7kkzztmHSsNyE84fbNmzcN
MQfyysf1dTWfqLganhyti7tfs2ZNhw4dCKIlPUuKFCmyZ88O8o0cOXLHjh10
f+1eaSWdrpXiX19qiFlC815zNK1654fYVkI+f/6cGEf+0vKDg4PPnz+/d+/e
FStWgCgQCPUFilBHcB1wQmeRvaslS5aUjastWrQACPv37w+3T548efHixfjN
o0ePXr16lWvKPgWVfDWu83DjoVAjotPSjrqgdgwwKmbJFjBJlEFkx70MHjwY
HIWsADa4Ds+SNGlSMI+/P0WL6OOXX37hQdasWXH0+P0JEya4urp27twZQsP7
p0qVSsgQ8Zi3gXy05Fy5cllYWPASn+UKxI85cuQoX758o0aNmjRp4uLigpFZ
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
aefPKXpZHun2rbbaCsDDHldffXXskfzaY4899ttvPzzzgAMOOPTQQzPTwBCM
FwlIypAd55133itf+crW6AxlkcXmpEw+uym1/kaOE/r5PX71q1+dpPZXC2V5
zMgnRuemYI+bb74ZbQAtRYy94YYb8vPc2k5OhvPL4S34pxfDIR3lagFKHcaR
Qvll+PznP3/9JGXKIad7oKhAscpxJRyVX+i34nZ1YjB/IC36wUJj29qIu/+L
SWqHuv1TyCSwAQ7lzzDvhQU4K382GnBpxbYQV2ltiCvQfecYYSH11FcdUcuR
cg6uYVri74EHHkiHmpkweb3neYYzNVPzg39K6JxeK5by6HN6a55eZNMDtavj
miUv6jcZCtFrXheKV/46UJcGvNtobu8+i+YWA/Ok3fLsIJIMh4tep1ZeVJl8
9Bm1TJL/8yRl3BE4zB65pUJ56j14VSH+hWmBw2yKW37MyEjKErkF6te+9rUd
nmyx1438/vX8Va96VS6AZEC3Ssuxtn9Nhxe+8IUdBE3fMVnM9MMPPxwkoy5R
o1p3wgGoTvCh6zbbbANnXnbZZS95yUuOPvpo0005CtefMxOMF3MojNo0k2md
weDqEE0jd8zcolHk5jQ7sulzNQqhZegxMBXkA0332WefN7zhDQYa8Bt7wZXv
Zp4efoNg77vvPkqZoTcEhfCDco888kiUhjJ12hzUl3r+FBHKyYUB6vBSE4TK
gyRo94cccgiCx13pmzNTW5PzlBgeLv26qKxOmHZCout0kdmHe+y6665EpyvN
giTy/GnUV5oGRSbdl770pde85jW77bYb/WK55Zbbc889r7rqKvwcX5qZ5yvw
je8IdXHddddh44cddhiGT58CqEgWyORHP/pRxFP+TDnGz+FT5d9YjUWftzdU
qOhLLrkE5DME4CgpsPnmm++7775w3Yte9KLzzz8/y4Wrr776D//wD0m3Ysh2
Zg+uIMqJe7I4v7tZyyq2U08diHLTilmHqUq3337717/+daIfsAnPJKDz5dtC
Wd50h4vdntxzzz33338/CQUwE4vjFBkI0V5ex8wghGx7g3CfmyQwsiOCBYqV
WoAKshYPImuCIFlH7FoIgtPIegCVRM6MRSKsg8Gd68sQtYOOZeje9ZRTTjnq
qKN23333nScJASxYsICIBxIuuuiirEuKP9uLnRK84IILDEGHADs96JrJTBav
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
35y08hdR4khSAzMZPumxFj2IidJMeKEqEdwkdSHLCD4nha6FIkq6CirAEvl7
Ll26tGUN0s0XiZ4SUeE8X/rSl77+9a8nmPKMhktDfZmEGTWidthTla0jiJXR
l1ICsmLzFqcaZsvCDRjIQK6sbeABAOORsl10BDMy6GqhMr9Rsh4GyOTvm9/8
Zng4sEEVMqYgjb6CWtUt8ObNPp0N5IjvMeBlLgxhzsJlF8C5z/WUos91OABm
yIClayalMCO5Euvkm2++GT2UYyXjtDdMys2T0oiMwN3DmTdf4wJ3j4hzKlDM
Q21HIePmsbWq2tlM4qKZhlIZ6hZU5FvIdYMNNhj2aUVOo7B4Zwt9qM6rfBGw
LOLxcFIuynH+IyWLye4uAJ9bR/GoDaIaoitV0plZG2ZdaXCNrHGBzEtYrBSb
MXL6m0nJe7dl5PzxS03iWUCuLH55rPipzoZvdOC73vUuP/WVLlJVrTAiULHZ
Z+oBeI4vf/nLL7jgAmqXOeIKLYmQza8HIKHptBa6YMECepMZaqZnXfyC5Rl5
mh3Yr/doPsg6FPNpztY5TKgVKuMT5DgYqUUF0lfyTRsbuP/yL/9CVXFzviSA
evnLisI6Rxc9WotQeXPTGIG+0Gw+HaaPqYpK11jhPrN8PSdQhwDAfhpWugYK
ROEUt5nVA+qvdNRHLc2UkcKFJMwOkx0bn7UYvgaWOratfxoTtZcySw/dcccd
HRHJ448/PsxL5lCZhfpaYfvyl79MoFx00UU5Huavqr0lspy+eWZlm4IsW24/
iSdjUJlhY9Qj1F6+G1tuueUWW2yB55e3nRAhSkhPcA71QlnlFyBAiaeClhCC
5aTQFoLeCZQILmodsQL1ecnVV19NSMEepCR5B8YbVliXWIEtE9bz5s0jxR58
8EEA7HOf+xwBAXFl80+yeCq56aTNYufFfin8GlJxUiTkgtH5150eJ0N9HbfB
k0viQMxpYBGBfOsb3/hG+jgB5LuFtutDSrZkwyQvGZ3nQs4FZRArY0Vptorp
p5LehqTL0lXKiQceeODOO+/MU6McEJ4aXg+VEVrHp71BXxVGA8ZzXpBkCuOy
5Xm9dZrGfvjDH1bbj03KbZNSDXt5q0NKGXVzRSlvby4YI9luySZaYsqNRQ1H
AOo/+ZM/8WZNaD+63eG77767Pi/Q9F3Li3+L+1cQ6RFKenqL2fn9999f6MKi
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
VUQ627+8aUVUJirjKV2nA1W1KcT0b57RZ5111pvf/Gbi9OMf/3ieIE7+alLK
ogVYgmH+8nKD4v1f+tKXwLAHHnhgOorLMvhxadJpuGbMTDSUc4bq7bffTqF/
6EMfqovUByDxLaQOAFx77bXQ0R/90R+VPEKVisKXF0OOD1U47FSot8KJNBuW
c0qh6oCuXGDc/JGPfGQswhb/xIe8ECAJfXkz+FRg51JyjHQbJeNoobA5KL1X
Egqf9omRps2JlwAt+QuH+kKDbnMz3GIc3zMp03jGRehRDb1WlXq/n64XThBI
Bjg93sWoC6UhGDi5UN4tTF955ZVuaB7Sm1UDcjCgRMeZZ54J0ozI5Eubqpr2
7Y2WRpmDbcaVSrYGIkR7QBGewtqsoaB4c7Dvete7BkcUITnH3qZk8QheaI0V
owGNjpgOGceA2A2XaWw7Fd0PwLftUPESr/LCUhh7T+u2Gp7fhzcwEEBBphaT
rXDrL37xi3tPBlHnjs0hexyscn+T/I6sOaIDLNTM0VfT+Hl0bFiahFE3FNXk
+aNuzolTjBRa1ZxTJ8UI4otHZnf1z0F9rqM6ZKBz1OfII490PzNhToDNZTPv
CiyPTOXc1CfQHa7UdgYy4iF70QNOh5ZXxe1MP31ZhkFt3Nmzhx9++KJFizAX
wYJy5sjelWTcm80mQulHwmfPPffEkuQSA2fEL5qZCkm9ouu7Asojs3sag8FY
nhAjOYkXCIHAwQXf+ta3lj0Js7KVIaM6Pvzww+z99773vYRnS0VHH300dYzr
l7t5Ms0IUB+JShHstttuFFOxkSmpEu+2XpOO85dasffdSZyqXku9559/PqQ3
VkuLRPGqV73qpS99KR3h/C1veQttXjgyiILqv+mmmyhceADG8BcNAmE2PeLT
PgFSnnbaaW0gT7s1bZXWq/hJW9GGlJ1+K5Ya4Pfggw/CSyB0EQgPPfTQbbfd
dvjwFtPbU8AJNFXEWjZXiSqacoHBirlRnEAG40MPPdQiwrTW+InR+MCNxWcw
9HfeeSfspAklXAC38jS555577r33XkdVgqxCpDBYLjD5zBbPJBfacbEka1px
+6SUabe4IoVA6YZGIYyn99yDjwp1mDPvSNpbeBw35P1RVBalxG1NvunP5vQg
OgLNU+0iA/OK112wOz9BUK91BEdh7/AYzNNsZFk/wHKgyBH9+AkUORa6pGyz
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
MpR4wVgMRqhv/p789CmJClprLBZdvny5r2jLCJWzTpU1zOpoBWNEw7EHhIyF
IF6jRrva2fJ4130dLd/73vcYUzTUNttsc/jhhxtHeB4/zPyoo/ejWgcS1bA9
4ogjnvKUp+i4iy66iGAfW9fq4vU9OKeUhQehDPMMyXJz0G5jru+RLIY+9oXO
JYf/y3/5LxdeeCFOgFuwJXCytlDfHCTsDezBz372s4DQc5/7XLpsGmI5J4pJ
Xfhzm0lBZAp06623ZlHuu+++y5Yty88iS/m4SSHqqcXnT4rKe21Z20jjZrre
9KY3adFf/uVfAjPUCiRQPH+CGvwreSiVPaz++XulxtzINDqds5pGC8Ol3oYf
6Kmbb74ZLCnYRU67zdeV4IDyKvFZ83jNlrjekrSB2SKsExfRinYo92u5YrWF
rU3w/vVf/3UOICAZxe1n04AhPeVDH/rQcB1VnyIhK0hBCzsZwXUDaanj4ipr
gqe83+Mf+9jHPO4p2CDEOEr78F2EIVsW/Kd/+qd26d9xxx1QXy4h+YPcc889
BXkuwcdIL1LOU4+H+txJHvpXhRFEN5VbdoMNNli6dCmNH7T2Nt9VSTgBbaE1
gASc08UY4LJJAfAKJEhJATBtBgPOSxbmBqhv5cqVoRo0L6YK+vuJ4HoE8HDR
R3Uu5mwn6gjtu2hqwbTyb6bKtIt6N0OD22677bnnnqs+pV3TlUVf/MY3vvGt
Sfn+pKAhvQCmFpW6sJaLZp04Fq3RV/ehAD81obWhWdWA9nXfJz/5SSBTxcBm
hEKu1m2vvfbazt88KcXJxIr53jZ9V9S+973vfZkYmBNfxWw6EQjMbTkP9L+c
lHzS2wKqB3MZzmzJhGnstEkDni/UNiCqQy+++GKojyg4cVJ0DU1KPoDlQHVT
9yjWBP6c5rd7ZL7HR/TUZXvuuadBF36b3pg3H/WBOqyDM88884ADDlCHMtLO
zJvpmkZ9VP+v/dqvHXjggR7BYxTxOqgvVof6il6ojYSDjsA/ZDVZigj6cU5u
2XWwXY9joWoJVTKHntX1qYkw/2OG+ohcI8jXqdS99trrJS95iaE33FTH/OSj
WoeFVZqndSS+oI6yx05nZBsdt4C4nXKhPbEfY1mLqFQ6kZW9tlBfdsTYLYAy
999/P/BAjANpO++880B9QT70xJPEOCwHWtN3xOPxxx9vsNBE9A65WvICR1qm
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
kAsXrQ7yDdSH4XU3GwGJjAh9YcgvCNQ3WlHcWlTSF3oBiMU/bL3p6ZHHu7Lr
XImLmuujRMB+bHDttdcSoT/4wQ/WIlSeg/oUEphs0V+HHXaYocSCI67Xyrd+
skucrJCTAAY5Q/AudNRHppFa5Dwt04YfUvcP//AP1xbqm36w47333su8hZF8
awQ9m6+wSGw69IADDmBOFmSPUD3//PNbxlXgN6KmDLxnn302vUBxUB9tjSsa
c2Hr6F83eJz6KMQEFXbdddc1WdH+pQJ6gBbNCKEAZPInf/In73//++m1t771
rf4q6XyxJui+clLkgpovalkJHNGzCZNPfOIT733ve+m7/fffv91Hcxo7fATA
QthShana5p3grqI3t6hKt5ZNuGkZ5219L95F4ctaaKatfLR7jPQAs/ZWQ7eV
x8R5y9ZuKwSuT//ubHHRG0bCiICBhhcnp7VpnE9NIwiKtbYb3T7wgQ/kJdEu
L83RENqtqaR8bcrX5icKu7+UH0V7K2OyKlWH4R3QejFdg6oj5kw5fz/5yU+W
QbhpwwJfG6fuVA33OHFz2Di07LxJziIVU9b33XcfmOor+AdzQg4jy96iWS+A
0WXz0YJOBEVANcyGVYobjMI6BZ5p+xwGPv3005kk3u/mEaL8SU96Enni2bjd
6GBKYGy2T/bCNCZZZdy/NaC+cQJqgkyGScvfKoYzc7O9ZLYYQQBq3FIqw7yw
2wCAvcFmHJj3DWr/3d/9XbvymitGTxTWBRig5Ln1COKX109HFJm8qJWFJHKu
j8rg7BFvjgkhSRySixPwqQ6ql4fXkUceiYxOjj/+eDYa8ZUH/XbbbQcH7rDD
DrvvvnvJdjV5m2220Zv12pr39Q1vDi80ptQzn9zVoT7/jhXe4vV1/xpQH7yE
1XUuaxRXGC/tHhy7aNblHXFDKaiw8UXYMlc1RBfgdvB1uhWPa03XxVK34hC0
MtKNdwxMPuP/UN/aSuc6B/XNTPJhGdf5Q9EyrLZpF9T1ZQ2lbIkkVdzO4l7o
qO873/kOuT3i9e25556g0VpHfQ9MbQ70RVreV5YtW8YMn9aq07KXamOhw34E
ONF9xBFH5MNLyLeMm+R3/ZhjjjnzzDNJ3auuuqqc7E3vOC9ZG6DSivBLX/pS
5/kb0l/0MnFNrUAUFFn7xhWo44Mf/CCB36YvUp18a8dRcYDLQFEoOaisnUtt
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
i5kEGEQAD0Q02Y1UaXMLzVdKjkaHhMpMUc1PO+00Xa05oFpeVJttttlQuIyF
n863m5UM/AqTaHKNtDt55iouNoXHTATax+xu1j9+Vpr74GI7+NO4LmOfd/vt
t0c2JoJOyDgh9jJ2ZnNHQt4Gi75AU9DeUhi0vVv6qofmV2hJrxo7+iBVkXg1
QInvKStbhOXB0AUKxzcuvPBCJKrnMVhI24gjvzZ3BpNftE1bVGUI/bl5C09U
R66ZYjgA8gYSsDuER3bkZr6KqK+Yt/R6rJICBViS3cQojh3qW+uGs9JlDMTg
DMaURCAISl9I9aPMAgy4ilEeEVYXOepbPnFPizGSjIWiIlWxWRyYJo6KUOmD
ucWtXFkApH0axyb1SHnslO6/7azssssuiJlw32OPPZYsWbL7rOy4446EDtHw
YMHBcu5T/4yInva0p+UDuOJCQS6fhfVzm5eTa8axRT/ij3QAXUrKRnoCVOXP
BaVKsdHiVbHXAksfm5XwkhM3tKKVL2rmcwVGGxAin4tgm/tL1jBN0etVoFpG
+xBaq09tX7bMWLyOwr+oJ7FeeN7f//3fLwtJ/iClV8uWrH9Lc+bmlijbcGwV
scxrhQdp/SfLOvikNB+FLIZ8rrzySupPWTmCNJl+ZfNmUvjLDYW1GYmMf+3X
fg0CNOKXXHIJXRUgBPBgRRClzHcFHmkLOycOFy+++GKgwnQDCQAM7BTKKj8y
QKhnCCzQDkzKfUOPgXym6le/+tXCEga/cUsgECaHlIoo2E4lyW6IC7BsvDzo
Kf8asga0MdX/Kgk4aa+jT4dmNZAYbRH47LPPzl3CxRHgWus82+5wMK+lWu8s
RUvEY+gz1zTuKqA5sOgDriaZQVqqFdFG3sqKB73WoGfCl+3ByErTaBrZYXRq
mueOXTAiUNCwtunsPCNJ2BXmycSidXj8ociWJumYqmZusBCQmIZYaUN2xQk7
ihtaEnzsYx/rZIrxpqFdxjuDkSqDzIA6XYSTTG352t6lVOpAGPiVr3xlIBxp
ffOb3wTpY2vL5zeFH6wUeM3A6R/QCM4EjHX1NBZuxiqLk88/YKHa6BNzh3YP
eGcbabYiniL1jbIWPDz8MhZ+9TCSoG7jBnQNAmiLLbbApkx8+hqaXDnUt3wS
ucVXDCLFFv0TXoDlnnvuiRFhKZkuLNr15zWlLJ9s1+rzQvGYNS9/+cuBCvgB
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
ZWBsU7G+g8/f9ra3GWJYi83icxdccIFPz0zWWeYL6lvYEK5ZyFWVPe+88448
8khWWF7eBAtr4qSTTmq1aGbSJsv1+zKlhVEf9c1+wXhQn8FOfOH26cwyo0eW
OuobL2yy5c477/T1rbbainghvYkpQqyNFvPOZeCPgxJo5Nu3vvUt6oOiJy2N
3JwdKJ0WROY76hvUYsTJJ5/8P/7H/yhhB4BBO1Ac1Og555yTaphT04GQl25h
FtzVN9DooNnpiPJkQWhwHU2UwybF9OhHP3rNCdFQzhW7Ncd11123BUcQoqW0
EBqNTF/nWxE4bOs7LKfukB51/5d/+ZfEgvfk6zEUfYm0XMwXMozkzW2domHL
5tAj7ikpcOdatb/aKdrbygNbWI8x8/N/LobCYyVcCH54ocI0CwcgveENb8Cu
/+t//a8PfOADH/nIRzTai170osc//vE+N1DfIoHf4uKEBGAUUjNqnJ133pkR
1GomnAaJtbraYvQnPvGJT07IGGml9dOf/vTHPvax97///YrU3kWQTAk9WCCa
t7/97Y4vfelLoRSgWo3yMNVueq1wLmoHjUNiTbJ5EE9+9KMf/cxnPkNsFsCw
eIbAnrK1rKzipe3AJ/o0DI9tiqvjbb7YLC60784S9hVSmzpos6iBj8EYFOH/
YQjgljK1jb/cVi6PESyo6CiOGKCVcb0MQi85BN89oTLrQZVY19DAEkwAfRfI
jH/wnqppKGMKims7E0EXAhnR817zmtdoFtVUOx0NpH3ve9+75ZZbxqj8XcHY
gqnNM+TJP/zDP5AtBUyjhS+66CKGZ6tsxvs8Qn3TpRrTBQWCYIa8/OUvxzNG
K8ZW3+OPP/673/1uAVuG4li+j2vZ0RzUd+2117IxDzroICLRGCEiTjnllLyH
Rj8uu36Zg/pw++c//3mCqJ0YpM3HP/7xLILlqO/epOmuz/IF8I466iimMRRB
ehfUUWf99Kc/nfljQX0LJhESCr9PTdObJFUzG4973ONe8IIX0K1lVx/Rm6ef
XbpzfQtmM0BlczkBsE844YQDDzyQ9tcLBUJpamW1CTUPU7zl0pjmbws2AH4g
nPPi0+a9SC8DS63z5r7RPJ4TP9tbru5NmzT19GdT1HUv8SqgyL/FXis6dHGk
t7wrwQYhTEMbQgAy8zJ2DEg4KSfynACDiyQfpURyuGg+84ADDgB+vvrVr557
7rkXX3wxpr388supbyIOJANv1Eg5p+HBNJKcg/dGTJtOcvEAw8qMVjji9dZb
T4FBCy/PvReFmkCmktDhHH/ttNNOGiQHmY022ihYnldsCdRA6+HoWuayYpvo
gjq3JHflqvC4nsptx/vzE9lnn320wCGHHPK6171OAUJ6JUfebkJ1gdJCrQBh
wQALeAgqOymp3Otf//oRGqgwiYWpKQUJHeGiv0rhlztzHs3q/vznPx+exANk
+GhGPYUnS43R4q9agPf/94TmzKz+HrTwJGGOIcOTtxXewTY4VoOrEfhhsLdg
MSbu2msES7sBJzfLp4J5H8AqY2/e7wrDEhELJq4ioCZ5ApnnBKQTWQc33XTT
iIqwOMh3HxSwC6O+8rnfeuutBuA//uM/akY8TGKQMLjLkARuq+m07fwHKv4f
P81BfVdcccVxxx1n7OsOo9IJEP6bu8acXLBsAlbMzNpKM7PDwXD78pe/TKqQ
CeSeIn3wgx/MsFq6Ke+X092kBRNHG8wA7Xzzm99861vfCg9QfGussQaFcvjh
h59//vkMuvmO+qZ9UmYmfnYs+mOPPZa+o5EBHiKLvqYQzzzzTIZSjmlzLJGl
WPGR8G6E52pJCJj513/9V2ITnNAR+YrCEiW6BTNYTJR767xuAOdofCredbrY
Xx5pfqak9rBW+/qe/exnl9fDPTvssENxlf275ppr0s7tigcR9Tvg4Zgfa0E5
SghrtAJyO+64I72v3dofuOeee5aLjYFfgg/nLipq+8TGHr928RVnpiXjaQ0+
qCsj3UNuth5RKVUDPI444ohjjjmGTPviF79ImHzpS19y/s///M8QjgZR8uFu
XMg4wKAMaOWVy5m09UedXg6OstmCZ+4pN26xa5q3dA68afDcW8ZGxGbSAKGy
k7T3cpcJqWw7FbUzbNbSvJcXVjF46UPtvQQJ6pRnTEi7eXO57YhK0Cs35/KP
vOtd73rve98L4roImL30pS9t6x3QokeawQMwCoDz7ne/25357ZYu5B0Testb
3uLxN7/5za44L6cw5m9iEzgEh5z8/YTaa+rNOrr9lqoD2WoZ+Cq03MQy4Aqv
Yhv9hYu0/OLw2+8N/OZARyMXim4yudlFEBoPsGt0R6sVY/a+HU233XYbDWiU
qZdhVeOzcCG073//+8MDN+/d33Vc9wiN5hPEi67xfjwPgb/nPe+54IILxl76
IVLmBeqbAw9qTG0F8n3uc5/Db4F8/a6mH/vYx37+85+POMD3wer88dEc1If9
PvKRj5DPeaK98Y1vHFtJF35qGRVm/Lzjjju+8pWvEClkOJlAj3zoQx9qk8Py
kD73Mo1+GaGMDeGPfvSjdFYJNwlwUuvUU081hOc76ouCuJ0wRS+66CJogR6n
1nEjLUajffzjH1fl9qvcC/PPQ5wumKyz33jjjczkk0466V/+5V9o7UMPPZSO
bpf+pz71qRCO4cy4brWxYG7/NKECm9Dm8A90RBSDDVBBiWIpceell33FK17R
JI8bWt4Cb/JiGNNHcBpo19yO21oNpPRdPOCAA9pOFiQogxu92UZEb6ZwwT9v
CPl41hcdc+ds2+HC026LnAuCzZrepFNodiANTNp2QmUcRltttVWOxnqQ6s+b
YIVJ6OA8tZ/0pCeBUgAY3NjSJHgAohQuD9CCsoKv0BpIk5MLZV2U41wYXPcS
o8PNKggjgWH4h9b71re+dd555zl+9atfJd++9rWvnXjiiaeccoqfn/70p/UX
Pag3tV6REtWINIYDC3qj14w7d/77v//7Zz7zGSdf+MIXTj755K9//eunnXYa
W+yss85iDpxzzjlnnHEG5vTaz372s5/85CdL1ZFPB4Z529vedsCECvjsX38x
q3ELrnAdulNmnyvudyBQwdQFthzQbrjboNaON9poIx0HGK+11lol5lCF0c7h
80I0a/82YYa954D56J4s+855VfHGYWmt2jYAmBNj4HnNfuGFF/7iF78wkIeH
xe233w4HajrDwW34AW9rNyPrhz/8IbTmhgTd76eP2qb7ox/9SD++7nWvAz6x
H14yXgzqa665ZriVef88mutbJOojrzA5K8z4wg8a33jHh3h1OhnH9CaWe7vc
/7+hOahPF5AAVFuBjAz2n/zkJ0P3LevZ19/cNQhG+8cIHwOBmWaEGps03VB8
82UU/DFRWIgUYoeefvrpBCY0XsIjAp+OIDyvvvrqbv7NVO7meZQvcs7+nLEv
hdSCrOj9Ji4wJFsVgrrkkkuKpgX+DcfedMcy5U+l8sX87s8880waXwlpkKOP
PhokSONDCP9rQrmRAnuwR/M/LlJhMNirXvWqMF6rdYUgbkaudG+wXCuVO+yw
A51OYkN9pPcOE9p+++0DeCj02LQeGOBnYUZy7XQbkOArLUE6ARjGxGMTkjvt
tJPbQCbvX3vttYufXCDfaQ0+HWXlbuZraN5sRGIZQaQjUGSNNdZQBrVoVRQ/
F08MmAQSdDe4qKjVQh2BOqVV8uIfbrbZZkU1HNH5ttlmG7JUgwBRGr/st6W1
vfjii5nYRU1x9BNIo+sB9aOOOgqb6QJgDz5RAGAA6tCY3mOI6d/Pf/7zsEde
wHDjGRP69re/TWAaleCfrj/hhBNihg9/+MPlI6ZkiVAcC1eQq3kZqylcVxzp
gw46CBR/wYTaB4gxoNZcxbWMn06aW1ZTzOCo4p2oNTgNdWvkaZi3OEg2nUSj
fQJlfik/2py53MX1dUDOg2Njw1i9zTu7qcVxv5uNX6BUFXAge0QbsmGhuBGn
HQ5pYfeYY47BwBrf/VhdM2pb4NC/Y312zu6OxQ3VTgakLJjzdddd98UvftFw
YDJgP8BSU7MCmnVM7CwtcXFvEt0dUu3nrbfe+p3vfAfjsQsaUxtssAGWY7T+
9Kc//eOYJZgXNL2JbqxkER1GPWELjRvFlAJL5F4r0ujxYUBBoe3AIf2gC1Lr
Zz/72Uifuhz13fu0YHaDWeue5WumE0na9dZbr+iOtNj0xNd0utt5QYtDfXiP
QIZhiOj2JhkjL3/5y2lYsuv/mdC0lF7W/DmM6J///OdXXnml7oAEyNLddtuN
dN1rQsbO0572NMAMOGlqznn+vG3uynFjww03LE1G28zIZL1ZCOLWNMu9VbIt
SIxufdjDHpabBjFeagbPDpdeJy31ejlEVL6Gdddd13ucN09Ix7nNy91J5eXK
UYC7XuXntMYfSGDOrq2FPTsGHlic68ccCOHN5ZoBQQ8//PCPf/zjRB/kCXdh
bLeBCqqcJ0sb8Epk5nwkmGu1t0kk5Irraqe+xgjYzEQqvzBUWZZewLt1VT/3
33//gh4/+9nP1jteDv+05XKVVVbxKn0ECes+fQp5tlcQugZdivkMpAXPmnFt
+rQsJ1tNqMiKWr79AE1OlnCtGUvM4Mp/m9B6C1Ep2B796EevtdZaKhjKygeH
viCiV199dcfw3t2Zoxvt32jCHrEflOvndO7dRT7eenHZ1jwIZmsfyFMXlA4m
1OcIt08n7NBNKkvTgcRnnXUWHZe74tCJLKmxl8+dZcRjHwHYhADIN2zYu4n6
5mxZn5nIQ5DvG9/4Bn7TKaXJ1oNHHnmkgXzTTTctuGva0/ml16ZdPgkojckG
YegZCzhEf4HQn/jEJ7RAAXiXo757h6b5cFgf9BfGI4H/P/beO8yqKlv7xe/7
7nO6r32OT5/2aNs2JgRBERAlCEoSBSSHAsk5SM6xyFkokmQKkByLnHPOOeec
g4rhtvc+h9r3d9f77XEna9cuEJEK1vhjP2uvvfZac8055hjvmHME5gUaYeTI
kbZu85TbJi8mTB4ksFz7kDkIyVOnTimG/SmspaSQyO1YFwXdvHlz4cKF7dq1
Q1koagDBxWCtWLFCxcr1d3NFS8h3+DXkY6f7wZQpvPKVK1fmzp2LzgXtCCqg
SdHaGzdu/Pbbb8WTZqE/Nf5UfNytW7fo+fbt26sWKroPAasga2XPAEUoLS0n
lVNFQRkKwUBRKoWL8qjwiWZXsTbFDnCg9ClchpZXBK6gmh7EeZX3VXCHtK2t
wGizkk+6jhaipuU7p1QeKoEqHzauYbIDRfi0Nmg31lbqQgNv49wfjAczuMSd
uT9QB5jUs2fP0aNHg80YWQsk4bmKUhFpj9KN+7AoD6vrIUzCxbwREpWpoSXB
7NmzK1xF1dDQ+EhaQJdidS1MxgolczfFcahMrfLbPO+RxlSFz4ANqnr2okf/
8IgDZbBR1mj57bzqkdwXOXDDq7W0KAZQt/MIRo0R1DXmwaikOhAXyBBQSGy4
zff4R0QcJeSm9ON8taQu7vjasXUvDQBa04HFPcKisaws4moF8Oo4lbeoC3ZF
TIE6Tpw4ocQpNvEVJ3X48GHtutIYUD2jBq6eNm3a2bNnrVCR/eXXoj4JgXv3
7u3fvx+rGZaDN3gKB+PGjdu5c6eSFev6p5An7fcgk3JAPtTEypUru3Tpkjt3
boWYAaFbtWq1fv16La6moL6nRta9FrKE2po+fTq8h6yACbEWZ8+ebTuqT5Pu
B6segDlRZBjIqgAVGRnJpKCdUqwpqO/pkDslXfrpp58OHDiAMKxSpQpKAbnK
pEaFYa4iNuX0EhtMTZCEtipcLnKBnxbWeOVu3bqhXNCAvDKcWbZs2REjRmCh
qKySMNjTXIuWMzmftG3o0KElSpRAWwlWCSEozFNINdWDW2a2VcoBAhnkg3BW
mj4AiXLtQtxNi1pveqRKcIoFqFixIjpXOeXcShaoY64EvOX3KJ9HHHDbokWL
lixZUgEj2bJlQ2tbImJYSGGSWqoqUqSI0gZyGXKJRximMqAVJ67woUE7Drdd
CH7g9cEbIIcKFSrQMMADaMRNGuNDHalCogZ80aOWtFBBIiplqwK1yiUIGGNc
lMEYDGYBxUJ6cjVkZslBTqCOrwrdhTgveKylPCXtYfgYNbqaPlQ4Nm+kQA8+
K1WqpN1b5qx28zHzOS5XrhyD8umnnyr5j3wg9Xc+VfetokdcycDJjxFSBTre
i7Zplc+3df4oqE8Z84CdYlTe0Tb0BdXUk77xVW8Dhvkj2kH5JPm7Zd5WQUCD
68KBXKwkLZs2bUK7yaBTkgqt5zOJpkyZ0qBBA15ckdEtW7acN2/e8ePHv/vu
O58ci3202EZb+5Lmunv3riI46Hn6ECuALsXcQLupEG2sk6JTd0hCqM+NylTS
GzQCfc6wKudk9erVJ06cyHktmaagvqdGxkVie0wPDJ9BgwYpKhNB1LRp02XL
lgGxnia/3Q/mhNE0YZYxB5mhyBbkXsOGDZcuXardtDhxSArb/B4UrnsRldeu
XduxY0fnzp0Rj/LQ5gD9gpA8ffq00l5JcCUhqeVjoVhneZOvmK5z5szp2LEj
ipX3ZbKgx+vUqRMTE6PENQGvZ54af8Z6HrCSn7RNee8ZkcaNG6PHAVRMHHQ0
ihuEIDc5dJ90qAtmgBlciXDmXZo3b96iRQvuULt2bRXklSuXEqrw4pzs1KkT
4mL06NFRUVH169fnpJaqVOgKBKXIiIiICO6mvB9WH5ZPmIQDPqtWrYp65dHK
t/zKK6/wFXTBxcoHQku4P2ADSAZYsg3EePz6fKjM3tGHEkNLsNFyBvSFF16w
2g3h1pqEbQQqbI1LZ+hJrdT9+c9/Rs2phC6QVZvg4GreUSufCjnRtjhwRWnP
+a+ls6YPAXVKss0nUFzQzsKrVeuW/qSXVNq4qUdWgZduBE5ER0fDnzNmzFAZ
u0mTJrkl7RTE0aVLF/7SpEkTFeaA+K/yfqvmmkrx9u7dm4ED8CvmWrHJtA3u
0m643j0e1GfkAmYLxKbHQn0C3YK8PgSo1TwVyONT0Tc2TPYvVdOjh2Fg+mfu
3Llnz579+eefVUZNi06YseCucePGwW9oQOY1kI/XR5pdvnyZa+KEfI8i2cyN
SsJB0ayW8JluRJ4sX76c+atc91bmI/bBHZOkQrHBgiM3btzYuHEjfKUsSbA9
gqJPnz5Abn5SEFwK6ntq5BoRdD4Ka926de3bt0cuMTQIlsjIyNWrV2OVPM2B
sBUSHTBBrly5gmZBfSAq0T7IqyNHjsSTsjKFbX4nCu1hOAc5efHiRTRIiRIl
UqdOrWhHmKd79+4IMeZ1IKnJq1Ay2W75VLFE0KHt2rVjsmDAghO0ILBo0SJe
2XZ8fm/+dB8kfQTMPnPmDNOWlkyYMAH1jS4GPICpgBx8+tSxDy8x8eWEhh5X
CCrHKr7GC/Kyb731FkqKAyAHk1GxAAAD4CW4BWyjbT6ULw/95z//qW1NgAF3
U/FflVrjzkoIwxkAA//lei34gOv4Kgc2/kJLADYcKJkJWCgUPITbUnzoVqOL
H+K82F0bDN1hFK5TEQrgBM17++236ecPPvhAxUoAbLyIFa1TyTmlZ/noo4/4
VUVSlGSbd6SfOanSGAwE/+V6OhmxDIwHlfEJ2OYrgKF169Z0PvpUcbjdunUD
lSnbM8QE5FOB0j169Bg5cqTKsX399df9+/fnYiCiIqn5O6zLIILk6W1aUjJI
NFVpZ7SoyzUK/OFFFM2BFUD7aSfoRcVrUoVA63jGJc7Cx64Dnh0r30uqYNyH
Fc/VUqrV+LCb21ddxl9gXZWN48VV80LFbc3/hLmDoQoGxtJhXDCXeC+gr+oU
MOvldBRw1qYMqzx0qpoMRNVev3592bJlDFmBAgV4CtwCOJ89ezYoVKZl6G1j
nUKoSYh++OEHRCWCqEKFCirXAmPDQljNBrljY5N8LackRC4XAa6OHTs2c+ZM
bBz4EAnGlMes27x5syUefzpkNpHBPzgHExUVgFGM/Bk2bNiOHTtUoSMF9T1l
ig3ZzlDuzTVr1iDEChUqBGxAPvMJ/0RFRYHPldU5Adv8RMhEkxaZMYVOnjy5
ZMmS5s2bg16Au6i87Nmzy98b4GeJtn5X/nQ3gIQAtWhPAxCqW7ZsUWlFuWCp
wJm0oelEKVMrUqCkFgpGePHFF5XwWa44+juoTMEFiubAfn/zzTe1cqWfdFvB
oT/96U+K+1CMAzfkwG4uzzRLnqYmyQuOv6MgOK+ACCY+xyrWZss4Rlpns0U2
LfUICdg6TypvEUnlLXRlKMaw/MD2F5/bngtC5FSmmkEIzMyZM6u8bOXKlZWy
uG7duhyAuIBV7T3q6BFAS+uckMrdcjFSV1nv+IkD/lvLIy4AuQ0fPhy9CWCb
MmUKnxxzwOeIESPAb8y7th4BZnr16gUy7OCRnkUbAOdAHe6mLMocgy1BpKrV
omidNGnSyOVP4yIXPg2N1UlhlBluORDK0lGGHHkA8i9lwAv1twwlF0iH5lJ2
MWEoPlRYjbJFya9PWwycN8fCVE7gj7xV06dPD6YdPXo0xtr27dtBd3fu3NFc
FvBgRoMDAXgMgYA3cBeAjfXExfyqPKVy4TBp4ANm8QuQWM8l5vz58+vXr2ek
gKAAUWAzQwPURP9qZySc8Elaek0de+nSJQAemFYeffL6hnWBgpb0JpCyw/sU
yV0ogJkPHTo0ceJEDDo5kFSvXh1WPHjwoJtL5ymQ+cra4jZzc+HCheA9GsZM
lOc80zCQgvqeOoXKH0lC0N3UqVMRmMgxifSMGTMy2bEaMOhgoSSUtiVOig3W
2jAE++OPP545c4YpA9JDmgEA0Hp58+ZFFzOVbt++LU+h35s/bctJG1V2nm4H
+GEuVa1albFAayN1UY6qwWFOUzpWSdy/eqRjFLqAoiI0bS1LAE/ebj7Nrrwo
cWpzLYsJj2lZRjgKla09UIOd2jZVsTb5vMFRkkhWtU1RDAb/hFqBl4IrQETl
juZihRiYz5h+AsyoLKwPliipi4s0XDTiO6nMJIpapXkKPlWiPznOVaxYkYPa
tWurRoYIOAcsLF26dNmyZQEhaECurFChQpkyZZQDkJOc0ZY6d2Ds+BfATyV0
+/Xrx0G3bt047tmzp/LhcI2WT3U9d9NXCGmJtoU5AaXAvFy5ctFCJd6BE0K9
7ww282rqjXABMqlCwqjlyanIIP3Rhdw+cn+ynffQTWGXi6wxsKXGVzwg1Mf4
cp6n2/Wc1501TECsAQMG7Nq16+LFi64RGuuFb4AAmbPouxYtWnz22Wcw3ocf
fkj3zpw5E5Dmpk8Jt+AWG28tHnNvVnL7UaNGMUwwpIp6Dx06dPfu3bITzV/d
UND9B0skJAlSrwJi0QvY/kWLFmWCMHOZHYwCqNuNUPatmiatN01yJLcBdTUT
AbYfP3480oY5hXjE5Jw/fz6K42ku1MSG8adatWoVIhHjFLbBSgL1YSnECSRS
2OZpkroa/MMsPnny5ODBg1Eukt7McQyHKVOmcJ7p70syb8ItIVv/60ncpaw1
qs65d+/e6dOnR0REpE2bFh2UJk0aVDbAb8+ePZbR634wz3/gaaWv0XPv3buH
gEXFgEtLliyZM2dOZUdRvQlpeXAdgOqdd96RZ75ScwASlDhFB+CEbNmyFSxY
kJsUKlQoR44cgg2u1k4V9OH3KXTblUNHKxhBS3n8XUXiaI9igVUbTi5ttDN7
9uzgFtX2As8ULlw4T548aOT8+fO///77XMB95KIv1AoipZEod9Sowg14X04K
4NHgAgUKINwwHlHogElwbCjG8H11z/i+Go5VqmHBYxUr4aEqdGIJXjJlyqSe
5JjzWltLly6dLkMh8lW1kpUghQNVOVGJE22kWjJASKVvmWuCxFpxhZDb+iqc
DL5VPK9K8ulYYMmwlovVFc6jCF+5aPoiVtxaae7ip/b0tQJMx7ppUkI7OZ5A
j4fuyNNy+Toqt5icKu0nn7OfuJHL6Cjg3OLFi+/evauNWjNdNYsPHDgwZswY
OO2DDz6gz+GxBg0aLFq0CIioVb6A40QR/7wTaWHQ/Ukp/kBBwB5gv4J6lOB0
3759/GqmcdKSilaTyKzO+8EcrYj91atXY+nAzPAGjI0FhO7+/vvvEU26Ptzy
Zgr9HuRuDCkycf/+/cOGDVMSRSQGA7Rhw4YrV66oFsbToXCoD/uoTp06CD30
TqdOnZYvX25ZMkLvkLRmTTKg+151MIBfTEwM4ByBjApA+KNn27Vrt2LFCiSn
YlpNbLou0EluvNx9VYz3Xbt2IclBFCh33h2NrKSFCHN5gAeC73jfS131FGKZ
9QgaefXq1Z07d86dO5cWgv2AT2AnuV+m8jbLgChoOgXVFitWrEiQwHgqnqsk
b5ypUKFCjRo1AFT58uVDRGhPVrultpXmU9yGlKSsX/EIYACcACxp/Q0SOFGF
X9XMQkHw3KpVq9Lmli1bypEMIPf555/TMOQA9+FK25NV1mhayyt88cUX9L+K
RKgqBE3lNfkjN1QBXIaJZiio04UKltPPRRoPdVGzfrCMLr6/Gx5WlIcb92Hu
anYftwEWMKKgIQYOmKecinQCsJZPhk/ZkpU/EMQInFB+RSVIVM4WJWah3+hq
ASRgs3bhDfXxFHpMiRnBjSqoYa0KHVxbf9Nq6vPPP6/EfQrHsPeygJqHZvB7
xiF7hNsbqu/MuyjTr0FWPpX/R3u+QqGMO5cB4Ro2bPjNN9+AuBSOYdhM6+Fb
t26Njo4G5sFy5ss3YcIEIB/2rC8v3yMKK10siadlk5s3b544cYJmICEZJsaF
adWxY0ewJT8lORlopAQggQfLBnGM5EEADh06VKG7sC7zNyoqik6IdXwUk1Bi
h2RAriWitb7du3djdzA0iEQs0+7du4MDUeVPc4c3HOrDQGAmMk0Q5q1bt8Zq
ExYNxXgpqO9pkruEhUTdu3dvz549ixcvzjSXWz4IYfDgwefPnxf40fa9b5s4
CU18cZdypOgMEwehDfAbO3Zs9erV0b/oTZRsREQEs2n9+vXAQvu7Fv2eAn9a
/SZAJjMF243ZzawZMWIE2g2EoJgItDwqHiiFPS5H/fr166s+mmqNoQEVKwpS
Ak1xvkSJEoAN1K6t9cWjyk19W/UEYTAhDYjjf/fIfAJVRoHzdKOSZihSgHam
SZMGNIK6RINwgQuQLMMJPa8lSsAPCMd2onk6/8rkEfINfAJ4iHPRSQ57vp3r
UKgTP3oJ1xu+LdH4b+UuogL5eKlSpUqpzG7//v3Rp7DcxIkTJ0+ePGnSJKyM
IUOG9OrVi19btGiBkOzcuTMyHBu5VatWtWrVUqgIn0xJepK5SV9xwFBauhi6
i/MgH+CigLFWBUNjLkLbqdyMcYbf2mUP7bc499ZtlG3zXTHR7oMYXyW0oc2A
W7oLnA82ho2RSPPnzwfyAeHcmcjXo0ePTp06NTIyEq2XNWtWehhLoUuXLsyU
w4cP+/aSHmWnNc5ftfR3+vRpjC/sJrod9mMOYtEA+UBBPl2ctJxh3L1vvb7O
APlAzohE2IlZz7xDgy9YsABpGXA6KgkJ/2RAPicElPKGDRvatm2LvYyABZ+P
Gzfu0qVLWEPyX306FA71bdq0qV27dio1jnpi+iiaI84QqhTU99TIFrKAGQir
a9euzZs3r0OHDgADFUXSovGaNWsAHgb2fFZzEpJyaj+SypbsFPqHBtmzZw+Y
qkqVKqAOZQ9DyQ4aNGjbtm3azniaXiuxwfLxDJCGhvnCEDCPhg0bVqFCBdQ6
MAntSTtReXXq1AHvqdgu0A7bSpBPZba0pZgnTx4lzXv99dfRuXGm5tC+pxsr
4YaNyK/Pwkm0SCgHOTcKQEtbtM0AoZKfaIWQM/JJ44//5pGVWlMICe+FVlWs
gaUy1t2UTFg7s5ZTRSmRlcv6fwXJBwjdCAU9zta+4iS7iY9CwcwzTqkRd1nM
/sIxLQSeFSlSBPz29ddfT5s2DVm9Y8eOAwcOHDt27NSpUydPnuR469atCxcu
5FdEd3R0NAezZs2aMmUKX0GDzZo1Y3ARnpUqVcqVK5c2oBlZ0B39Yz2vAqna
QgUQKiY31YNVTkJH/JlgzmSFzNDVSuCsUeMmLnKOB0C6e80aFLfMh62RasPa
3W7mWYo0efXVV2Fp5iC2DFYMExDhc+7cOfjf3DNQardu3QKWjB8/nj7BrgEi
wuqwfe/evZkjyDE3L5/rChX/vHP3Muwkc/Dq1asrV65EhYEtla8bGwrAaTU4
JFUsXux3Egu/B1logOUY/Omnn3hlAB6wVnVS0AIobowUrGMpbjN+k5zLYvIg
8TNqa+nSpZj8SseKXpgzZ45ytjzNgPFwqG///v19+/bF1MX2R/qhXlWXLc75
mMJFT43uOwnnFaurYuXly5d/4YUXkMbIZ0AFslSb8vZHDZzvJkmIXPym9qMm
du/eDaaCS1E9aCWUZtmyZTmzd+9eZLs0gpu26yk0Us4ztgWDsgOFDh8+vGbN
mqg5Fd1ASyKcmVngOuVkRispQwvimncBBiC6//nPf4L3XnrpJQVfhCbcQGXL
Tw8U4cOEXIwG53HARYVR/I9gnVYOAAmKA1XlDh4nVzeezkmtBypWlKfLOZBb
Kf6Xx9Ee1QFRqRS5KaryRb58+ZTdDniTLl063ZDmqQwrtomq1BUoUIB3pwd4
rpap/2e8NSbixD8uZguHah6PuCE9w0sp8UiNGjWUqqW7Rz084mubNm2aNGkC
eq/pEcJcK7fVqlWDJ5mGlmJFWRq0IKYFPT2It9YymraSGQLLk/NMMAufG+1i
hVT4i0A13ELPK/MPxBPhKGU3sqW5eFL5aZec+/BoZb9R7nd1KY/jJ1DTex5x
oIq9nIcHFHJOYxT0FxkZCeiF2y9fvoxdplmAgLpz587Ro0dRdn369ImIiNAy
MjYOXce8WLt2LdeDWwzMWCoVm1bxzF/b4pS3W6xXgAPMyeMYILoCjqV/GBee
BeRDwwrjxR8MkpjJwJuBVV7qzJkzX331lVws4DRmFsOBGMTw1CJSCthLQLK4
dVDfokWLqlevzlxjInAAVhcsf5oUDvUxT+VzmM4jWIipFAh6kKagvgQn2/QE
2u3YsaNx48ZgBmUCQX0g/6Oiok6fPq3cxYEHXeOSEIWTzHovgN+aNWtatGgh
QIWGglfRuePHjz9w4MDPP/8cCBbR+L3b6bq8uvvpHNy8eVPAT8uSSqIlLKQk
ydqEdUuqqdQaB6oFpqhYy5EiTc2v3CFjxoyAE1S2Sr9ZTQRUM1DtLY8UWmul
zbSZq/q86dOn5+8qCwsQFf5UyVdVo1AqPJ3kKVwsAKNlNKVSyZQpU6FChXi7
hg0bwodoc/APogPAwx/5F7eineC9WrVqtW7dun379gxZnTp1FDPCI7hJaBI/
173NfnKd0Hw4LU5K5bj56cD80Owa10VQ2UgUG6uUzqrNoehmXl9xH/Seoj9U
0ZgDS8ni5mPR8DEWirRVIIzCYHVsiY75LziZrhBak0MdVypOVuGxQvIqrsdT
5GvHqAFKlc9ZrqR0fsmSJTNnzszTDVuGQ338xP25G0C9XLlyJUqUYMisIC9t
A46inpRJMleuXDQPrjPfUcF+Gs+wxsTEIHCwtoRG5FIL/EOVTJs2TaXWwI1A
RG7YrVu3JUuWHD58GLPoXx7FM7niEVwmH+wADKmNKpV6YUQA5FOnTsVCdIv5
BpKm2nKDYvTKvBHdvmLFigYNGsAYDAczrnLlyhMnTlQ+KxdO6yZJUREkaTIT
44cffpg3bx5yD5HLbGLIME8SD+rDdpg+ffqXX36JakAm16tXb//+/bCQdOgj
Lr+n0O9BAjy2McGInD17dsSIEaVLl2a+aweN6Q9HrVu3Dsgh8BNwJEYSIndt
2Ry2FcwS8LCWMSoWvSrRoz1BFwi9EydOYPjHr1CeFCnEWMe24qemMl5Xr17d
smXLhAkTOnbsWKlSJUxy8BWDJZ8o5TaRrxdIgDOoKqEyxfOiiDNkyAAk4B2F
wSBUJ7BKPhhgJ6V0tthVrkSPF/YoX758XMxPFpXAHwsUKKBlKG4I5OMaVQT7
6KOPuIOezqP5Cq4A7Qj8COpYeAJohGN+VQYVdI2qSwC8ixQpws1pNoiCP6pO
HNcg8bisQoUKxYsXpw0K77UKsAbtFK2gtDZuyheDar4d3nCoJpSeeTDDiXY2
GQgQFOhFARrvBElxFsJ7DBldquVZrWoqEbQRr8NPDBMXq06ZYoRBjArj1R43
4lQYT7Eh9DaP+Oyzz8qWLcsU5g56Lv9VpDDQhf4RxFLFPYaMX4FPKiMCR7Vp
00aZosHS5cuXp5FaNgwNCQntDfkWMtbAJJ7O/eXDKW6ktTxLWa95KYwL+Zdq
OZRO4y9MN+Yg003uDZoFP/30EwAMrIUJBhCFP7WLjYHQtGnT+fPnMylsbsou
ewzXJisSaloVyDd06FCGg2fxUorzAl5qH801AJNidJtbZk4C58qVK8uWLeve
vTvDJ1uDkerRo8fq1auRfi7YY2hsATYh3+GPRO5SAJ1//fp1tACTXXOqbdu2
GzZsgGljn25+yHCoDxOM6fPVV18h6Jj4SJLly5erEHYK6ktYMlFp05nB2rVr
V79+/YoWLcqsT+V5X6N2EXcMGeIuKcq3OMnn4K2owPPnz8fExKBZ0EooLNgV
ad+4ceOFCxeePHnyaeY8j3VKiqidGiM+GYWLFy8eOXJk5cqVINIOHTqgrJHP
zC/V3lVNWDQj+lHJ5WrUqCHHMFQ5ihVAhXLXYg5n+NquXTs+W3gE7lWeYX7i
giZBsrzE3Kd+kLgtNy9TpgxAReEbfKqwLGgETEJjtGmL9qRtgD1599G3qt5r
u4fac1SWEuCrkAwwBiChv2j1TDHmlohYmQC1N60Uf76sfZzkVyU3COfTmMrZ
5PV9dcGhLfTpAlquJIpaPtUONQyjPDlK9UwXqZNr166tM3Q7inXIkCHDhw//
+uuv+Rw1ahTza/LkyYxmdHT0uHHjRo8ePWjQoC5duqieHeC2atWq3AR8C/TV
4p7KoHCGC1p5xOjwCD5RAQoD+eKLL+CNiIgI1d4FFiptjuosMzrC8AyKigKj
PoDTjGapUqXofzpfm8iuG178MFibvC94pA1cC+mVzyfNls+hBosLGE0sCHoM
qLl48eK9e/fKupT5A+dfu3YNyIcGoR9oLRzFp/KAaZUv4ATeCoe4BdEeUQ/a
ijpSEZCjLSqmD9CdzsG4YFC2b9+OELDC2aH3TEJS0SS5Og1oTc/DjapRjgCh
n5naM2fOpCtM+NhfrG8Tqv1/NHJRHxPk9OnTAwYMYOIwTKB0wDmKWwnHEkNe
tTt37pw5c2bevHlIHuQ5ImXSpElMVc4HHF+p+8H0zgnb2j8OxQbJRRcQiGLt
2rUtW7ZEtEpBoCxQVStWrFBYh5vFJRnQ/WAWVvmKnzhxYuzYsTVr1tQeB9IP
GIM+wgoG9yIbZWq5no06jg1DdlnoFrOe6zvvahO1yjZWAsFkifr122+/PXTo
0Ny5c7t164ZWAqgr0500u5LgKYC3WrVqYACAB58VK1ZU4QnAWw2POOAr16BV
BREhYAbH1atX5y988pUL9BPnlQoG4m7oXyE6AA/4AbQJZkYcASqUzU+7Y9rT
5IzWxyxNig9OKMSAX2k/CIEhCE0LnCquWAwffrMzcgVUBjy7m/tH27cNxTC+
qA0BP0tsIlc6YVHeRfvdH3zwQenSpYXujABvKq2r+NyoqCigHaY6nzDbuCAB
+SZ4BMDo378/4A2MTSczLoA37GWgNd2rEGY6li7FImNYmzVrBiaHaRkOrmfI
9C/+grzlGvQCowOKox9AZcqwrcAlrQGq9gp9zghqTRK8p7SKgohy3VSgB+fd
VdNnglU5fONox/IqlJuByrEpDIdn0TBaCAcOHTp0w4YN586dU8YV+dcBsY4d
OzZ//vyBAwfSq7wCLcyePTtvxxmsHnTf/TD06BLAFigUQoVVtX//fsX1K28k
QAhDeNu2beisX3755VHme+KhcO00X+WAZ/4fP34cHQ3fKrESA4Thhm0i78qU
Nb0EJzP8GbKbN29u2rQJyx0Ziz3LrEd0HDx4UBkUE4OXKdOEybJ+/XrahtGE
TYeFu3nz5lu3bgUcpwKfNZFCvzf5UJ8BP4ANxt3IkSNRGQh/JAByLyIiom/f
vpi68FXiFG6PTYb61AniVVgUpYmZj3ZD3yH2e/XqtW7duuvXr1uSTESlqYDA
I6A+t9PCdeBDPaWZ8kBT25FHQ2nnq379+kAv1RkRsEG5o8eVQ1iqXPt9SpCS
NWtWbR0qmbA2B+W8p2zDcjPjK/8SDBBpZ5bbastSgQNKu6EwWyDB3zxCcSjk
FpzAV+0ZWfZgX+hEKHL7P4KkiFoforBI2//hZB6OcwGKa9QGYRgXivj+8ky8
WYjjJHflUFmF6ROwWbly5QBjwDCQQzWPhKIBb3zWqVMHkAbS5lMF4MBpAGl+
1Z51sWLF0LnaglcePw0fM5EO1OOUBpAzXKAQCcw0eUtauj+5CKpkGxiP5imG
WotyYDk4hJPK/gcp9EYl/LS4qpVS+WHSGPEPwED5AH1d58Yyu0NG/zP0sA1/
h1VoNp+wHEwLxF2yZMmaNWv27dt37do1N+8EgkjB9fQeNgWvSQNgcsDztGnT
YHuuNx+VR0d9biChka1cgTN5KNKPhwIveVmMmg4dOtDIS5cuqWTPo8z3xEPh
2mlqlwPE2vLlyxFx+fLlU+AVvQ2XgrfPnz+vfcOEfo8U+t9aA72DsQNEZ/q8
/vrrzHdGaubMmadOnbKF7sQwXqgngCgGKbqmaNGi3bp1W7Ro0dWrVwMP+pQG
UlDfUySfBDDgF/AWkYDlgwYNwr5GWaAdUChffPGFZd0RJaeteVdT3LhxAx2E
nYsK1m4pSqpIkSLg3hUrVly4cAHV4JtZWp14dNRny3faKjJvh/8OFuTVV91B
2WaEt31NVcqdjRs3MlhamkBiC3pJiVsKDlXCVbQmetxXXfcfHqkAhI4VU6kr
5YmXOnVq5WrmQPF9XKOqFkrUDGBQ0maVNhYpWEDLRNYSYTCtIHG9lgT5qqxx
XMx95InnhjBYcV451KmYl3LC2C5knNjMgljdC0KvtxgNN0DDtxL4jJMBT7HM
hnOUzhrDFikHSsmVK1dOjziQM5sc+VSkg09thXMGdMf8otPkfYfxTm8Ifan/
NRCpPdKamyosa4xECsHWCP7TI2FsdbiqOUMcA7pUp49+C41zsddM5RVEUzUN
3kgOnJ988gkHtFa7tC5sNpgXGg2tdUUVkYEleEFeuWLFilOnTlXyE7l5i6XB
GMifK1eubNu2Da4uVaoUiBeuAyWWLFmyR48eK1euBIAp2Ug4yBf/cof+aFPM
phLP1S5nmTJlMnjEGClnILPe0pvEBrNXJWnUp1U+3hp0feDAAXW19naxIDBY
xo4de+zYMRfoplBioB9//HHHjh2KkGW8mBdt2rTBbgK6i+0Tww5vwNNTANGu
Xbvmz5+/UKFCwL/p06djRLgzJQX1JQiFAr+AZ00gddetW9epUycEtVYAkPnj
xo3TYpe7PpbQb/BkKNbxVdbWErgX+R8RESGndPQOSqdLly5Lly49ceKEz108
/rq9sQ96FsXGm1IpnO5wd9V1zX97ZZQR2qikTZs2TZgwoXXr1jTyww8/BFco
VBZS0KiiM9C8fIJDUN+KuShcuDCAls/PPvuMkwULFizk0Sce2QXFihUrV66c
HMzkKob5xsX8q0SJElygIA6u4VdszxYtWkRGRsozjZNoT9pAY9566y0ghJAP
+KF48eJofxXjyJ49e8aMGfmV2yoIVCeVkgUMozUowT9BLO1IKimNMpOEQj6D
cL7dYfvVMvjFQ6Grgi5WVHtUUYJ2Ck4Lgyn7tIJiQIB6R40LujWPR8q4pWVV
q6PH9cw4OpkeVrgHA8FXjQ79pg19+ir/g8TQYKBhrwEp3333XRWPE+Linowp
HavELLC0674Y+o5yw+PvjBd3EzPwR3iJd9SyYZzd5VvF/Z9etWV5bPLJhJLt
D9NqdcI2EDm4e/cu0AtA2L59ex5Ht9Ann3/+efPmzUeMGMGstBQiTAHbengM
9OWDfNx2+/btPILeU/wLjezQocPChQuPHz+uJ5q4s9CPpIv66GpeB+kBhF6y
ZInCLZVlvWzZskC+nTt3KmFX7CPUs0uhp0DiLnTT6tWrO3fuzEzEdkOq9OnT
B9yOuaTLEsNan9STsgAhcBBlVapUGTly5MmTJ+8/6LAUSBxb0n808gE/Ofci
ToHlU6ZMQSkjpTEAEfUI6t27d9+5c8eqWyY4dz0pig16g8cGkyR///33e/bs
GTp0KDhKGUtQQCiCvn37Ll++/OrVqwhMJROzO8SD+ty+0h4xnfzzzz/fu3dP
pS2Zs0xnVB7dqzMcXPeI8+DwHz265xF/lN5Rg+VEgW5atmzZkCFD0I81atRA
76MrARWobHAg6l712piD1atX55pWrVphfzVt2lSl0xQz26hRI05yRhEcHGBI
cmXbtm27d+8+aNAg7k8PKMVc48aN+YsSzTGpa9asCcbr1asX10yaNGn+/Plo
TMWboEnVEgEPmkHbYC2eDjhU6AH9DIYBXtJ4tYcbAm8Qa2hhhWNof1B+Rwpn
4IagAnR0PKgvdO9Y0FEUuo5nuaAtNYpAnYqgKX7WMh9qp/WlINlGqnLp8BWA
RwuBdlr6A/WpWi69ochooJoKqdAzQnQgN96d7m3tkfqZvqWjtC/MuLRr106h
N4oWUagIxCRlpBivatWqKbpHtfnoc7A0/ayUOIBzq/PiZqSx/Vll5pGTAKAR
NE7jFZcN2Na+sIJZ3CgYdbhV+lNgr7pOS8FAdFQA4zt37lw4Vm4SQn0cY78o
AzOvA8MICdPsnj17rly58siRI+AQLnuoW8VD5dJ9J/0U00pG7rBhw2BUmIpX
RqViswCHTp8+bfo09sGl+ySN+iTobt++DZAeOHAgU097ARgpTFgA8M2bN5N6
QsJkRvLxRkfAlsgBRArTEKEBmrK16EQyWGoGEAIzClGD3EAWIZcOHz7sggcr
l5DQ7f0jkk9qSR5qJRnYg9SVaz0HDCICwfZ5E6GU+7XkevW4Tj5MMUQiBu/w
4cMrVKiQIUOGl19+GWUNmsJ+ARDSP4+oBVx1IFZnhl6+fJnunT59+uDBg0FT
Y8aMmTFjBkhpzpw5KESOOYM05ln0OSBq1qxZgKgNGzYcO3bMDaYWySET5UXD
Fi9eDFwHm6FbwXioabnhISVy584NcAUPIDRAdw0aNAAngBzkYKaY00YeNfCI
A6BFU4+AGUxb9C9Kga9Ax/Lly3N/8Bt6XPuYqvnL/fmvgCUHXAM2U+oVOhAI
J09C1d6lP/nkDoonBV0AUbjnp59+Kt82bfDJLRApp2TRyj0ChBAgBHeF2+F1
V7EE0riP0lYD5lXUI5XnlcedlQ/w/fffF1ICjPFeOTzSgptW57Sqxk9ZsmSh
VxW0y2vSt/QAcph+Bmnzd461Rsc78lL8qh1S/sgxuBeAB8zjv3Qm4pFeZRQY
DsaODu/YsSOoD8jHScZCAFs1+BgvVdnjETSMDlTaalvro528C0pca30wgN5L
F9M8+i00otmNcwH4qbaydo0ZPhhJsFa78AqQ4TK3JIrF5wo808+8LI3hNWkw
bwFLw8lAOEwVmxdMipMnT8L/vDIslMsjOo13HzVq1Pr16+X1F3jYUvkjUqyz
ygeuW7NmTadOneg0egmoSTfS+cwjlCmWnW2c+YJYkzTqC3hS68yZM8gZxiVd
unSMI4NFJ3zzzTdIEi0GJnTzU+j/J0W1o5VQEMrVj0pivFAW0giJx+dKPHbp
0iU0F5JKni1ojf3795svh7wsAimoL+HIJw0CnpRD0u7atQtYonB+NDJ66uuv
vz506JBb3DxJk2+f2maNXOmYTZgngCj0LKof+AEIQTtPnDjx+PHjP/zww/8d
pHDS1acOYoN+egcPHpw5cybQSKgJnVi5cuVatWopWpOv4ApUs5JpIJZR91zc
u3fvqVOnbt26FTMK7K1wkvvB+sg0gyZhpDPd1q1bN2HCBP5leaeV0A8cxZ3R
p9oiBHvwrFKlSoFbinnE4zijbV/axrEu5jwSpkyZMroyZ86cCtpF8sjBTD6B
fOUpr3mk/WWBK0CaAgRUk0t+a9oJtfhQ0II2SYETuqfWH7TsJr8+W0fiWJW/
gBbx5BWxjCtav+KGNAzYCQQCDtEARSVwf9qJ0teaGEJVkFjBsLC9UtZoYY1e
5ViFM8qWLctJYWMVRNb6W+3atfmqjDfcBzhXpUoVbkUfgtOwfIWNOcnjwGlc
wB/btm0b6VEHj4AiNIBH0OF0O//VcPBcRgQAqfgIpcFhlOlG+k1pbZSfUPvO
6l6BN+XNhlTNzVdszgeeFQvz7LPPqr6eVlkZwdSpUyvZoxz8XJdLOYQoSpeH
wmx0Ra9evaKjoxctWrRx40akByz67bffWlDSd999d/ToUWYZZgKAWbv/9CH2
DngMVMYFLgiRvhA93qwXdOSezJSYmBg6nOe++eabsCsM0KNHjyVLlpw9e9a8
B83V1g0ASdKoj3dBhm/btg2+RSMjHGAh5nv//v03b96MGLHeToQv9cckeY8z
d4DlyGGMRyQYKmP58uXyQEgkHn2BoFa9evXqrFmzsFuxoGktM3rPnj0GGywf
RQrqSyhypZZWkhmUf/3rX8jbFStWMF4KD0Qgo9eWLVum4kcJ3eonQD5Z7QOB
9ACzDOiLRYy6R4VhDqMg6AQwFTLzwoUL6odHR31KEHHgwIF58+Z1796daYve
R5VbDmSApfASfc58ARJotUcxoY0aNQL7zZ49G9yo+gXmKXE/mIACIYC1joZF
2xYsWFA71Npz1PqYcgjzLIUVKM8eQM7czyxRsxam9FV/ATcq+RuQQ5lAVN1D
VdtUKo5PxXcoykD12vhUKIGiFVTj1SqFCXIo3pZfwQwc+9K2CKIYkHMX9EJX
q3zYL1WwhByoT++FlqdVug8/cUyfK7UgIwLSBqRxANBCG1b1CPhnwbbAMGVX
BqUzNJwEnnGsRCv8qmOGT8ltuFgrhIqhBl1wjTa+lasZUKcEiUqZyD2VKhmb
iwsUEqIDLSGqZInW4bWtrO6y9DJar1PgjCpx8NbK26yqHNou5xq59imji9Lo
aWgUMmPZWhREw7OUGxaeoccYfdc3UkkXFWXDc1FPXbt2hV23b9+OqYIZpSU7
AScY9fr168wFLgDxMgu0QAqfDxs2jL+oKoT5MzwRx+9YL37k3r17PHrLli3d
unXD7FIlFMYCJbV48WLl57wfzCrmzl9XbiRd1IfNiFEPuIVp5RmL2MF4WbBg
Ae+OwWsJan7xKKHfI4X+9x4cTDty5EjMRnlBA9qR82K8xIP6Yr3FjTt37tA2
7Ai0GPMLSYjG1AUWbpwC+RIJxTop6RR/PX369AYNGqD60fKMICY5ghGBjDQQ
dHeHL3m4/ko28i4IQBTE6dOn58yZExkZidZG5aVNm/bTTz/t3Lnz0qVL0WWW
cUIRFm5oTDipy20BZkc8WrRoUbt27cAG3BnsoaWV9957jxk9efJkujomJoaD
jh07AkKyeQRgoDHr16+/deuWhiD2wYAUC++NiooCqAAglaPYirUpPPbFF19E
2oOCBPl4qCqvKepTMb9/9UixtBy8+uqrKrcBOETs0Gb+wlfQoAUjcB4DgTPc
U7uKIASVZ6Xx9CG/IgdUsUtbhIJetEcbgpgYIMZwSZV9uUFCq7CFRpKmCgbz
yklPqfaEOZUKRue1xqjixQpVRiGq6Il2qBV0rGNFHyvAWStsKn8sF0QtrOka
SDmlVT5PpfQUB22FiRkIeWCqGK5KpcBm2i9m3tGNH3oEetTqK59aE9bSJU9U
Nj97Zb4CzBhcsCtTuEuXLjBt8+bN5UhJP9NaGqOLlQEbooVCzpyhzdog5sXp
JdrJKAOTaAwjxd/d2s3qYS29chN6iQdhMcHkwAzsIyvsKBZVzhA4WYXa4ahq
1aoNGjRo8+bNTCt4m7+4W6u/hTQlmaqaKRcvXgThgPHgRpUAprd79OhBe3h0
csI59LOhuEDQr1gCDaTNIMKHfGLRTJw4kW5hpHy6OHmI9KRFUhOuKtEoXL16
tW/fvghYUB8SYODAgXv27NFP0sJPar78xsbTDNV4HTFiBBYu84s5vmrVKpuA
gTBpbFMoQchnVl+6dGnTpk1DhgyBx9KkSYNu4mDo0KEnTpywHMIuJY+dXyNx
5g8//HDgwAHQV7169dC/yrOBdlbFosuXL4MM7Xr3IJ7VPzSLCr3Rk+PHj0cp
M5e1g4nmLVas2OjRo/fv348OOnXq1NatW6Ojoxs2bAhwQvMCiriAKc+0Aj0q
27kJZz0aUX/27Fm02FdffVWjRg3gBIgLAMB/lU0FnQ4aATAoPFOudOA0tDz4
AZhna2tWkEJ5bMAAgI2CBQsCG1T+GwxQqFAh7qAgU0xRxQhzrB1J/aowYTAD
T1HNX0CCvP2FSMEYijIGw2iJUiEVVgIjHAhMFRJp68OBdqVWsQQ140wDqKpq
tIR+5kD5CTkA+2kjjIaBZ7jMighb4INyHtLDCshVlTrBaSW7031gHr5mypTp
3Xff5UoEONOKyxiF8uXLM1h16tQB/yiWWV2q2NvPPeKgdu3acq0EzikkBMXN
nYHl1ksqbstJ7g8+5J7aNW7ZsmXdunXl+8drCuOl8hLrGcK3KsxcoDcC9XEB
d6PZ4EwGnfOqnCKkpz13QCBdxASBmWkYPLxu3TpYFGkvkaJA3QsXLuzatQvg
0a9fP96U9sMzVatWHTly5Jo1a7SVYBDxMUg5kawKgI+YGkzn/v37w5CqfUyv
tmnTZt68ecw1299MJCsnT5boVV6QQUF2wVQybdDLvXr1AmzfuXNHNZtinbiA
FNX89CkU9WkT5+jRo+3bt1eAFYICxcEZV9ckhgU07TrBZocOHZo6dWpERASo
j7k2ZcoUJr6JAvOUSNjWppDxj6E+hIBWjTp37vzxxx8zfCgRIMratWuRzFbW
LTboE5g8UF+sk5tLZ0BogCity2XPnh1RiWpDW3Xt2lVeQEqNbsvs8luIB/XZ
s3788ccNGzb06dMHOCSHKDAAqpk+l0cT0wS7ad++fWPGjEE+A9Wee+45dC5a
Eq26bds2hRmG+igyOtevXwc6rlixYvr06RMmTBg7dmzr1q2BDQASFDqjCQyr
WbNmo0aNtIlcqVIldAFqHf2uSqkuggIhyD//Y4/oBwvNANR95pHQnYrEKaML
bVZ8hPYolVgmzvpoKtamWF1AYJwYL07yxeq6bY5nzzeUeCh4jHZqiRJYBVii
W7RLCzDjlRU6wSzQKhloh57k7apUqVK/fn2QucIxgFi9e/cePHgwJhKDS7fz
6xceaae+VatWbTyCo/gVPMb1UVFRw4YNGzRoEHzVokULBkXV8bheLoIAti+/
/BLJ36xZM8Q+ElVZbtACDA2gy/Ing8TAaVpXBNjIpVMhw4qv0dqjZd4TApf7
pVZTAZBK8MgdQOCckYOo1ja1k6tB5CdupXSFPKJy5crdu3efNGkSvAeEc92A
4eTDhw8vXLiwW7dudAWsWKZMmYoVK3bp0gUQCJNfvXrVlq/1l8fQYuaDF6pT
mFNAuwULFtCrqphcoUIFul3hGxa4mjz0kRvvrFU+IPe5c+dA1yVLloRhAO1Y
K02bNl25cuXNmzctQZ+WaxIcP/xhKRT1yd1o9erVCAQ5GqGREezML/ePiSGm
Q4oPXlJCaQQj1i7278CBA3fu3Hnjxg3bIkzYdqaQyJeKRMeMzqVLl+bPn9+k
SRP0BbK9UKFCo0aNQnjevn1bQywRkRgMjSdCBmLdooGgr1u3bgH86IdcuXIB
TlB/QJqOHTuiMuBwtJutUVicRZzkOrLyL2wirLZy5copyRt6EzWkqBmLFkFc
gwPR/uA90BeKOE+ePAADppXqGwac6EJ7NA9CXPzkEe1nvJAb/fv3B3gwlGC2
woULI0aAEPIoQxWiiwE2POX555/X8pcW06T0mb8KdFWBD5Xw4Nj8A0GMQCMu
0FYvT+FkpkyZOMN5TmqVD0CiLB+KBdC2oO20Ki9KKmelMZWzk6uVJQUa6D5u
Cd040w7HCfxCMSFghvYLigBdAGa9PKLbwdjFPRJyo/Nfe+01bcenT5+eM+CW
AQMGDBkyZMSIEePGjZs8eXJMTAzKdM2aNYAcxhehB8Zr27YtiI7xZQapIhs/
ffPNNxMnTgSW88lXlHLfvn3BgarpBiaEx4CRgElGikHnDOPFIMq9kI5VPkbV
SQGMmUukHPaUkcZNc61e8qUrDN0Zt8zVdka30t1s4Bgv2AD8iT2IMuIVdu3a
pUxEijnCJgJuoaG2bt2KAQImLFu2LLxRtGhROpl+UMkz/gK7xgYTKYuNf8sO
o8kxbkVLVH1j2rRpDBajzFijkr7++uvdu3cr+XPAsdd+sxRJeLofrMGhJDkI
gePHjy9dulRiRCkZsdFgxYsXL7ohM4lk1egPS6GoD13A2GFJMcsQU9jX0dHR
GFBKqeEuzCY46wrU0RLm1LJly9Avr7zySpYsWQRT4TS3IGCCtzaF3JU6d9Yj
Lk6cOIFuQhW+/fbb6P369evPmDGDEXR9YJKfoHDRrzTR0aNHmXroXFQGsy9d
unQFCxZs37496OvMmTOoFZeZw6E+c5uE7t27B36eNWtWtWrVAFpgCeb1mDFj
6HAV1NbTmd3bt29H42fIkAGogyrnAL1PY65du2YtjHW2ZmKDIR6uTDh48CCA
BPjx6aefKn8vCDZ3kLDIOAMwoyXKxOvDAIAcVYtQiQfF53KsAF6R67EmHzlF
7KrqB0gp1CUvHLkgxNz/gIU8lAdhgAC8tVNsuMW2bh8a5WHVNywKmFtxTxCU
PBXBsUhXgH3evHmzZcumOnSqgMYw0RXakacxYNpixYqV8Uirecg6IBAgDVTT
uHFjQGPp0qW18Q3UUYqb6h5Z7ePKHinat1KlShU94qsighVTrJrI+gngBOSj
VcoKqEAPmgrYps9V6VidHLoWGk/gc/w9Zrn43CTP9AAd1bt375kzZyLY9+7d
q5qbsUE/c/AeNguwNjIysm7dunrxhg0b9uvXj4mDgWPZJwIhTiaPN20DD67V
Aztp0r59+9CVNWvWVEQMZg6Ak4bxdCVp0dZwslmFMNNPEBqjb8mSJShfpryq
5MAtmCFr165VhRSzVfX3xAAh/pjkQ333vWqhW7ZswRhkyJCl2CwM5fXr17XI
YJZRYjBYDEXcuHFj8+bN6Kw333wTzNC0aVPkg8pn22UpXqMJTq64046ApSwA
gYA6unbtCtehGUEIGIxY7oys/eU3GuaJh3xbpe5uEbNv165d6I46deqgXpWb
lz4BRy1YsODs2bNm6QQerQ4mRhwAb9q0aaAFUAc2OAodLMettE6iFH/nzp1D
P6LxX3/9dfDYX//6V4aACTVnzhxQn4tOfbM+NpingrtxK6Apennw4MHcCuGv
8A1FMSj7B3e2Umja8vtLkBTfoUwgCvfQeUUoQCoQxgVKuqIAUr5yK65RkTXd
VndWPTWF7upfCv/kGiskpzhT8BXnuSFNxXJMnz69cj4DdcBgbmXYcJAy3G6v
SyBGHqqUMkKtCsRQJLLeUQnr1CpFzip/oFLQ0Hsqkab4Zf5L9yrNnXpDfehG
c4iU/cYq5QHkMmXKxABZYQ7AJ4ixoEdKG8gn13AxD0KogrvAiuBJrgcK8qDQ
Fzf3xfjrIIdbHXWXEDmmBxTjA+YE3y5fvhwuBVr88MMPgCgkhhKzIOdXrlz5
1VdfAVnl4QmHg/c4efjwYVU5dLHWb19o8sE2vgI7d+7cOWDAANqAsZM2bVqm
G2bskSNHLFLY516eDESZ+zqMyJ49e3r16gWfwGwwIUzSsmVLmauBYE5CNxxA
NmOCo4g/IPlQH4Ny5coVRgrghIGJiChfvjwgEN1xP5hZKJBoPKys3sH3339/
/PhxZnqWLFlgNqxU9A6WlxUEDCS7QIAkSrY/aOxku5yXLl1SPC+MB3pHJWHd
AyGsTFLgwXSmSZcM69rSnBvXfPPmzb17906ZMqVx48Z0BYgFzf7xxx83b958
7ty558+fZzKaU3T8qC/graOi+yZMmFCuXDk0OBimdu3aM2bMQBvSq3fv3kVp
8jh6HmBpO8sffvghEhusyE8299X4ONWlrXugYcGTGzduHD9+fPfu3evVq6eS
ajlz5kR3Ax6YodmyZcuePbvihcGWwAxQR0mPSpQooUWt0kHSAhczWhXZRGAP
zvArNimfRT0qXrw4xxEREYgsLuZfCla1FHm8uCq+GXE9SkrZkvlUNKsKfKC1
tWrENbScIVDuPkMpVr03NJg3HOpTERa6QhHHyj7Np0Ul67yiMBSyoWTIPF1L
f9q2Dnd/N9zYt4gKfBJQFJ5UDVzLrqMQV5qR2SO1QYE5wskvv/yywp8hLuOr
weB43v2ZMBSu/SJeUBXxaAljwfB16NBh9uzZQD5z9IWrAVrADFTV0KFDIyMj
a9Wqpf1x+Bbhv3r16uvXr2vn0Y2ecL0jdPwY8sRd7ub+itjt2bMnraWXMBlg
qv79+zN3lHnJsI2LcKxUXNIl64d79+4xFkOGDGEIGDhEFnzLNESAIF5UfM2E
kg/1JVTj/8gUivoQ2mPGjEGuwr1ICeQkAyoWdRfJEwOIMuSA3cccHzduHCI0
Q4YMyNV27dpt2LBBtRTdfd4USliSveDa3ZyRMAddbN26FYmN6HjdIyz3vn37
chIgZP5vyc82NCSsZDXMNaQoBvKcOXNq1KihonV///vf4e2OHTuuW7cOwCZ3
i3CoT7d1Ud+kSZOqVKkC6gNdAGZAfWBslalav359VFQUiIj7KyUvGp9ZD1A8
evQoKM69W8CZR6GellZx7/bt27Sf565Zs4ZZ2adPH+Yjz+V1+FS2YQURtG7d
GnWJ4kbmjB07dvTo0SNGjOBg1KhRI0eO5JMz/MRNaM/kIHHMSa782qOBAwcO
GDCAtxg+fLiu5FfOcwFnwJ8xMTFLly4FM0+cOFGP4DwPRTWDKACEYAZLklzH
o2bNmnXq1InmcVy4cGH6xF3xU3Y+S0D30N1MbfVqe513V15lHtG2bVs6gc7n
6SqNUbVqVXCO0KwQr9Jn6enulrSLoJ4JyYGs3VKdB7bBPwhGkKSCLIBzipRR
TT0+BS+ZdK+++qq7C697ar1RC4bWD1qRExDVmqRh4Ge84nShIDBc56i1CvGA
CWkY4J+eGTRo0KxZs7Zv3w6yUplCrfLBvTt27GAQ4SWuRGLQUdWqVdMSH0jj
xo0byBM3UFd4wxdE4M6XRyehOG7FIwCfMDns/dFHH9F1qr7RuXNnmiFz1b2/
jNxYp0pRkib1HiNy4sQJJh1CA8zw17/+FbMRPmf6bNu27WePAg5EdCVJMuiE
pEg+1McoMIJIUQQdEgDzsHLlygcOHPC5xiWSvTYL1oDu3LkzZcoUmA3JhkBD
CKA0mftqZzIwrJI3MZSy35csWdK4ceNMmTIhPRhK1B9aGzEuz+1AcOPS+DZZ
ig4ltz948CAYuGzZskhRgB/aEO3G3JRe0zKCUJZvMt4PhmXJ0Z2LMbqx41D9
b7/9NjBm/vz56E0ewSegGmjNxAGTAGMUdgfwYDbxR/PmVfL2+Jvt4kAuli0G
/EMt8kRuiGoAyKGa0Qht2rRp2bJljx49ODN9+vTZs2fzCToFmEVHR0/wCAgH
9hs2bBgIjU+wHL/qPoA6kB63+uqrryIjI3sHia+8DkhSB1wAcgBGTp06FbgI
3tMZ8B7X8EeYDQBWsWJFECmwQcdffPEFn7a0iEKHFVWazSCNQkIMsYQiHN8u
J590LHK1Zs2aQDtua2mTeRxnaICqaTDKVmeN6/Ply8d0YOyUgsaSJBu6c3Gg
DhQwq03wv/zlLwA2AAmAP3fu3Cp6wutgGoP3gPp58+bNnz9/jhw5OK9MgG+8
8YYK1akmmvCkIi+Ai+gFflLSRVWa471AjJgnSkdMU5WZR3G+kLstblgxFAEC
MmF13rdevXpYCgw0eO/q1at3PML0w0g5dOjQ2rVr+YmpAVpWd9GZ8BIcwk9c
cz8MhePbeKwnl+djg7lG73uxG99+++2pU6ewJrp168ZIgfd4d8are/fuixYt
4ifJq+ThimyxGLZAJwSrQH4muFyCxWzZs2dnWi1YsEAuwbFPos5dCj1Z8i2/
HDlypGvXrlmzZlXSVIZvz549CdvCcGR8CDEHgXnIT2WGRFCjL0CwKmkqz4qE
bm8KxU1mdwBRDh8+jIovUqSIFiVQT02bNl28eLGGMhDXTr1vjSvpki8jxA8/
/IDWAwKh1DBk0IkKrW3evDkYSfXl3ZW3/ydIlrss4HUXenDu3LnVq1dHK9Gf
oIsZM2YAxuhtupRf0aG1atXKmDEjelwVE4AZoLJly5adPHnS1vn1oHj6OTbo
J2+7aQquRF+D58+ePYtsWb16NdCLVxDyadiwIVpSoA5Fz0NBQWhz1e2lVeXL
l1epCFQJ+ETRCto1BqhoV1RFPbJ6pBR2IBylF+aMNjEBNvpL5syZdR78o3IS
6TxSNjzQC5gHYMOnkukpn97zzz/vuvZpaSsc6hPkc4GZHbz00ks8RXEi3J9j
PpWrWc8COCliBdJXq4AmsOc+0Q15sJNalzPwxt8BqNyTd7cCxHQmvQHko2ML
FSpUsmRJupRu4XqVPuHpyv4HyynuhjvTHq7nJvxR9VPoxgIFCgBWFS2iFH/0
Nn90syv7ViB9YE9LfHAdDRZqAkrJJQ9EcffuXfEwnAN6B2I1atSIZ2HX81C4
Bag/a9asTZs2AQiBGcInTwr1BTx4o51im2vKCrh//37mJm2Ai5QjEXbFKLNC
b5Y37DeKhcRAZvS5Kz/0CVN79+7dGG6wEJyj3XkkDOYbEsZ25FP89xIDuUNg
CyayZbD9kbda6ENgMqfOnz+fcC19OAkzoCJXrlyJEkEiwXioMNUXQA6YO2IK
JU5y/V4w6hGbrVq1Yhy1qYSiwQxZtWrVjRs3wi0y33fijJI0xQZj4vSV3gAp
DRgwAH3KlHzuuefQp2jGfv36rVu37tSpU1qLCzwY4HzfCWKSxoyJialZs6ZQ
H/Bv6tSpwDmtRfz000/IbR5RqlQpMI/S6v77v/87yr1Tp05LlixBwflaGE/7
7zvpaOyMja+SLGGddezYsVq1amXLlsVM4wCYR/PKlSsHNlMOFi1DcaCEIbw4
wODZZ59FsyieF8ZQCQwtJQHJngnmhdNWo5UIsVARuagpJQt/1HITt1Ukhday
4gxDiDNwI1X4wAR3LY7H8WhLbqzCZEKMqkqmWh5Kpajoactb4taM8xGXYZUr
MMQKDeu53ATMplSrGTJkgGE4zxnAXsGCBVVuA6NYx1atg08uUOlb7i9OA+YB
GpWqhTunT58ejKcCfwwTlggDBAgHhiF4tVFesWJF7gliFBy1xUmtFqonDTDr
TekclXEBOcByy5cvB+wJd927d09VZubNm9ejR4+6detGRESoyjMNbtmyZVRU
FOJCezq27P+kUJ87oe4H3dJQNJcuXWLKYCs1adIEFQl/0nVAX6AO2vP27duy
vJITzjGJ5DrngH6PHTvGWzN/sZsYaKYnjAFmoH8s3ZbvjymUUOT6R8U6rvWM
I5OudOnSCBOmPPbUmDFjfJn6EhtpSqK8du7ciZ2oZSL0F6w4efJkbEa3ZEwK
JVqK9ZxFf/7553Pnzs2cObN169aoLal4xhTxvmvXLgvHc4V8IHltIvy3V3lN
r6kkfgC84cOHg9ZQsqlTp1aBJ1QeWA6FqKQQ7g6s6ziEuQ3QmjFjRuXKldGt
gIE6deqAu1T/nQt4BAb72rVrkdXoazpc/mNvvvkmKn7IkCEXL150m/dQXeYu
9wW86cmD9Dp88jrbtm0bP358t27dqlatWqJEidy5c2vh6K233nrttdcUlKpo
U6Cdlh8Nd3Gg+FyDedoZVELgVEFnM0AU98ngkVbwtJKmBICcVMk28AaXqbYF
2EloJBTduRTnjmroNTqgJehBhgwL2lL/uaCRlvOO2lqlPb7SwOHWD3l3rd2p
UgkojmGV/6cwLXfLkiUL3MJ7KfICec4x4ESpDsEqAD/+rmQsWrsDqgFQ1Xil
ULZSGgJsjMUbb7yh3mN06HNxVA6PuDkPxdymn/kpHF4Nxa6MCBqnXbt2iOtN
mzZhpyv5G3JAm7mdO3fGKADmwS0ctG3bdtCgQYCNZcuWgbLOnz+vHOZisPvh
81iG49hw1/uyxAe8YCVwzvz585ks4E+V/wM/MxknTJgA1EFXmt9RckpEbKv3
5ivFAf2zceNGhoOh194u5gAGO3IJrB7wsGKKb1XiIctR6a5jS/6jIGBjpjPC
pEWLFnPnzk3MqC826NyFlDh58mR0dHS1atVU8wiTsH///ogFrLPklCUpGZOA
HDIc0bpw4cLy5cujqtDF6CyOx40bB4a3PKtCF66QT+jm/1Zy1xZs8VOVpvfv
349ObNKkSc6cOV966SUltwEYM1sBdXC4HNe17eKiPib18ePHp06dWrFiRSb1
u+++26BBA9TWhQsXZL9rm/jGjRtLly4FGaLQEeBoZKn4yMhIptWveovQfYSA
s6HA45AnKHeAPYpeyc1oFVDW/MFUKE3eX4+S+Q3kQJ8A2yznHmfSp0+PBKOX
gDd8Km0gCAcoyxMxKOgNHif3e2VFVpCsD3e5EROWfy9+MGN/EesKymrFTymI
LS6Dk1opAkopYDZ0XVGrl1rHE6FemRfINwwBIWfaD5ATSFbQt5IlKnOOgnbp
Yf71bpCAZ0A1/sUxLVQRPT3FRae2d6z2aHFSb6EzCi6W/57W7rRcGeroqDvr
Yt5UASYff/wxEnvo0KGrV6+GUa9fv44kB1xxjARAgDdt2hRkC9vTVN60Y8eO
s2fPPnHiBHwu4CEGdoXAk0J9sqSkGSFadeDAgXnz5nXt2rVkyZJyAMD+Yo4w
dzCjmIa+WKdklmLURXH37t0Db2O+gcZhHnhbqVoWLFiAbLECKFqTSVG+iYFs
mhhPMprffvstXD1s2DCmGFOyePHiTMbt27dbGdDERraqoImJ5lq+fDmqhPmI
AETIMx8xRrTWlxiCjlMoTvLVeA0EdzY7deqEakPHoUoyZcrUqFEjRMrt27dj
H3Sxjn/7JglRuByYzE06RIsMsDcGNRyOEgfPgANnzZp19OhRJu/9BwveWQyv
UF+lSpUwhVDxderUQW+ipFxRzKN37dpVt25dbqtN3meffZandOnSBVT5iKD6
frwR1vYTM/HSpUt79uxZsmQJDYuKimrTpg2AM3v27Dw6FPMI/oWCkGeC5Tb4
l+ILDDJxJl26dOAEFe8AWtBp4D3wA2q6UKFCAC3wGP9VdXjgh9gsXJxpnPRQ
1Gd5p5977jmwkJIHaldab8SxUjdb9ITVDQlHKodBs1WrDjQrdMdNgFLcWR0i
X0E+uT8P4idGHyQs70euVy1glT9TqTXrWBd52rasfU0VzGUtjO0m2fM1VWDV
BY1cTEtgwoIFC9auXbtz586om5iYGIwapPetW7cADBzDGIMHD27cuPEXX3yh
vD2A2xYtWsAqSAAkg6oEGtfFyWaPTg9FiSDMq1evYqrQAOwUGi8jAlO0T58+
Ctf1CaVf24bETNYbboIpxAKSB5nMRIMZMF4YpujoaEZH5X4sSUuK8k0kpOFw
UZ+CcTZv3tyvXz/trFWpUoVhPXXqVKIdMmNCLRAB/JAYiIv3338fkQ5OaNiw
4bJlyxQ5nsxmYnIijaObygmsgphFHfTs2TNv3ryMJuqJg+7du+/cuROj2zZf
AsmxZkfAic4QFESQ/vjjjxcvXkQhov4ALWjzV199FdXz5ZdfjhkzhpmrZCyB
IIrWej4m26FDhyZOnIiG0upKtWrV5Ndn4R4oNeb+0qVLQYb0s/ZPQQWAJey+
y5cvS4Y/dAaFQ308yAJV7Mxdj9D1586d27t379y5c9u3bw+M4b1oQDxZ6UIJ
gKrMxhbXwB1U2UT7uSrZJn+2PHnycADw+K//+i8tPcn9T3EQD6244aKveJpk
fxRIC926tUU8LY5pF9Wu4dhW1XwP1WXaG+UV+OT1tTrq3lkgU6uLz3hFzYB2
4EBeHJSoFV1+UkZrOTSGLmM+82ANNXu6Ok3lOQwHhtv41hKf3khR5LBi165d
md07duzAloFvb3gEkFi/fj3IoUOHDhEREapWXK5cub59+86YMQOrBFMFZKj8
zCr3YBUfjNkew783HOrTLi3z7syZM4sXLwajYi/AVJJFzZo1Gz9+/NatW1UL
WGvsyaz6hsjmvm1bI4gWLVpUv359ppJ8GIoXL96/f3+AMQOk9O9yU7E7JOgb
pND/Rz7H74CnZ7GzGMrIyEgFJaFcNm7ciDpIzKjP1jcQAhyjQSZMmJA/f34M
ZyQbEmPy5MmW7S2FEjO5UQywHOY8GgGGBLqjqhhQQA76QtFhyBZXpCQzSB8b
9FuIdRwwhABRjhgyHTt2LFOmDBz+5ptv5syZEyA3YMAAzmOjAfMstQJ/uX37
toLsihUrBjTi+sqVK0+ZMkUV2ZDMXMDEZ6ZjLhUsWBAZLqCibOf0NhcE4gri
e2jjrf02rDxOG/T6aiiR8+fPn1+4cCHqnoei7jNnzgzsBM/4sIS7zWroQg32
wS2FUUAqzKGUI2nTpkVrA364ObjFRVnxbN2GbnQ+lFwU5JJyqoC4VASEZgDb
FJZiyJBjzgNWGSzYXpEgekcBSEW88keV5DAXR9tC9YWB2M4yXcEkoge4bWjo
cbiEKqmC5XFTBUeBJ8orMlVcYbl2HwXgYLKhTZjC4G14r23btsOHD1+3bh1g
CckMkAPzY8sA9uBhGKBp06aNGzeuVatWlSpVWrduDesiBBSxHi4uL/a3ldsI
h/oQQTRy+/btGE20CrWSPn163iVHjhwAHqYGLbdYJ9vTdNn78bJAJzZyIzKY
qkgY4HpUVBQmpzIt0CEMHGYjkgSDzsbIuiL5ieikSC5n6gBrhQnIFGvQoIES
OmFhoUTkK55wLX0kMvgHGFi1ahUSg/Yjl7Jnz44kAQoGwk/tFG5MtKTdyTFj
xlStWvX999/XZlyjRo2mT58OSHA3DiyfZLIcX72F1jcgdOWGDRuYqhUqVKBD
XnrpJRBCoUKFUEzz58+/c+eOVtWU7Rk5zIzo1KnTZ599xoxQiNbo0aNPnjwp
p4hDhw4BF3v27FmiRAmQHmo6lbdD+sEHHyAKpk6devXqVTXjiWvVQFBfC+Qj
f9avXz9r1iwUClq1QIECwB6lDTFXMXfD0QIcnvECVy0sV7hIq2c6z1c+VfJM
Fdm0mavVNp/nXpxQzXX5cxfc7Bp3V9c96fuaylsoA+8pngIBxQiCxACBikZJ
5XnKcV7pmhlZi/9VVLIgX+rUqeWex620yBknWvPBNnqD19cWsxXSdbGfL5me
b/1Ta4Zun/heWSOlO3CgXWZeEIujXr16PXr0YHCxQY4cOXLJI1DTggULhgwZ
AqfJu7Jw4cIVK1Zs1qwZPDBv3rwtW7ao6q6W9925/HjcGPtgIWlXD8oGUaZx
QZeLFy+uWbOGZjNleAvgK69DI2HOCRMmMINUJcdy2SV1ij/8RCEzoNytW7cC
gwHw//znP5Xxu3Tp0pMnTxbkS7RrRCkU8GwT2x6VTtm8eTPCH/Xx3nvvMfuw
/eXynfj1phl6t2/fRnEADNBZMGTGjBnbt2+PYQJ+0GJFskQFyZXgPdmVsCIa
EOWInPnkk09at269fPlyEAu4ReI6eaM+I0NKaExma69evUqWLAkAkOzNmTMn
PaMMzMrhTP+gm2JiYjgP6qP3QBFFixbt3r37kiVLdu7ciVKbOXNmZGTkF198
IQ+xtGnTvvbaaxxXr1596NChzCYVVHLV5WM0Oxy5m8K//PKLbfOhVrp164Z6
ReEikXLnzk3LFQyrgAWtlQEL06dPT5sVrqulPGZ95syZQUSZMmVScTElELZk
wpDWKMAwtjCoYrXwmG7IzXkcf9Fz33jjDZ009z9legmFi8KE7sqkrYbpGjlB
qZHAbB5HY/7zP/9TVXe5BhSH0fr555+De2mAwiWEuHhxVS4GUGn/2tLaWPZm
QTWVFVZU7zNeZhv+C27hWfyFTxiGm6hEMsd6UxqjvpJDoCJQaBV3Uxll+oGf
9CL2mmq2+oQH0UU0DEwbERGBAd62bVtMbwu5BfUdO3YM7oUtx44dCw+rbB/c
y9QuX748vDpy5MjVq1dj2cljQYEbbn6nx8vUFPtgWiQ7/u8H68NigDBrAJxT
pkzp0qULA6EQaTo8X7588CQIh7dQ+tDkRL7MHiY8NfF5X6TKiRMnGMrmzZtj
hjPQsApQoXfv3owsyDyZydvkR66zZcDz62OiMQHBSzA52iQ6OhojK6Gb+RAy
thRnoqEACR07dkRgIqOQ0tWqVcPAPHv2rNI1J29UkMxIMhlhAgzo0KEDWhI1
9OKLLzK4ffv23b59+/Xr17FAzcBMruN7P1g21HCXyvWieqKiogTnFBSJ3mzR
osXChQsRzsxoum7//v0zZsxgRlSoUIGpnS1bNnqPSUF/9ujRAw2rAgeffvpp
wYIF0bl8bdy4cb9+/Zg1TCUApPrWDSv+te1/9HHRSsudO3dOnTrF2zHuQIUF
CxaMGTOmXbt2lSpVopG8BSCwWLFiVapUadCgAQqIn4AWrTzCygMu8mp88o68
OCfr1KnD6wNCKlasWLVqVY6VlBgAI+SG/kKtf/zxx2XLlqUHQLygTWQg1/OV
buFZNWrU4FdgpJwABbQM7bi7nPFvBPNEoVboPz1SbVzDh3xqL14ZGrU/q/9q
91ZF1rgGJCb/OuEuS4LHSYCcUhnwFOVt5m68MqOvFCgQnUlPArcYffpW1egq
V64MzAbe0M+0Qa6DKPesWbPCXVgH8BtzMPRNtQdNq7RKPGzYsLlz565du5Zx
PHDgwNGjR48cObJp06Y5c+YAAlE0KrgMK9Kx2OmdOnUaP348Nsu2bdsAXbLp
fPu2bvK9x5vX7r/cOjJ2BjUBKAXXtWnThnFXcDfEAQhWFX6tZo3L28lgJ1cU
69TqchN98Mq8OLKlYcOGzAKZFXRLnz59GLK7d+8mjwXPZEyxTm4Hfaq2BTMa
DscCRTYyZ2XOJObRtGmrA8w0xMvQoUMR7Ih0zFhkC/IHyWOWSPJDBcmVFG4A
9kPaKB4B5kTaYHSjjseOHbtv3z741o16SJbjaykKteIRCJa9uH379qpVqyIj
I2HyjBkzpk6dmp5BiQN1pk+fvmfPHiAfwImJPHz48M6dOwvPoGfRuYClli1b
op2reoTS5xibfdy4caDEdevWofuU8ijw4ELfY0iD+MclNrjJa7lthf1++eUX
9L6qr2qvbciQIYKpTZo06d69e//+/b/yCOiL6gHm6STz/euvv0YIcB41Dcbg
3Zs2bcoLAmhBxcAb0EvevHnfeOMNlZoF2KRJkwYghGanZ9Br1T3iShVNA5Zw
B34FJoGgFH6rsBefQ6BtpILlQF+gJjA55qdW2JSEkJNAdASU0hICAn1RG6A4
nqKoZGG8Z599VommfQuMoW51Cpp46623YAlgG/BPVV20/la8eHGVn+NdOAb4
gQNLly7NOwKegTp0EV9BhlzMHVRhjf9++OGHCFVgIWAYPGm7uto9Vxg17Jc/
f/5mzZrBfsxNRu3atWtXrlwBxe3cuXPp0qWgd8ZIkI/+p8Pr1q0LA4P3wIfy
11UEqDGPuyH72GAvHFu6X3kuTcXS+eabb+gNXp/x0jKvYjeio6OVhNkSwFrs
hmKvnlTDEpZCQbWs7wsXLixevLhr1665cuWCsWHFDBkyMKdWrlxp1bqTgbBN
xmR4TwTHMuNGjBih9OzZsmVD9DGa2kFLzIkWzcK6H6w9eunSJewRxBc8+cIL
LyDWMPzRYpgqyRUVJHti7MDtqPJSpUqhhtCGDC5qa9asWWgWG/rkOr6xId5H
sd5eFa+MKAbXoTTbt2+Pss6aNSvoBZ6nc1Cv4J9JkyYxHZYvX75kyZL58+eD
AGfPns3nggULFi1axCfHUzzi1y1bthw6dOjEiROXL1928zX51lseo/1xkqVb
vO8U8A08qDt0Ej176tQpkMOyZctoMJ+ABA7AdW3btgXCAWA++eQTAEyRIkWA
JfAJiILjoh5hzH788cfgYTBbvnz5OMiUKRMWxN/+9jdACwAGTAVowdrNkSOH
3O3oSWV94WK+IhKBPRzTvXLnUxoWN9mLoKBlxuNfAlQ1a9YEPQJvGBSAk9oD
rCrpEV+zZMkCV1u9WhAgIA0ExbNgdS3TKQyZ29JOn6+dz6kPdQzI1O522rRp
wZZCZcocmD59ev2kyh1KOge6Q5WrA+kopa1WBkWeruQzID3lANSmsznyKYcM
HUWfgxjlj6fgXAxwYBI8hinRs2dPgBPgGc3SqVOnXr16Acs5Dz5csWLFgQMH
YLk7d+4w0OKN0CW+3z6RzRvEdWDTVMLEQJKAapg1jBHD/apHefLkwcoYOHAg
LKdGWvaA+yFlaJIBxQmtGRTQOHIGw4o5BUfBTnACJgAjyMR04UQykLfJlSy3
g0zsu3fvbtq0qWPHjkx2WB2J1K9fv23btskdLjFbMeZ2aDMauwPNNWrUKMQ7
CBZphpGOIEpZ60vShEbYvn07ugOtpEIMKC84FlmkMLpk7LfpewX31eB5TDO5
+cHz9erVQ3czi5XMrWzZspg/EydORPmePn2ajgI//+ARoO47jzjDp35SygVf
6gl3Zzm0MY/Y/ocOjatuXARow6rm/fjjjzQeNcTXvXv3jhw5smHDhoAxFaEA
Edkampb65Qin+AXhNBVok7uaLdPJ800blPyLv3CB4n+1lsUnJ/lqMRe+Jb5n
nAK47777rlbVqlWr1rp1ay0/DhkyhIOuXbsCexo0aNCkSROGBsjaokWLQoUK
qQiybqVMieAoFcblhoxm3rx5wYpIM34S2nRRny9DYOrUqeXoyN95nf/lkHJE
K6mL2y1anFRhOOX9U9iv1vT0dpBq29FU3pRP+hxwC+oGzvXp0wfbYfXq1cxT
uHHlypUzZswYPHgwPUA/FCtWjPZXqVKlQ4cOjBqgHYMFLMG8Rsv4Yl3d8jRx
Aon7j5X4V5zscpc8h2/fvg10wQhiRMD2cBHmAN0OIAegojuAr1zmRqcGfpun
a6Kl0Jf6b68I3a5du0aMGCGjWzHmHE+bNk15tCxaORkI22RM4l7tizG/4Hkm
LHMTY/Ctt97CMp01a5ZcgxIz5As4CSXuB8t9yiecKVymTBmEP0IS8Tt8+HCr
7Zj8UEEyJpPtKHpGEIu7VatWAD9tk6Eusc3XrVsnr5LkOr5uFRJXbakeBwQW
unz5MpIZOdy7d28mshIRZ82aFdunZs2a8L/iMlR7V3TfqZBrt5XppDDGwBNa
ZnlEyKfnas3W9hd8YMBazovwysuXL4+KiqpduzaTPX/+/MA/XlmFJzJ5pMoU
Ps+6ODPLKcufIjjAfr7SaQ/N3SfvPiUqEejKli1bnjx5ED41atQAjTMKYB4A
EupSZWRpc7ly5fhqa322R6yFx7Rp0/7No9dff50b8lKc4f6+vIK+lnAflehV
0TReKs6W62S4DDNx9g8wjwbAV0Ajehsei4iIAHUDZQcNGhQdHT1hwoSxY8fC
bMK3ADzB2saNGwML27dvD/qdOXPmnj17bt686XIIA6rUW/Y1HpazWfBbuDHg
benCQjRm4cKFtBkoruxzDGL69OkV9BQTEwPkQ7xYOYBA0CrRfSwSJBnImUAI
6lOa0GPHjtE/MDA8CeSDr7BBGE3l1raeiX1cv98UejokLKeQc6Yb1hmWGrMY
TYoIQnEwF2B1LQYmdGPjI3MCMTlw38tMCxKoVKkS0hu5995773Xp0uXcuXPJ
FRUkY7LgXEVtqEQvJjmqRx7vCOfBgwefPHky3OAmj/E19OVbrBAZXgIYHzp0
aMmSJahdNHLmzJkR0SAKMEZkZOS+ffvoQCX0c9f01Es+Ves7Gfs7xPAG4sq0
pvNuhgEpFFsOig0m5wx4W/9HjhxZunQpRits0LNnT5BG8+bNmzZtCtgA/WIg
vPTSS1q5MiDnBtjaEtlf/vIXOipHjhwFChQAYqH6fWAp9Fh3cNO/qGiFAma1
N6octq+88gqiFcCmKsOgMrn8aVnSonQta4raw02Uf4/j/9Mjbq4nuu8S2k7L
/GzhxpaQME74Z1EkbmIcPcjelD584403YCQwdv369eleQNGQIUMmTpw4efLk
GTNmgPrgMaSuyvtCoFxQH9dwgXZIL126dO3aNaVhMWdOG33hBx/XPVn/otig
1yjyhJZs3rwZzvnyyy/B4QBaRArjwkHlypVpNr9qS9cQpu2R2UzR3R4joDjR
krvk/tNPP925c2fOnDl0yPvvv68M6tmzZ2/SpAkG5oULFyyQ2R3EBGt6CsVL
hvoC3irK6tWr0aTy0kTuYa9duXJFc9AtgpBU6JdfftmxYwdzWfXEkbqIKVSe
0lkEgq8fSNyBKinkI9hVKYUBfuXLl3/55ZdVRxVFM3LkyDNnzty8edMY2xa1
kpNAfkRCtzKj+/btW65cOVQYkxp9jRZGTU+dOnXnzp30odxcA0EhoAod+vtv
WUj5XSkcekRYnT59eu/evevXrwcBLvRo0aJF4JD27dtLoYO4lNNY2Vpsmcug
jlzUMmbMmDNnTlCf67oWbilMWUqUyyVVMFudkKRiad1sySqE4dYvszvb2p0v
dV7oEy1bcjzkw3XugyCFXlraPfea0Ce6t+K5adKkAdGB+ho1aoTeb9y4MQAb
gxqwPWjQoGHDhnGA1GU+Vq9evWHDhgMHDkSVMBZ79uxhjBC/T9YEC8cP7pqh
u5mrAxj+xo0bqIPZs2d37dqVpmbKlAlh8vzzz8Mn+fPnr1OnzogRI+Al5kiS
SFf7a+mh/WY5bRAUQL7WrVtny5ZNOc/TpUsHA3CS6aa9QncnIkFfK4UeQm7O
ort378bExCAbwUgYlVjHCEwL30vka31xEm3ev38/ZiYyHJmMwK9YseKqVauu
X79uJQJ1ZfKb0cmJ3BWeQHDF77vvvtuyZUtkZGSePHlQ0wwuRmitWrUmTJhw
5MgRRZPJWrE4u4R8h4QgJZiF4QcMGBAREQGGoaPQawUKFKhZs2ZUVNTy5cuB
SWYEBZw8ToHgymEi7Ldw2gquuHfv3q1bt4AW58+fP+cRByr0BquAfj/66KN3
3333tdde80VDuCTHPDjqP/7jPwyGuSjLhWRKAa31OuVyMagmDOlCJkV5KENL
/JjNR7aWGA/4fCjZf7kVJoBa4qvfESe5r0DL//GPf+TIkQNNoYzKciFAX9C9
gD1sCrDf8OHDmYkgvc2bNx88ePD48eOwIsYazGaF+X5vftD6odwAkAO2X6BI
W1WrGTNmDEIDMKPYasYRy6h48eK9evWi8YcOHVJWKFf96eZPqvEJSPH0m1uG
A1mK8YjdlDdvXvoHBpDPP6NM/4AQBA7d/e6Efa8UeihpjJiMiMdRo0ahOhEI
f/vb37Dmli1bpjENJE2lSZuRNqi8Tz75BEmFlCtatOjkyZOPHj2qJQ7fnkLC
tjaF4qHQ4AKOL1++PH/+/A4dOuTOnVsbZ1jrlSpVGjdu3LZt2xhi/euPDOl5
fdTW9u3bo6OjGzduzER45513gH9o6hIlSmAQjR8/fv369adOnUIJ2oZpbOJO
OxZOW4UjhNuZM2dWrFgxcuRIsF/Dhg0rV65ctmzZfPnyoe7Tp08PCHzFI1S/
ZS0GEblhuXFCIBFXAhhAC3Dgv/3bvwkKgqa0IWuFcVW/jGuQrga3bOPVXW90
n+sWyAiFkXGSKpjoYsVu6F9ulhVgLc0A1ipk2LfsaY0R2rQdXuUAfP3113Pl
yvXZZ5/BTvQhsw/IV6RIkdq1azMZVToNlrN0drYK5PO5/b35IZSHFR7y448/
Xrp0aevWrUC+GjVqZMyY8fnnn0c7MC8wCjCIRowYsWPHjjt37ig41ydAnlQo
cYJTuH4LOCnd6IRdu3b17NkzZ86cGErwM6wuX8e1a9fKuLYcICmoL6mQNCOD
u2/fvi5duiAAkQNp0qRBe65ZswbUZ25yCd3SX00YlWfPngXmVa9eHdnOvM6f
Pz8WyqZNm+RFbCyaPGZx8qbQTK1o85MnT2KbtGjRQtb63//+d4Bf+fLlBw4c
uHPnTrmk6vo/4PhKZ6Hm4PZjx44xnUePHo1eRl9j3KHj+ESAN2vWbNKkSbt3
7+Yybe/KScnuE492SBAK155ws1gRmij6Q4cOoevpB3gGZALihU/atGlTp06d
KlWqVKhQoVSpUkqogo4D26j+rw/yhTrF8VX1cC0QIxxp8/fPf/5zPPuzoaDO
tyAZf0TJo9wwlYcMBVDj+aO5+dmBhevSUbVq1cKOAEV/9dVXwKfZs2fTqxs3
bjx48KDCcn1pHo2eOOc8On8q/fLhw4fnzJnDRGCs33zzTXAsOD9LlizYAn36
9ME6OHHiBHNB2aFd6Oi+SDKQJ/GjPt5RxQ6wlSIiIugiVQAsXLgwIHDlypVM
KMRFbNAjNwXyJSFiYsLeFy9eXL16daNGjVCdWKOYPO3atcNeQ7EmRbwnUr5N
+BPRlCNHDsRy1qxZQQgxMTG8byCYoymFVxM/hUokbSsgwxniWbNm1a9fH02t
IgVp06ZFTGGwg2S02hDrLfgk9Es8bbKZ+69//Uv+2EePHmWat2rVCq399ttv
M9Off/55cDK9Fx0dvWHDBlC0UqNojZQeRjgkFdRnv7qqOTZYfstCXf4vjzjQ
5q9iQMAtw4YNGzBgQO/evcGBdEjx4sXfe+89rOB//OMfSqoMa8l/D/CjdTxg
odK/KMJCi2xKi8dlSg7DNYav3JU9W15zwyvMD1DgUH53vrx8D8V7Pphqf3FX
FF1vQzujdC5qPzayyrQp9kQl6phihQoVqlmzJpCJvho3bhy9xyxTcBCTEW5R
wgdz9ArdJIr9bbG3v4ofYr19fxrGJ1Pg6tWrR44cQVy0bdv2448/Vmk/4H3+
/Plr1KgxatSoTZs2MU0U5SHnELtP8lvOCtdvWgiiB0C/Y8eOrV69OhMB7Qkz
o0Zbt26NxYTUtX2B32kJN4V+P2J8mbAHDhz45ptvypcvD+pTSQ5m9LFjx1Rq
OYkOJdx79+5dbE9YF2GFHEZ2FStWbPjw4cz9gIP6ErqlKRQfWd57OxMb3J2X
+sB4h11RRghw1R4F+MHM6PH9+/crECkpuij8RnKBUMDrq++++w4FvXjx4qFD
h9auXRsZLu81pnyJEiVAO9j1KD5EupuENhwl4HvFj/p82ifcBFdWzwsXLgCG
EYAgwJ07d27dunXVqlULFixAaHTu3LlevXqVK1eGl8qUKfPJJ58AD7CI33//
fSAQwkShuHDdK6+88rJHysyMdZk9e/bPPvuM6z/44ANOojHjhGe+shpyIJT7
nzINhgZcKHQ3ftQXGpcRZ9yu+xdlm3njjTdQ8TQbOQkQQuPXrVu3efPmGM79
+/cfPXr0tGnT6BwMhO3btysYXN56vtFx+zl0ZSz2iea4eyg/YMXQyD179kyc
OLFjx45otzx58qh2c8GCBRs2bMh0mDNnDjwALJTLt49/BF+TmbKIp9/Q+3TF
smXLGjRoAD8D+WCPDBkyIDQmT56MvI1zLyDhXiWFfh1p737FihXM69y5cyPE
MOi6devGvL527ZoGNzE7+cRD8CG2540bN3g7Zro8ajJnztyuXbstW7ZYRgi7
OEEbm0JhyTWxfeJFW0jff/89EhvgB3RJly7dcx699tprpUuXRk9hsWonIuHe
IGEoNKSO7rJFv/nz53ft2vXzzz9H0YMuXnzxxSxZshQvXhw5MG/evEOHDjH9
mT6B8MAvod4rnLZymSTOv8hGoBMsD2GslxJEFd8gJX/m89tvvz1//rzKh82a
NWvSpElw14ABA/r160entWzZEvUXERFBd6nwB91YuHBhjjkDRMQAUf66Tp06
NWrUCLZ899135SuoEEiQ9nNB0rHWBhFQQEcAiQolf/jhhyATzgACDf7FWX/N
R7J95FUIobK1VqMG6JOHatxpGKiVFoKFSpUqBdDVvu0Sj9asWQNeOnXq1OXL
l2/dusVcU75H7AI6ytaErZ9DN0DN2/93moPh+EFLjnJZX7t27cCBA8uWLfvO
O++g40DsIHNGsEePHoBYYAwgBzZQEjP35q51eT8ks1CSpnD9xpsC5lGa3bt3
BwzALTAn4hSunjBhApIWCK07+KrmpVCSILHx9evXMYIqVqyYJk0aJADShsFl
pihZeiCoW5Pi+NJypBNWfLNmzeBb1dlEYsPSvgRQSXcj+49DsSFZ3SwLhEYZ
a6VcuXLYpKizP/3pT2nTpkX5Ll68+OLF/5e9Lw+reWvfP8drDg2mRKg0aE5C
KWmgIlTmMY55isxkKFOZJfMsEmWeIjJmijKUBiVRaaAM4bzv73va/e5rP1fr
+ti7OhypU637j33tdnv4fNZ61vPc9xqe55WwsljVAaNAwqZDKETsTkhIoMpT
CPS6urqUs4KSctApj0uXLsXExCDQVyzWJ/FOtg5VJBssEBDC/MLKAvT869ev
WVlZcINQDYh0YICXL19Gm4AIBQcH79+/f9u2bVRrA3Ri/fr1GwuxdetWKmxH
1e7wZj8/v+nTp8MywQy7d+/uIAY9t7W17datG9qcXoROoVLIYIwbNmxYsWKF
u7s7PLONjQ2oIMhbCUyPgQoxQ94aGRnRo5mZGbw6fo79kKOjI34L30xVhuEe
FyxYgJ/DHeHiL1y4cOvWrdjY2Li4OLQArEW4nMc8JzvZSjtIi+yRIvfFlW4o
Kc4ecJ0QOHAL/v7+MGncr7GxMaIAKJ+FhQUaGTcbGhoKhkPbWYVTeaJvj7IW
SIW/CjoTIkRx7ZaZmQk7hzHAMygpKcHqtLW1YTAQAnfu3MnJyaGFAFFpJ1Hk
KBvQsE1LS/P19YX/ge5r0qQJdCtcFiVxJVOnQVEReRE5maSkJG9vb8roC9kC
bQ7PhnDGSjFWRELLwbL1UpY5eHiE5sOHDw8dOtTQ0JBmThDvEHBPnz6dmprK
CrgUVEwJU1qgyRk64PDo0SPQEjc3N1NTU5JFaDQ9PT0QA5CBnTt3RkREIOiT
o6APigrXi4ucQa1ADVtc1KP/5ovze9CWSCpdBxKIgAiNnJ6ejqZLSUmh/DAv
XrygFDF4BfoC/0oVA2+Gk8H76ShNQEDAjh07wAl3FQNIb8htqoMMnglanpiY
iCeQqLNnzwZh09LSokVb2DYdy2UZmBnlA3UHt4GwhdnjceLEiXPnzgW3B4fE
T2/fvh0/BEoPIoQfun79OkhRdHT0s2fPQG7hJ3ELCAe4ZjrOQNvbiP+UWc+W
3C8FhTNvbCqb5htFgu2+tIcT3YRmB1cZMWIEnH+zZs3A9zp06DBgwABQGvA9
OrpOpW0qYmqy70QJ7Ykuphtn+9tpKRzWAhrQokULmJmsrGzfvn13794NO4Fh
SEwBVURW8J34WzusoKDUSXBZkJaQh/Ah6OhBgwaB0tMsbkVnROQc4Mog66B2
KadW165doc1hw+AJTLZU6NusmpBei4FTQhTz8/MbPnw4QiQkjIqKio2NzcKF
C0+dOoWglpubS29mFZSq4H4/Qr64dC+GeUxMTGBg4KJFi5ydnQ0MDBqJAQaI
+PjHH39gpNy4cePp06eIoWA+LDhKHG/MF2TyL5/7+XEU59UJ3zO3KZI6OVLk
D9ExalA4NDXcTkwxoLk10EWWFhgfRLODn8ycOdPS0hIuGqIVTkxfX19bW5sK
7FJFYDokUrduXTjwfv36odeOHDly4MABUM0TJ06cP3+e8uYRwSOOB4KK4UBr
mkX6eVohFaZiK/0+KAol90gJwfcvca1YeHtIlUuXLuH2FyxY4OTkBEumSnb2
9vagwWC/+C+4+vv374WlCSsrSjBy4bRtvvjQLoQzdMHIkSNhbNCAioqKnTt3
Xrp0KSgBVAxt+SiQ2jNcKVFZWR/6GpZ/7969KVOmQAeB1RsaGk6bNi0qKopW
xCr6PZLLgnrdv39///79aZUE9wgveu7cOWg9MmPRvztBGUeRoLk7Yd9RTlGE
th07dkC8IDhSHj8Q/jlz5pw9ezYhIUFYe1pUGSun/y0ktieBYCAChoeHb9++
ffz48e3atUOjgT+AYIBaODg4zJgxA9o/JCQErQe3ICqqNFtFbMa/ZRcS7xeu
/xa5oCkBto6AJ1CXICSgc7DPD8UDzUsHqMk+37x5c/PmzY0bN/bq1UtVVRUS
Rk9Pr3fv3lOnTnV3dx89erStrS3iMh0NpmTROjo68+bNu3z5Mkjdy5cv8Qga
CQf4Xgz6FXqel5dXwgHbIv1h2US9EvpF+teZNdKJfljyhQsXVq9ejYgG06XS
xmg3U1NTV1dX6MErV66AXYPAoJ2F20UqeqQrAcW1p3BPO+1uhbjbs2fPkCFD
MPCp4oyZmRmGP2IlWkxi92b53VAZobh2K+/r+ll8/vwZog+q0MXFpWnTplCO
UEa+vr54UaIEW0Wc9CPDxmNGRkZwcDAiGi38qampDRs2DOYN8Uu3Wbq54jnK
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
PcrKyvr8+XN53BMHR0WFkPVhAGLQIcKGhobS/j0zMzMNDQ34/7p168rLyzdp
0sTGxmbSpEkYdMHBwbdu3UpNTWVhlzLAFDf3wudkOP4ZwDeuXr0Kg+zWrRtY
n729/e7du+kcB3tPybbH8Z2g6PzgwYMJEyZg4NepU6dp06bQfSEhISkpKRSd
2ao6J34cpQJhFQ+a28/Ly0tLS4P6mD9/vpWVlZqaGmkQcD9FRUV9ff0+ffqA
Ex48eDAyMjIjIwMughaLGbekyUOJ5GPCogBFonzun4Pj58AmzyVsuLisqrQT
HgMkJycnMzMTOuvIkSMYUNbW1qqqqg0aNJCTk5OVlcVw09TUdHR0nDlzJt5A
tdVAERF52SF6Do6fATNRkbimM/PDycnJAQEB4B7t27c3MTEZP358eHg4ZWeV
XqMsh+uuRKBNuYmJiWvXrsVgb9myJaIthN7GjRtv3LiRm5tLSTMKxE0tPKvF
wfGPwfYFEesj4gfrQpShEp/QIF27dkU8qlmzJrgfQhJ4oIWFxfDhw5cvX+7v
7w+H8Pz5cwQjiVXj4v7krI+jsoL2u8JLU6YjelFUWNiU/sQbML5SU1Pv379/
6tQpX1/fcePGQV7B4cvIyGCINW/e3MjIyM7ObsqUKfjvmTNnYmJiPn/+LBRW
HBw/CcrLRws9dHyjQJyXFUzj2rVrixYtgpOnGn9r1qwBD2TZ/oVfwv32T4KO
X7179+7ChQsLFiwwMzOTl5fX1tYePXr0vn370OyQh2xuv8j9GxwcPwoh62Mz
fiT9MPzj4+MRdDw8PHr37q2srAzKV0uMunXrKioqmpqaQg/6+PgcPXr0yZMn
2dnZeXl5tONI+BMS0yCc9XFUJkgzMYkNtDS44LExNL5+/YphkpCQEBoa6ufn
B0kFvqeiooKRVbt2bbA+jDKIrIkTJ27atOny5csYgIgItMQjHCZ8nx7HT4Id
EMAjoxMfP36Ece7atatv375t2rTp3Lnz3LlzT5w4kZWVhYggnbCF++2fBxof
cRMBdM+ePWj2xo0bI7aC/nl6ekZFRUEh8jw5HKUORvzYjB97DpN78eIFiN+6
detGjRrl4OBgaGiIwATW9/vvvzdq1AhisFevXpMnT0YIw9vu3LkTFxeHuIYA
R18uPUHBWR9HZUJx82/CtGZw7IibGBqRkZEhISFw7/Pnz+/Xr5+BgYGCggLx
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
zJkzb968oWa9nwTWiYPikZmZ+fTp0127dvXu3Zut4Ono6Ojh4fHkyZPi4mLK
zk0QBEEQ1ZCvqD7mu+Ho379/f/ny5Xnz5llbW8vIyNSuXVtRUdHBwWHfvn0h
ISEpKSlV/RDEd4KpPpSNgoKCpKSkGzduTJgwQVNTU1lZuVmzZuPGjTt37hzK
A8ufT7EAQRAEQVQrvqL6mNfOz89/9OjRpk2bIPOMjY3r1q1bq1YtLS0tV1fX
69evJyYm5ubmkn//qfhDlMS1uLj41atXa9eutbKyUlNTU1FRsbOzW7NmDVuf
paioiEoFQRAEQVQrxKk+NocXzj0uLu7UqVMuLi6mpqby8vJSUlLw761atVq9
enVkZCQO4Ol8iRpPpWl66enpJ0+ehP5nyRv19fUHDBiwY8eO8PBwxAJVdZME
QRAEQXwRcaqPabmPHz8GBASwBH3Qe7Vq1ZKWlm7atOm4cePOnDkDp88uQq06
PwmsVHCRX1RUFBIScvTo0QkTJpibm2tqajZs2BABgq+vL0/ZTRAEQRBENUGc
6vv999/z8vKCg4M3b948dOhQExOT2rVrs7TMI0aMOHz4cEREBJu6Syuv/WyU
VaTwwnuH8n/16pWXl1fnzp1RNhQUFKytrT08PFByWNZugiAIgiCqCeJUHyRf
TEzMr7/+CslnaWmpqqoKyaempmZrawuf/uLFi5ycHNa9S5LvZ4OnTsWrh/LP
zMy8ffv2lClTOnTooKKioqmpOXjwYAQLkZGRLNVqpdNpPABBEARBVAmfZ2Vn
CdujoqIuXrw4d+5clpBNXl5eTk4O8s/V1dXX1zc1NbW0tJQ6dn9Cyv6cqx/K
v6Cg4PXr197e3lOnTkVp0dLSsrGxGTly5OnTp+Pi4vgAP5QrHExzewmCIAii
quAjtfiS3CUlJdnZ2Tdv3ly/fr2Dg4O2traEhEStWrV0dHRGjx69c+fO0NDQ
4uJimsTxc1L22QpNKAkQfigVBw8e7N+/v7GxMcpMs2bNli9fHhgYmJCQwI5n
S/VV0V0TBEEQBPH/gFNmKq6oqOj9+/eenp6DBg0yNTWVlZWtJcLS0hKS78mT
J9CE5aJGQubEhcP7iRoPU32V3jj+RKkICgpyc3Nr3769hoaGlpYWYgToQBSY
3NxctmQnO5iGBBAEQRBElcDd96dPn9gGW3Zh3rx5VlZWioqKUlJS0tLSmpqa
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
KykpSUxMhORbu3Zt79699fT0NDQ0mjRp0qdPn02bNgUEBMTHx3/69KlMNPae
VB/xTeBtfcXFxb///jtKVEpKyqNHj9atW2dnZ6eqqqqpqdmgQYMxY8b4+PhA
EJLqIwiCIIi/jzjVl5WVBa+6detWR0dHQ0NDKSkpIyMj1sr34MGDtLS0/Px8
5mHZbEpSfcT/Dltml+k99mdRUVF2dvbZs2eXLVvGxhgg+rCxsZk3b97FixdR
DlH8UPYQpLBTqMgRBEEQhDh4wwi8J+tfgw/NyMiA5Nu5c+fIkSMtLCwg+RQV
Fdu2bbtq1SpIvg8fPvAjq/LWiZoIE37CYllQUBATE8My+DVq1IgJv86dO69e
vRqlMSUlBSpRmFSciiVBEARBfBGWgbmsrAwbbJGsnJycqKio3bt3Dx06tHHj
xmzlNTMzsxEjRhw/fjw2NjY/P5+dy70zNbAQ3xBhozE22MSN9PT0w4cP9+vX
z9DQsF69etra2oMGDfL29g4LC+OJJcsrMv5V0Y0TBEEQRLWGr5vGXG1RUVFk
ZOSFCxdcXFyMjY1r165dp04d1rf7yy+/hIeHFxYWCs/lUzmq6PaJGsjnQwVY
a15QUNCiRYu6du2qpqYmIyPTvHnzCRMmnDlzJjExka8jQ4P6CIIgCOLvAPH2
/v37kydPzp4929bWVlFREapPVVW1Z8+emzZtun37dnp6urArjbUNlpOrJb4p
n6+4wcaOonCeOnXKzc3Nzs4OhVNBQaFZs2bz5s27efNmUlISCz3Y+NIqu3WC
IAiCqMawVHuQcHCsfNk1KysrDQ0NeXl5fX39Nm3aLFq0KDAwMDExsaSkRJgn
jftl8rPEt+KLmfdYizRLGH727FkU0datWysrK0P4de7cee3atSifbOABde8S
BEEQhDj4PNysrKznz5/v27fP0dFRXV29Vq1a8KqdOnWaMWOGr69veno6a28R
+mIOqT7i34AXNpYgCIFGXl4eG4GwcOFCOzs7FRUVExOTHj16bNq0KTw8PDc3
l3f1EgRBEARRCeZVS0pKoqKiTp8+PX36dGtrawUFBQkJCXNz81mzZvn5+cXG
xv5HhLgrUAML8S/BixYLOgACEAi/EydOjBw50tjYGLGJpqamk5MT9mD/x48f
qTQSBEEQxBdhY/Nyc3ODgoLWrFnTtWtXHR0dSUnJ+vXrd+nSZffu3ZB87MiC
goLyirZB3gJDw6iI74OwsOXl5aG4enl5oYgiNoHqa9as2YgRI3bu3BkeHl5e
IRF5xmY2Ebhq758gCIIgvj/C+bYsRx8cYmJi4unTpwcPHgzJJycnp6GhYW9v
7+7u/vDhw7S0NHGtfATxfWCBBg83UIZjYmJu3bq1cOFCxCmaImxsbCZPnuzj
45OQkMAilHLBEm8UmxAEQRA/Dyz5LWstYTM42HQMvtju0qVLW7VqJS8vDwdq
bW09b948Pz+/uLi4/Px8vlBCVT8E8ZPCV2rjhRDlFqHKlStX5syZ06RJE9bP
a2dnt2zZshs3brx//54N8GPLBbJTqOeXIAiC+EmotD7p77//XlJSAs/45s2b
8+fPL1q0qEuXLtra2ioqKh06dIDku3DhQlRUVHFxMbQiG7lHSfmIqoIXXR6t
sClI0dHRhw8fHjlyZPPmzdXV1XV0dBwdHTdt2nTnzp2UlBQcw6acl1fMVa/S
hyAIgiCIqgFO8OPHj69fvz59+rSbm5u9vb2pqSmcpqWl5dy5cy9duoSvWDcZ
X9qe2vqIqoKXPTZCj0Ui+DMnJ+fJkye7d+92cXFBAZaSkjIzM3Nyctq6devD
hw/z8/OFS/pSWx9BEATxk8AbOj59+gQPWFpa+vz580OHDk2bNg2Sz8DAwMjI
qE2bNmPHjj18+PDbt2+hCZm75CeS0ySqCmEzHRuiwLYh/9LT0x88eODh4dG5
c2dlZWVFRUUTE5Phw4fv3bs3MjISspCiFYIgCOJngw9rLy4uzsvLi42NPXHi
xOTJkxs2bKikpCQnJ2dlZYU/f/3117CwsIKCAhzGjucOl7wnUYUIEwQJ0zij
YCcnJ1+/fn3p0qVdunTR19eXkZGxsLAYP378yZMnX79+zVbppZiFIAiC+AmB
nHv79u3x48fhFlu1aiUpKVmrVi01NTVHR8c9e/awVLflFRpPmPKC1rUnqhAm
8PhkXhTL0tJSFsuwAX4XLlxYvHhxmzZtpKWlIfw6dOiwatWqgICA7OxsFF3K
3EIQBEH8PPB0Z3l5eXfu3Jk2bZqFhYW8vLyioqKSklLjxo2nTJly+fLl1NRU
4bgpNumDXYFUH1Hd4Gvv5uTkxMTEoABPnz4dhVlFRM+ePSH8rl+/zkaoFhUV
CXuHCYIgCKIGIBy4zvvF2GTG5OTkS5curV+/vnPnzrVq1ZKSkpKTk2vSpMmI
ESP27Nnz6tWrwsJCys5H/CgIR6vm5uZGRkbu3bt37NixzZs3V1ZWNjU17dOn
j7u7e2hoKFult1zQO8xm9ZIIJAiCIH5cxK2PBtWXlZUVGBi4YsUKJycnc3Nz
qD5JSUkDA4P+/ftv3rwZX+Xk5JT/ebQ8QVRneL8tK7QowA8fPjx48ODQoUN1
dHQkJCT09PQcHR29vLxCQkJ4q3X5n5eYIQiCIIgflC86MuyEQwwPD9+5c2e3
bt2MjIzk5eWh+rS1tbt27bpu3TpIvpSUFNZy8p///IeveUoQ1Rmeu4939SYm
JkL4rVy50sbGBoVcQUGhSZMmLi4uu3btev78eWlpKR+wSqENQRAEUWPg8g8q
rrCwMDIy8tixY+PHj69fv760tHS9evXU1NS6d+++evXqW7duQfLl5+ezpC4s
EW7V3jxB/CMqrdlx6tQpV1dX6D02bNXCwmL48OFHjx7FV3l5eXwVaT4xpErv
nSAIgiD+J3gvLfwa3NyHDx/OnDkzffr0Nm3aqKqq1qlTR05OrlWrVsuXL/f3
909NTWUZ/Mj9ET8ibLVBto2ApaCgIDw8fM+ePUOGDNHW1mbjV1u0aLFw4UKU
9ujoaLZYm/D0qrhrgiAIgvhf4cvsMl9WUlLy9u3bGzduzJ8/H5JPS0tLRkZG
QUGhUaNGrq6ufn5+CQkJzGOS7yN+OFhpRwHma3AgzPn06VNOTk5oaOi2bds6
dOigoqIiKSmprq7es2fPNWvWnD9/Pj4+HvWCBvURBEEQPzpM77FeWrjCDx8+
+Pr6Ll68GO5PQ0NDXl4e7s/KymrixIkHDhx4/vy5sMOLXYFlbqnShyCIf4ZQ
wrGuWwi/u3fvTp48GaUdJV9CQsLY2LhHjx4rV64MCAhAsJObmwt9KG72E0EQ
BEFUf4SjlaDoQkND161b17VrV21tbTg+VVVVCwuLoUOHHjp0KCQkJCkpiffq
CscBVt3tE8S3ITMz8/Xr135+fghwWGrKevXqGRoaOjg4oEZcvXr1/fv37Eg+
xaNcUPhJChIEQRDVCu6hhHMYubfKz89na3A4OztraGjIysrC8TVq1GjcuHEH
Dx58/PhxWloa9eoSNRVoudzc3JcvX+7Zs2fYsGEo+XJyclJSUiYmJo6Ojhs3
brx//z5btuPTp098+hKrU2xJGhJ+BEEQRDUBgq2kpITnWuEb2F9YWJiYmPjk
yZNjx47Nnj27devWioqKKioqjRs3dnFx2bt3b0hISHp6Os3dIGoqfFwrYp+H
Dx9u377dycnJ2Ni4tgg9PT3owKNHj0ZFRbH1poUBFN8g1UcQBEFUE4Qr5HJX
xZwdJF9AQMDu3bvHjRvHFimQkpJq0KDBkCFD9uzZExYWxrIxE0RNhYU/5aLZ
THFxcf7+/h4eHgMGDEAtkJeXl5GRQSjk5ubm5+f35s2bgoKCoqIidiLlLCII
giCqJ7wtgrsqOK/09HRIvm3bto0fP75ly5bwcdLS0rq6uoMHD968efOjR4/S
0tJY+0Y5+Tii5sIXIszLy0tJSbl///6uXbvGjBljaWkpJyenpqZmY2Pj6uq6
f//+J0+eoFKwusB6e/mi1VX9EARBEATx/8M6ofhSGnBwrJXPw8Ojf//+zZo1
g2uD5DMxMenVqxd04N27dz9+/IiDqW+XqNnwka7lFctwIBpiXb3Dhg0zMjKS
kJBA1bCwsJg0adLhw4cjIyPZQr28Y5dUH0EQBFGt4O6JjUrKyMgIDg729PSE
XzM0NJSUlKxXr56mpmaPHj0WLVp0+/bt2NhYatwjfgZYBj+2zYRcaWlpSkrK
vXv3duzY4ezs3LBhQ3l5eWVl5bZt206ePPncuXPv3r1jiVzYWTSojyAIgqiG
sEmIhYWFoaGhXl5erA9LSkoKkk9HR6dTp07Lly//7bffIPmys7OFa1GVk2sj
ai48wGGLzjDhl5mZicho69atEH4mJiaIjCD8GjVqtH79+jt37rDBD7yHl2oH
QRAEUU34owL4qZycnPfv3589e3bChAmNGzdWUlKqVauWurp6hw4d5s2bd/ny
5ZSUFD7hl3k01oFFfo2okZSJIS8vLyEhITAwcMuWLQMGDDA1NUVlUVRU7N+/
/+7du+/du4cDykVC8Yut4iQFCYIgiH8VvqJuJQoLC8srxiwlJSX5+fktXry4
bdu2bMauiopK69atp06devjw4VevXjFv9UW++wMRxL/OV0o7FN2HDx9u3rzp
7u7et29fExMTOTk5S0tLVJYDBw5ER0ezxnN2HRYZMdhQChJ+BEEQxHeArTfK
5mLwhohCESEhIcuXL+/Zs6ehoSFcmIyMjIGBwZAhQw4ePAjJx/UhqT7iJ+Hr
pR3CLzU1NSgoyMPDo3v37lpaWoiVWrRoMX78eF9f36ioqKysrHLR4EB+orjg
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
uhQeHp6VlVVpiCBZDIIgiO8GV3psVB7bhhSE5Dt48ODUqVMRrWtoaEiIgA23
tbWFVb9+/XpycjIP20n1EcTPBpvowfsIsJGRkQFdd+7cucWLF3fu3NnU1BTa
r169enp6evb29kuXLoVJefDgAaLFnJwcYfcu79XlrX9V+mQEQRA1Ft7DyyQf
7C2C8Tdv3pw8eRKSDzG7lpYW9J6ysnLDhg379Okzd+5cHx+f6Oholru1UkoW
Un0E8fMgHL7Lensh596+fXv79u1NmzY5OjpC79WpU0daWhpmpFWrVs7OzmvW
rPH19Y2MjCwoKKh0NS7/SPgRBEH8G/AB1Wygdblowc3Q0NB9+/ZB8tnY2Gho
aEhKSiJgt7a2HjVq1P79+69fv84WXeImWpzkI7tNEDUb4WBgHj/m5+enp6ff
v39/9erV3bt3Nzc3h+RjizYaGBh069Zt0aJFEH6vXr3Kzc0VN2uDrAdBEMQ3
h5tWGG3oPRjhiIiIw4cPDx06FDJPWVlZSkpKVVXVyspq0qRJ3t7e+DY5OblS
Nj9q6yOInxPew8tVH+uohYlITU319/ffs2fPwoULBw0a1LJlSxUVFWg/fX39
jh07IqiEPQkODk5LS6uUDJBB1oMgCOLfAPa2tLQ0JycHoffly5c9PDxGjx7d
pEkTFp4jTnd0dFyxYoWfn19YWFhmZubnebdYYhZSfQTxs8Hycwr3wJgwg4Cv
CgsLk5KSgoKCtm3b5urq2rRpU9Z3gHCycePGQ4YMgfCDVUGwiZATJ/JLsXXc
quKBCIIgajgZGRnJyckxMTEXLlyYO3euvb29iYmJtrY2m3yHIH379u2w27De
RUVFfPpGpQm/pPoIgmAIM7RDy6Wmpt67d+/XX3+dMmVK9+7dDQ0NZUTAvAwd
OnTjxo3Xrl1DyMmyAcDCCONKph4pwydBEMQX+cpwaGY/K+1EiP327durV696
enpOnTq1ffv2RkZGiMdNTU27du06c+bM3bt3BwQEpKSksF6Y7/s0BEH8ePB5
YazbFxvZ2dlRUVGIK1etWtWzZ0/oPQSVsDMWFhYdO3acPn36kSNHYIhgjoTN
ff/3f//HFoNj12FQ9maCIAiOcBUMYYMbwmduillW/OLiYtjYyMhIX1/fJUuW
9O/fHxZYSUlJRUUFNnnYsGGrV6/+7bffWFL9SutuEARBfB0YjdLSUmEyqOTk
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
9y63dTyq5cNXKmnOL44zJANIEMR343OjVF6xqCW22cJG+DMvLw9RbURExIUL
F7y9vdesWTNp0qTu3bs3a9YMZlBaWhqWsG3bthMmTGArbnz48OEPMVTZoxIE
QfwN2DgWWL+cnJyEhISoqChfX183NzeYOAMDAzURRkZGlpaWI0aMcHd3h/BL
Tk6G8CsWwYay8Evxy/KkpqT6CIL4/rD1zlgKPuH+sj8vY1QuauVLSkoKCgpC
YLtw4cJBgwbZ2Njo6+vLy8tLSEioqKjAAHbp0mX+/PlHjhzBYTCAZX/OjkWq
jyCIH4XPlRgM4NWrV1esWOHs7NyyZUstLS02oMXCwqJv374rV648ffp0YGDg
mzdvcnNzhScKOzhI9REEUYWISzAlnK9RUlKSnZ0dERHh4+OzYcOGCRMmtG/f
3tjYWEFBQUpKSlNTs0mTJu3atRs2bBgC3gsXLjx//jwlJaWoqEic5CPVRxBE
taWSGOMJB4qLiyH8njx5cvz48Tlz5nTo0AFhr4oIbFhaWjo4OEybNm337t2P
Hj3KyMgoLCxkITPLDPPFi5PqIwiiqmDGraxirQ02wjk/P//9+/cwYnv27HF1
dW3btq2pqamioqKcnJyysjJLYTp58mQYukuXLkEZwirm5eUxWydMU0/2jSCI
HwLYPZ6ZSghLO1BQUPDu3bvz588vXbq0f//+bdq00dPTg/BDFKyrq9u6devR
o0dv3rz53LlzsIfQfuxcbveorY8giOpAWUU2FdYQV1JSkpKS8ubNmwcPHvj4
+MCIwZS1aNFCXl6+Xr16MjIyJiYm7du3Hzp06JIlS7y9vZ89ewa9V1RUVFpa
KkzAQvaNIIgflC8ut/H/tXfmYTml/x83ltCoVErRopCo7CGiiGiqqVFkCTMq
hslOvvZtkF18bWWbhVJSdiqRFC22LGlRkrRoU4mZ33cev/f1fK7OdeZpGWaM
GXxef3SdTqdzznOe+9z3694+N63eS3PZ9u/fv2zZMhsbGwrpjLqwurq6sbGx
ra2tu7v7vn37rl27hlqwzDk5V2QY5p+ien8rLUqelZUVERGxa9eu+fPnjxw5
EoLXvn17JSWl+vXrN2/evFu3bpDA9evXHz16NDY29v79+9nZ2cjcaJQgratL
6xz9U5+LYRjmLyKpCuoiZJIS6ew2VIqpwxfuhwzQ29vbw8OjX79+urq6yCRR
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
4b2jOVbwwDFjxnh5ecEM8Xo+fPjw2bNnOEN5ebkQ70VoY/9nnwbDMAzz70FS
FcZZpt1P7F15eXkJCQmhoaEHDx5cs2YNyqOBAwei3DE0NFRRUaFIL61aterS
pYudnZ27u7u3tzeOPHv2bFRUVHx8fEpKSn5+Pq3wS2Vcjddi62M+DmpLz8Lq
1TTkFduoEBUXF2dlZd27d+/KlSshISHbtm3z9PTE+9WuXTuhcQ/vl4aGBl63
/v37Ozo6fvfddytWrPDz8zt+/Pj169fhexRF83VVE7rMuEGGYRjmU6a2EkEc
e1lY+Z0KkZKSktzcXFrZjSK9LFy4EPqHYkhTU5NGGTVv3hzuh9KqW7dugwYN
cnV1nT9/PkoxlGWJiYkZGRkyTYsC1Vf1rW39KYb591Ob9cl0tuJ1KCwsTE1N
DQ8P9/f3R13Jw8PD2trayMhIXV1dXl5eTk6uYcOGtHIuKlnffPPNxo0bAwMD
L1++DNl78OCBOHgmmaSgfEJ4Fho3yDAMw3yy1BagtbbGARQcv/zyC0oT/EQp
A3+LiYk5ceKEn5/fsmXLRo8ebW5ujqJKT09PQ0NDVVUV+qekpKSlpdWnTx8n
JydPT0+UaAcOHMB/QRrT0tIyMzNxEpRZxcXFODlbH/MxUZv1vZSCNI/En5SU
FBsbGxoaunv3bi8vL/iejY0N+R5en5YtW7Zp06Zjx46mpqbwQLxiqEAdPHjw
2rVrjx49evHiBd4amTbz2l5ebvFjGIb5xJGIQkZQa4BQgogjS4jXWRP+kRoQ
SkpK4Gy3b9+Oi4sLCws7dOjQli1b5s6dO3LkSEtLy7Zt26Lkatq0qZqaGlSw
Q4cOvXv3trW1nTp16vLly/fs2ePv7x8cHBweHn737t2CggK2PuZjog7re/bs
GU3LXbdu3Zw5c1xcXPr3729sbGxgYNC6dWtFRcXPP/+8VatWvXr1srOzg+lt
3bo1MDDw3LlzV69eTU9PLywsLCsrE7+S4mV5//d7+A1iGIZh/gR19FihxKmo
qMjJyUlISAgKCtq4ceOCBQvgfrT+OwoyTU3NFi1aqKio4CeKNpRxo0ePhv5B
EdeuXQv9i4qKorFJpaWlKNSoXRHnFCxUJq7s62oR/2rcI+znso+Robb0LJOE
xGlPQOg5RSp9XVUPouPp4NdV8fewXV5eXlxcjFSdm5ubmZmJWhJqOrt3754+
fbq1tXX79u3xUsD0lJWVsaGhoaGlpdWpU6ehQ4d6enri7YiMjES1CK8GXgcY
ozDT6r0/MIZhGOYTorYiUhgEWFlZmZ+f/+DBg9jY2IiICLicj4/P/Pnz3d3d
hw8fPmDAAJRlOjo6CgoK8EAjI6Pu3bubmppaWFjgr7Ru1KFDh8LCwuLi4rKy
slDMCaFlJVWrCdCAJaG0rREqFlnzmLqpOz3XWH14Kyj6JapCN2/eRKoODAzc
s2cPKkTz5s0bN27c4MGDe/TooaurC9+jgRAmJiaoJTk5OX333XcrV6708/M7
efJkdHQ0RBHSiCQtrrz89dtjGIZhmDqorZQUx12hniZaTQDahgIrPj4+NDR0
165dCxcuHDNmzMCBA9XU1Fq2bKmhoYENGvunqqqKPZaWligNcdjOnTtDQkLg
jYmJiSg0UeQJgV/EN/OrCCoT6775v/8JMR8SdbT1VR/V8LpqtpG46kEIyRKa
h4oPEurz589zc3ORdFNTU6FtqMt4e3vPmDFj9OjRNjY2sDskfiR7pPlWUrBn
2LBhEydOpBgs58+fv3PnztOnT0tLS/EqiZv1fhPFVH/fz4thGIb5lKjD+mTG
EdF+KhNRcj18+BD+FhYWdvDgwbVr17q5uaH4++KLL/r27WtkZKStrY0SsHHj
xpqamh06dBgwYMCIESPc3d09PT1p+F9wcDDKQZyBGj1Qqr5VkcfxypgaqcP6
hFQtXkemtvMIPbkFBQVI6vfu3YPpIdHu3bt38+bNEDlXV9chQ4b06NGjbdu2
8D0dHR0tLS0a5+Dk5DRp0qRly5bt2LEjMDDw9OnTcXFxSOeo5sisUUhDbcWL
3fztD4hhGIb5hKmtfBQfIG4P+eWXX2hPRUVFSUlJUVHR48eP7969GxMTc+rU
KegcCrvJkyfb29v37NlTX19fXV1dWVmZ5i2Cdu3amZqaoricOHHi3LlzfXx8
QkNDExISUCbSOvKAykEKK01ldGVlpVg+xXf+Dz025l/KHzb0Cc19kqqgKOL5
TUKL3/PnzyFp2dnZV69eDQkJ8fX1Xbx4MUUy79WrF+wOjodU3aJFC1VVVRUV
la5duw4bNgz1mqVLlx44cODy5cvJycnQxby8vPz8fKTt8vJynJauQrUViWiK
PcMwDMO8B+poGKntePE/0jbKypcvX6KAS0pKioiICAgI2LZt26JFizw9PZ2c
nCwsLHr06NGpU6fWrVtraGjQT5r86+joiGNWr169b9++48ePX7hwgeKVocTM
yMgoKCioe3w7l5iMDLUl5rqDG6OKUVpa+uTJk/v378fHx0dHR58+fRqyh2S5
cuXKqVOnOjs7I7nq6urKy8s3bNiwUaNGkD1DQ8N+/frZ2tqOGDFi+vTpmzdv
DgoKCg8Pv3fvHiovdNrq16IazeuqzmXhtnlmLsMwDPN3U1spKbR+VC8oxXuE
khRHUryyp0+fQthQeiYmJsbExJw8eXLXrl2rVq2aOXPmqFGjHBwcBg0aZGBg
oKKi0rJlSx0dHehf9+7draysRo4c6e7ujiNhjD/++CMkEOUvxI/OX32JN44A
w1Sn7vQsHEPqhRT7Wpq0ioqKkGLDwsL27t2LFDhv3jwXFxc7O7sBAwagwmJs
bNyuXTtNTc3mzZvLyck1btwY1RZzc3MPD4+1a9cePHgwNDQUoogzwBtzc3Mh
kHShGkcgSKp6coV5wZKqKfOcnhmGYZi/lbob+gS5EvZQGEDxWHdxw4V4VDz+
hFK1pKTk7t27ly5dCg4Ohv5t3rx5/vz5KE9heiYmJihMqemvTZs2Xbt2RSFr
bW3t7Ow8ceJEWOLGjRtRnsbFxd28eTMtLQ0yiVK1sLCwoqKCY1wwNVJbehYn
aSSe8vJymF5+fn5KSsqtW7ciIyN/+umn5cuXu7q6IhEiZSorKzdq1KhevXoN
GjRQVFREDUVbW7tt27Y9e/Y0MzNzdHRcvHjxkSNHrl+/jmoOzc4gsaTEL9SG
JL+fOSL5/dgJYfsPJy4xDMMwzL8fFGcoEwsKCuBsycnJ8LcLFy4EBgZu2rQJ
5SaFf/niiy+GDRs2VIqlpSUK1s6dO+Nn//79bWxsvv76ay8vr3Xr1vn4+AQE
BCQkJNTY8yv5/Siptx0xJQ4LI+EBV3+ZOuyrNiUTu5nQkFvbtyA+WPiXOmI/
CvUUHFZcXIykiJrI8ePHqQ8XtQykNCQ5PT09NTU1FRWVzz77DL7XuHFjKJ+u
ri5UkMbsId3u3bv31KlTqIykpqbm5eUheYuboGtUTYZhGIb5FKDVQF6+fEnR
aF+9ekUDqCBv4eHhP/3005YtW1DsLlq0aN68ebNmzXJwcLCwsDA2NkZRq6mp
SfMiu3XrZmtr6+LiMnfuXD8/v4iIiKSkpKysrPz8fBhgYWFhSUkJzk8LGVBj
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
XfH/RWUQOg==
     "], {{0, 920}, {850, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{217.4888888888895, Automatic},
   ImageSizeRaw->{850, 920},
   PlotRange->{{0, 850}, {0, 920}}]}]], "Input",
 CellChangeTimes->{{3.71626864119876*^9, 
  3.7162686420606995`*^9}},ExpressionUUID->"aa0f09de-adc7-48f4-bba6-\
62976105e387"],

Cell[BoxData[
 PanelBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQdcj/v7/8/3HOdrp5RVCmlo0JBZVkeEjDpmCNmSETqhbI5xkD0qo0j2
DBkRihQaSNp7R0vO93fU//X/XI/ux+2TOpxhXs/Ho/txf+7ufb/f7+t1vcf1
bmU722rK99999928WlhYTfill4PDhIU/y+LHsFnzpk+dNXlSv1nzJ0+d7NDZ
9gds3I2FFf7+/3o5wzDMZ0ZZFXwp52cYhmEYhmHeB1Z9DMMwDMMw3wKsyhiG
YRiGYb4FqlJ9/xQfet2P+ewMwzAMwzDfDqz6GIZhGIZhvgWqUl9v/iE+9Pyf
+n0wDMMwDMN8nfzbqu9D+dTvg2EYhmEY5uvk31Z9f1QBqz6GYb5NuH8Lw3wj
VM7aUvpK+C9t/7//+7/Ke9JPsUCS0kvin3QUVnAqQc5J3VVJSUlubu7Lly9f
SSguLsaWgoICLPGzqKioWAL2SZKQmpqamZmZJSEnJwcH0g5YefHiRWFhYV5e
HvZJTExMSUmJj49PS0vD/linLfhXcnJyRkYGVtLT07EzHYgL4SZ///33yqUf
VOI73xXtSdvFR0lpVxKZwqkALoSl+HDhZzXfTkrHSl2U9qnmDAzDMOWs+hjm
a0RKnIh1yAflbvGBYrEhnFlqe3mFsKFj//e//0FHiY/6nwTSVxBakG2xsbGP
Hj16+PBhWFgYVh5UECYhNDT03r17t27dunjx4tGjRw8ePOjt7X3ixIlz585h
y7Vr127fvn337l06PDIyMjw8HFvOnj3rI8HT0xPLY8eO4ahDhw4dOXIEP7Hu
5eWFs126dAknpwtFRERERUXhfqAbX0vAHZI8ww3j5kmtiQWtuPLw/yqgh5XS
ZpVV9Pt8O0ExVv5kXFYzDPPXYNXHMN8O1bdskpIhYVZVc6dQPmAH6KLS0tKS
kpLi4mJIuAIJeXl5ubm5LyRARGVKSJWQmJj4/PnzKAmPHz+GVLt58yb02+HD
hw8cOLB///59+/Z5eHhgiXVPCVjftWvXpk2bli1bNn/+/OnTp8+aNcvR0dHF
xWXVqlUbNmzYsmXLjh079uzZ4+7ujqN27969evXquXPnYs8ZM2bY2dnNnj0b
P3GUvb39nDlzsI7l5MmTsX358uXbt2/HJXAh3APEIeRlSEgI1ONjCbjbhISE
5ORkqiGkSkI8ID1aeno6lnkSsJKdnY2lUEsJ8HKk6kurL10F9SiuUxUrQIH3
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
igTLUlxc/PLly5SUlJCQkKNHj65Zs2b69OnW1tadOnVq3ry5jIwMbBbFYNHU
1Ozdu/fkyZOXLFni7u5+7ty5W7duRUZGpqam5ksQolUIwdCEOar+T8SHDs5l
mI9P5WQs5SUJne5+//13ZCIs4e9AAcbFxUEBnjlzBvLP0dER/lHPnj21tLSU
lJQaNWqE3KSiogI3qm/fvuPHj4f2QyaiSj9hZBNdgrKq4Kl9ujfBMAzDfL5U
X3dBTau0BaYqMzMTFury5ct79+5dtGjRuHHjzM3NjYyM2rRpAwtF05Lip4WF
ha2trbOz85YtWw4dOnTp0iUc9fz587S0tMLCQql4uWUVfQjfR9qVVTTsSg1y
ZJjPljcVc3+INwo16qWlpdnZ2U+fPr1x48apU6fc3NxcXV0XL148adIkKEAa
ANK2bVsDA4POnTtbWlouWLBg69athw8fvnLlCrJVUlISHCjKpG/envGQYRiG
YaSoSvWRpnr9+nVJScmrV68KCgoSExMfPHjg4eGxcOHCfv36aWhoUJ0exJ6c
nBxUH2wT9J6dnd22bdv8/f1jYmJSU1Nh0aD0Xkv4/fff6eRUQVFW0WFPHJ2s
8u0JozYEiyZ0oPrTljWG+Ti8EU2pRiGMhFHn4lRKYz2QF4Q6uvKKOQpfvnxJ
ExSmpKQ8efIEOcjHxwcCz8HBYcSIEZB8WlpaLVu2hIcFHfjzzz87OTnt2bPn
5s2b2BkHUqA/ymXgE7wChmEY5nOCjBGtC8ZISnEJlRJQehBs0dHRUHp37969
evXqgQMH1qxZY21tbWJioqioWLduXRkZmebNmxsaGvbu3XvkyJE0IPfo0aMh
ISEwXmR6qq9LZJhvk6ryheBzvXjxAn5TQEAAMhTUnaOjI7SfsbExspu+hJ49
ew4fPnzZsmU01e/ly5fv3buXlJSEnCuVxQR3STweSirmDOdThmGYrwxxIU8K
8M0b6SnpqX6vuLg4Pj7+zp07Bw8eXLlypb29PSwOrIyenp66unqjRo1q164t
Kyurra09ZMgQZ2dnNze3K1eu3Lp1KywsLDExMS8vr7S0VCq+H1sThhGoRu+R
MENmLCkpycnJQYaC8wXPC/Jv9erV06ZNGzRokJGRkaampoaGhqqqaocOHbAF
29euXXvmzJnIyMjMzEyq8aOqv+o7QpSJmoY5nzIMw3wdkKirXIxTLzvYBTIT
MDTJyckPHjyguaUmTJhgamqqq6vbvHnzpk2bYqmiogJD065duz59+kydOnXr
1q0BAQE4hBqtxDKSrQnDVMUH5YsySaeI9PT0e/fueXt7Q/tNnDiRMqaamhry
Y5s2bTp16mRpaTl//nx3d3c/P7+IiIinT58mJCTk5ubSFG+Uu6lPBWV2aoMG
NIie8ynDMMxXg1Rk18oKELItJycnLCzs4MGDCxYsGDlyZLdu3Vq3bg2x11AC
7IuxsfGoUaPs7e0hCGmYRkhISEpKCqyJMPy2GqXH1oRhiOrzRVlFg6yQoZC/
IN6ysrKg5YKCgs6fP79r1y4XF5e5c+dSyy8UILSfvr4+3LGxY8c6ODisWLEC
mfTRo0cFBQV0WqH6nZSe1KAqzqcMwzBfHzRJrtjNf/XqFaxJVFRUQECAu7v7
pEmTOnbs2Lx5czk5OVlZWWVlZS0trQ4dOgwePNjOzs7Nzc3X1xemJzs7G9ak
qKiIahLo5O+0X2xNGEaKqvKFMMG0VIBKEmzYTjGfX758mZSU9ODBA2TGHTt2
zJ4928rKqmvXrpqamqqqqlhCB/bt23fKlCnbtm27fv06cnd6enp+fn5eXh4O
RwlAJyRtyXV9DMMwXxlCLC8pU5KZmRkeHn7mzJktW7bMmzdvyJAh2traEHsy
MjLNmjVr37798OHDHRwc1q1bd+jQoStXrlBoZQjFqi4kdQm2JgxTmWpUX/UB
yYXxVpBqFDkT+RcZk6Z7mzt37rBhw8zMzDp37tyuXTs9PT1TU9Nx48YtWbJk
//79ly9fDg0NjYuLg7MmPiGrPoZhmK8MoZe40MoDlz81NfXhw4ewF/Pnzx80
aBBsRNOmTaH3GjRooKur26dPn1mzZu3evRs2JTIyMj09/aUEYXCu0EJE8Sje
GZ+WrQnDVOZ98kWZKDql4LUJLb+0vaSkBBk5JycH8i8qKurmzZseHh7Lly+H
+wbh16pVq+bNm2toaHTr1s3W1hbb9+zZAxfv0aNHyPtU7yeEUeJ8yjAM8/VR
WlpKU8Pfv3//3Llzq1atGjt2bMeOHdXV1Vu2bAkD0b17d2tra+i9DRs2YIeI
iIjs7GzBNAjnkRoRLHWVqowIWxOGKf+zDCI1q295pRkJhRo/8Q4QgcjacNB8
fX3d3NwWLVr0888/d+jQAdpPSUlJW1sbWbt///4TJkxYtmzZrl27jhw5Aofu
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
Z8/u3bu3lpZW48aNmzRpAu3Xt2/fBQsWeHt7P3z4kKbtJr+SPM1P90AMwzBf
JNSRT9Bsr169evToEVxvFxeX4cOHo/itW7fu999/D8lnbGxsa2u7fv36I0eO
hISEoATGzu/0sgUZyT44wzACVdXLwT3MzMwMCws7f/789u3blyxZMmLEiC5d
ujRv3lxZWblr167Tpk3bu3cvXFHoQyGsn/i0H+X2GYZhvgYg+UpKSrKysmJj
YwMCAlxdXSdNmtSxY8eWLVs2aNCgYcOGqqqqpqamv/zyCzxu7JOTk0MtudSt
WnC6BV+ex3EwDFMZoScelRI0mxs1CqAIKi4ufvnyZWpqalRUlKenp4ODA4Rf
06ZN5eXl27RpM2TIkPnz50MWhoaGUqWf0JQgNPsyDMMwf0ppaWliYuKtW7cg
6lauXGllZYUyVlmCgYHB0KFDUfyuX7/+9OnTjx8/plBa5RVtuNV72dyvj2GY
8oqeJOLigpzEyuvQcvArw8PDfXx8FixYYGFhoauri7IIhZKJicm0adM2btx4
6dKlJ0+eYDc6iuv6GIb5xpGKuSd0gKHSVRynBW5yWloaStGlS5f+/PPPnTt3
btWqlYyMTIsWLX766adZs2Z5eHiEhIQkJSVlZmbCE+foqQzD/FO8qQKq9AsI
CPj1118HDRoEydesWbNGjRppaWmZmprOmTPn0KFDYWFhEH4UDV7oXUytDDQk
TdjCrQ8Mw3ytVCXDaCM1qdCW4uJi6L379+97e3vDp+7Tpw/0XoMGDRo3bqyp
qWlpaeni4nLs2LFHjx7RRBs0kS6rPoZh/imqUn0k2yD8bty4sWXLlsmTJ/fs
2RPaT15eXklJycjIyMbGZv369WfOnIH2S09Pp+BR5aL2hapknrhekWEY5kun
qhkxyt6eEw0rkHx3797du3fvzJkzu3XrBslXv379unXrGhoaTpw40dXV1d/f
PyUlpaioSOo8rPoYhvlHqEr1Cf/Nz89//Pjx8ePHnZycrKysNDQ0mjZtqqCg
AM/U3Nx8zpw5Bw8eDA4ORkklVO5JnV+qdOLBvwzDfE2IG3CFARf4SUUiKCgo
gAeNgvTcuXObN28eO3Zshw4d4EE3aNBAUVGxffv2U6ZM2bNnT1BQUFZWFg4v
LS3lztIMw/wbVOVFClINXmpxcXFsbKyvr++OHTvgkPbp00dHR6elBJRXNjY2
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
hQsXenp6hoaGYs+yt6cyZxiG+aagOXzT0tLu3r3r4eGBYtPc3FxfXx8Osry8
fLNmzQwMDMaOHbt69eqLFy8+ffqU5iESl5y0LnjfQifAT/lUDMN8RUi1LFCj
RrmkJ15SUhJ80s2bN0+aNKljx45KSkp169atWbMmyi5DQ8MZM2Zs2bLlxo0b
CQkJhYWFQjH1KR+GYRjmUyCeSfz333+HFxwTExMcHLxnzx57e3tjY2OakRyo
qamZmpouWLDgyJEjcXFxJSUlQi/oqrxm9qYZhvn7iDuTiEsVFFnwQNPT0/38
/DZs2DBixIi2bdvSqLTWrVu3b99+6NChCxcuRJEFfzYnJ6dMFIGKRm0wDMN8
UwitJFIjfKOjo0+dOuXs7EzzuKEUrV+/fpMmTUxMTKAGUYqGhoampKRA+1Eb
sfgkwsnZm2YY5u8j6D3qtywINki+zMxMKLr169dbWVlB6clIMDAwGDlyJPTe
wYMHg4KC4MlSLALhhDRk4xM9DcMwzOdFmWQO37i4uJs3bx44cGDu3LnGxsYQ
fj/++KO8vLy+vr61tfXatWvhXycnJ0Mlitt2oQBRJlMpzd40wzB/E0Hy/fE2
KKPi4+P9/f03bdpkaWnZqlWrunXrwjPt1KnTlClTtm3bdvnyZeg97CbML8l+
KMMwjIC4+UMY5fH8+fOzZ886OTn17NlTWVm5vgSs9OnTZ8mSJRcuXIiNjcVu
QnWf2Ilm1ccwzN9ErPpo7gyUNlTF5+HhMXv2bDMzM3V1dTikWA4ePHjlypXH
jh0LDg5OT0+HT1r29rxCn/ZZGIZhPi3ifn3CujgwaUlJSWJiIhzqDRs2jB8/
3sjISElJSUZGpkWLFr169Zo+fbqbm9vt27eTkpIKCwvL327k5X59DMP8TcQV
fTR6Nysr6969e1u3brW2ttbV1VVQUGjatClJvvXr1wcGBiYkJOTn55PGI9+T
ziA+JytAhmG+ZcTFIFbgI9NKaWnpq1ev8vLy4Fm7u7tPnDjRxMQEwg+edZMm
TXR0dMaOHevq6nrr1q2YmJiCggLsLw4M+Mmeh2GYLxBqaJCSZCTYsExJSYGo
O3LkiLOz85AhQwwNDRs1alSnTh1oPxsbm507d16/fj0tLQ2lkKDxuBRiGIZ5
H8Tx6iHk4F9D13l6esKbnjFjhrm5OZxrFLl6enrDhw9ftGjRrl277ty5ExkZ
mZGR8c4TwumGgORmX4ZhpHhnAD1hCxUd6enp/v7+u3fvtrCwgMxr2LChjIxM
s2bNOnXqNGfOHEjBp0+f5ubm0qkoEH05tzgwDMO8H1JtInCfX7x4kZOT8+TJ
k/Pnz69du3bo0KFaWlrNmzdXVVXV1NQ0MzNbsmTJoUOHgoODsRt19qNgqtyY
wjBMNYgDfhLi8AKFhYVxcXGXLl1aunSplZUVCpz69et/9913tWvXhtc5ZcoU
FDthYWHUQlEuqRWkUWaf4EkYhmG+TCqXw7SO0jgjIyMoKGjv3r1Tp07t2rVr
ixYtFBUVVVRUevXqNWnSpC1btty8eTM2NrYqvcelMcMwlRFmkxQaGvCzqKgo
JibmwoULcCrhWlIE0Tp16sjJyenr60+bNu3o0aM0VrekpISOoinIP/XTMAzD
fHlITbTx6tUrioyak5Pz7NkzX1/fFStWjBw5EtpPSUmpSZMmrVu37tOnj5OT
k7e3d3R0NPakYpyibFGZzFV/DMMICNV6KGco7hP9pLjxKEbOnTvn4uICyYdC
5r///e9//vOfRo0ade7cefr06YcPH46Li6N+I5U7BFIA0o/8OAzDMF8c4uo4
YQCd1IgPlLQZGRn+/v47d+60sbHR1dWVkZH58ccfof169Ogxc+bMQ4cOUTc/
dsAZhqkKsTATlzzFxcWQfKdPn168eLGpqamCgsL333//ww8/NG7cGJJvxowZ
+/bte/DgAZQhdfwTDhRKKvI3P+azMAzDfIlAob1POyxK1NTU1JCQkN27d48e
PVpbW7tWrVoolps1a2ZiYjJr1iwfHx8Uyyi9pY76126cYZgvDHEXPlqhsRvh
4eFHjhyZPXt29+7d4UvWqFGjQYMG1JpgZ2e3f/9+lC25ubni8oSahsnB5DYF
hmGY9+RNBVIlJ4VIFcbHlUuG1xUWFqL43b59+4QJE/T09Bo2bFi3bl0sDQwM
IPzc3Nzw3+zs7NLSUqFn4Cd4JIZhPm+ECC3wJYODg93d3e3t7Y2MjOTk5H78
8UdZWVlDQ8Nhw4a5urqePn362bNnNO9GVUPGuDMJwzDM+0NtslSiCjNglr9d
ltJG/MzLy7t3756Pj8/ixYsHDx6so6MjIyMjLy8P4WdjY7Njxw5/f/+4uDhx
KwzDMN8glZUYNStAwlEv4tzc3IiIiK1bt9ra2kLm1a9fH15k48aNKTrotm3b
IiMjad4NqTgDzNdB2Z9RzbGV6yuqOaRyL1CpiWCEfk3COYW4QLBlZB8BfiL1
vnjxoqioSKgYoRAW9F/wWoTUDhQXF2fAFqqsxsa/MOZReD9v3kbqYanbg2DN
K79AweiLz1zN/fyFz8R8QVT1fZFIkOZjY2OvXr26bt06S0tLdXV1+Ob16tXT
1NQcOnQoNvr5+UH4FRQUiJM0JXL6WVZp1DDDMF8NZG6EFlhCmMORjGl8fPyl
S5cg7UaNGtWhQweIvdq1a6uqqpqbm8+aNcvd3f327duZmZklJSV0Tg4I8PXx
oSriPU1GmaiyQqzi3vOuKH0WFhbm5OTA6UiVgOT67NkzOCmhoaH3798PDw+P
iYlJTk7Gv7BPhoT0CjJEZEqg9ezsbNoBW7KysrDMz8+n2LaUUwQVihuAPqQ7
gXoUJigUj4F658sUZN7fQUpMVvWZWPV9ZVTzfZGoUBQjtd+6dcvV1dXa2hqF
dp06deTl5du0adO/f38HBwcPD4979+4hndPY3nKR0iMXg1Ufw3zdlL1dc1JW
MRMQlikpKadPn3Z0dBw0aFCLFi3q1q2LAgQr8CI3btx4/fp1GNmXL1+KI71X
rspgvnTeX0UI6UfoNSS0+AsjEMvfntRP8DXoWHI6SESRmoIVKy4uhriierlX
ErAFSgxy7vHjxzBhsHEBAQGXL18+deqUp6fn7t27t2zZAqu3d+9eb29vbL92
7Rp2gIdCe2J5586dAAm3RODnTQm0HfvTUQ8fPoR6LCoqwnVxdXH1IMAN0xbK
R6T9yiQVhtT5Suqpy0QxNIRXJ57iUKh4FLfrCTWZgvJ8/y/Fqu9roqrvK667
Q7EcFhaG9G9nZ6empgbVB2+9YcOG2traQ4cO3bx5MxI2/JqCggKp3jiUtFj4
MczXjTiDU4mRlpYWERFBks/U1FRVVbVmzZq1atXS1NQcOXIk7GlgYGBubq5g
4IRip0xUgfOJnob5h6leS0jZnWq+u1irlInaPYUtkDSQVUhXsEdQdPApnjx5
cv/+/aCgoLt3796XAI0HwQYVB4Hn4eEB+7V69eqlS5e6uLggrc6cOXPChAlI
olZWVkOGDMGKra3t3Llzf/nllyVLlixbtgxL7Inl8uXLl0lYLoK2ODs70w60
ZeXKlZs2bdq1a9fx48dPnjyJTHHhwoUrV67AbuKuQkJCcFdYhoeHP3/+PC4u
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
NAYEhQn+NXfu3L179169ehWpDskmPT0dCpA13hfEm3cNSxdn2Nzc3Pv37x84
cGDy5MkoSZAGqCdAkyZNjI2NZ8+e7e3tHRwcTMO9pc7JdoRhPgJCjkNhjpwI
I75r1y54anp6ejRiF9nWyMgIhh7bb9y4kZSUhN0qm4NP9wTMn0MN9zR+MyMj
IzIy8sqVK8eOHdu6dauLi8uMGTOGDRvWo0cPfX19GGiKuwVQXMNJ7969O/47
Z84c7Onq6url5XXhwgUIRShG6EZYbZxW6nLi8ryywBNbispjdVn1/SMIb17K
kv5RiTdvU/Z2R19xK7C4LVhopS0uLs7JyUlMTHz48CFcwlOnTu3evXvhwoU2
Njb9+/eHm4AkhDJEVlZWUVFRV1e3Z8+eI0eO/H/svXVYldkXtz9O2AoGGIgB
BgZ2d42KWNhid4yKndiFgV2o2IWI3d0oNiKCLSKgYjvO93pfPbz3j3Wxf4/n
AOM4Kjo8nz+4Dieec54da91rx9qDBg2aNWvWqlWrjh07duvWLZWeUZFnAhSZ
rk+TtlGpB7IkOCp6xO/x48dBQUEEksOGDXNwcMiZMyfxI8YE20IDaN26tbu7
O9j/5MmTBLsHXboSsVRuNFjuxo0bGzZs6NixY758+VKkSEE/xVbzmH66fPly
f39/zPuHmJRo2m2herT+3UpGZoA98CwiIuLevXunTp3auHHj+PHjibudnJyK
Fy9uZWWVNm1aScMo03PYZ1tb21KlSvEGPLiHh8fevXshPRw0beD169cygSve
X75IO8SnPXk2Km4n/iG2vHkifYb3X8poN/SnfMR0YFYtv9S+TRaEyJOG6JyK
MswrGbxpGDQSYgoshpubW+/evWG/YsWK0Zysra1lHxD4R9OC/eTM361btwYE
BISGhsqWH64ABH7Z0tD1BWXQHIijogAVL8iKEZoEgQDh4YQJEwgbzaKFQyGW
zJ49O1W/efNmwgRZ5Kn2d+jrOXXp+oISs6ztVtq4Hj9+5coVT0/PLl26FC1a
lB6aJEkSAIDH3bp1W7FixcWLF8GGBPrtuv5/xbX4Wfu8LNhTuycwwo8ePYLZ
1q9fP3XqVBwxVrdq1aolSpTAF+OIicSxxvzFI+fOnbtcuXKSTnny5Mk0CXjP
z8/vwYMH4eHhshJbrRXUrbQuU8FseHzsyYkTJ7Zt20bIQKv7448/GjZsaG9v
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
PD09iXwlVW+UZoDIoCdC/7ZSyUufP38Ov92/f//48eMrV64cPHhwzZo1qaws
WbII8hH/UpVdu3Z1c3PbvXv3jRs3nj17JiO0akGmGrKIKx+FPqCh6/uUilBU
VGK0vcLw8Sld2gREsumDIPfQoUPz58/v1asXfSdfvnyZM2dOly6dpaUl/ahs
2bLt2rWbM2cO/Yt3hoWF0d1k5ld9hU4R30ymc/eyXReMx7J5eXn179+/ZMmS
adOmpfrA+A4dOixatCggIIAq009q05U4ZbQGLEqT842/4eHhgMHQoUOJcwl7
f/rpp19//ZUeRD8aMGCAt7e3v78/mJFwP/8/K6NTQWOVoLV2mfq9e/dwWEuW
LBk9enSnTp3q1atXokQJQt2UKVNaWFgUKVLEyclp3LhxmzZtOnHixMWLF3Fb
cl7e178hXf9WCsK1TkpLL/LgU5BDcZF2TCxWOvqSN/CDiNDpwYMHFy5cOHLk
yIYNG0aOHEmvgf2IeVOkSAH+5cmTRw4lHDVq1KxZsySPJWZQm6vKYLKPWD0f
qxLiRv/jIpiVM+KHDBmCGYT6qDvqsXnz5nPnzgXaQ0NDjdJx63O+uhKDVEor
aecyORgVjRD0Gj8/P3d39zp16hDtJo2WJMDs3Lnz6tWrZWJXP+bma8hoOlVZ
JLVhUL1ThmRljGLv3r1ubm6tW7cuU6ZMjhw5MmTIgK1Lnz69TOm2bdt22rRp
+LJHjx7JvhvteKy+J/d7kKp3o4FWw8dpGJXEbfGkIAcfkb0GMlYfz9S89jrq
X+0vSeSOj2Kkj9y/f3///v3z5s1zdHSUnJYYQDMzM0LgggULwn4NGjQYOHAg
cIgxfPLkieR2lsMgDCYH0Kjt8Dr1fQPJCcuPHz/29vZu37597ty5kyRJgj0k
+MUSLlq0iLCXKpaN2NoPmlacLl3/MWmdC7ZOKO7Fixd0CrpGq1at4AfZvoHF
kx27a9euvXHjhjp9Qx8s+krS+mij9UjKKFELUNyZM2eolKFDh9avXz9//vxE
tfimLFmylCpVqm7duj169JgyZcr69et9fX0xg3F9l27ovit9SnIJgyYNhTyj
1lqoD6q17uojpoAn++7l38S8YlMOnVHlgzEE/Og1S5cuHTlypBztkS1btlSp
UiVPnjx16tQ5c+YsX758t27d5s+ff+jQoVu3br1+/VpdzaicjfLF6dT3DUSZ
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
1549e3b58uXFixdjKOzs7MzNzS0sLAoXLtypUyfiFDBDnyn4NzKar1H/yvGm
8gze9s6dO5s3bx43bhxeOGfOnMmTJ0+RIoWZmRmmo169eqNGjcJZw3uyUVdq
UB/r+yGk6l3GVf5PHFK5emQU972J4hrEi3VMz1RR0U3uzz//pL8TXHTp0gU2
KF++/JAhQ2CDe/fu8arkB5b949rvlQVm8ttijRx1fTMZTRZQLyEhIRgHDw+P
3r17gxnwRpo0afgLe/DMihUrTpw48fjx4w8x63PiWgGiU9+nKB5/Sl0AfocO
HRo2bBg9CwLPnDlzpUqVhg8fjm2Hz6WbfzBJcpvQ96Trv6a4WqlCPoJB2mT3
7t3t7e0zZcoEZlStWrVfv36rVq2CBp8/f87bJEGfrs+QQTO4J97cEDMpJn9x
xPjc7du3Dx48uHbt2unTp/8tWhiNChUqwN4LFiwghHzy5In4bnUFfZHVj6VY
Lbw8+c28rXgc2punpyfOaNKkSbt27QoICNCu5ZMHcU38qR9sOgGt6xtIGxHI
M2LGqURvb++hQ4c6ODjkypUrVapUgF+pUqXat28/derU48ePY0DU+XqG6GM7
BO9N15zoikdx+VPKU2K6R48e7d69e+DAgRC4paWltbV1rVq1Ro8eDQ3KsR3K
+McK3gl1X7r+S4onNqGhYv/37NkzatSoMmXKZMiQIVu2bMQm/fv337p1a2Bg
IMhn0E+R/kLSulE19hIZGXnjxo1t27bhgoFtTETSpEklVC9ZsmTXrl3Xrl0r
ufdVQob3euL9H0F/60kVPql1cYaYs3JUXCZja+9jsnYrZxHrYKDo/8Yh+ayM
1718+dLf3x8SOH/+/IMHD+jm2kME1LcbreUzmhnUPqk3xW8v7SQCluT169dY
EoJHSN7JycnGxiZt2rTm5uZFihRp2rSpu7v7iRMnwsLCwHsJG1Xlqmg0oW/o
x1A8/lREPw0JCfHx8enSpYsMpOTMmbNevXrTp08/ffo0Bl86teqSRldOiHvS
9V9TPK0UkDh16hRWwtHRkagEE0F4IjM+d+7c4VVtNmZd/1IGzSjKixcvHj58
eOnSJaz03Llze/bsWaFChcyZM6dIkQJbja1o1KgR0eKaNWtu3rwpO8VUXbyP
WW+v1873rPex5bgzmByVon2P4eN5N67w119/vXr1Ck/x+PHjiIiIp0+fPnv2
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
reCf3Br3JcsCQTho0MXFBThs3rw57Ofg4AD+UUq1a9fms6CvXErWJXKpxo0b
U4xw7/z58wHpvXv3ghlnz569cuUK1unBgwdUhDqZOtb60hWPVCPRFprRbCP/
YpcCAwMhDVdX11atWhGk0B5wCnXr1oVADhw4QABCHKranrp4gt3YDyUjJvkQ
vRFPjjukbZ85c4aID1tBcETASMzl5OREh8JTGO3g0xWXdOr7FNHYbt++jbvB
GVWtWlVGJwj0pk6divfB6aiBJkEOo1KNNX7RFY/kxKvLly/j8fGz+D4KHPea
JEkSHmBdR4wYsXPnzmvXrsHbfzukrx+W9C8Vz1jfX3/9BSaBHCdOnNi8efPS
pUvhmaFDhxIcgSh0FnwiOATaYZ/h9iJFisgULS/Vq1cP4Onbt+/o0aOpaB8f
HyjLz8/v0qVLkuAuKCiIB7LuTqZl4TF5EBkZifN9+/Yt7kA7Xmf4+EQ209ln
U58izUOQD3DCZXMjCxYsgPFk/0iNGjWAVRphgQIFiDjMzc1Tpkz566+//vzz
z+nTpwdi69SpA7Apps2cOTPvobnyACCEbPNGi0IA4SgQCkEmrCtWrMjFCR7b
tWvXs2dPvnHMmDEU4KpVq5YtWwbxwor8Bq5cuXJlfoCNjQ0/gK+oUqWKbE4h
9uEjs2fPJjiCiv39/Smi93HomzaaH1YGzbpig8nmAnlMU6FN0lbXr19Pa6cl
07apHVrCsGHDCBNoRX/++acQiz7K99lSUzaq9YaEhBAA0lPoQYRd9ER6Vrdu
3bAed+/eJfrTZ3j/Vjr1mUoNYnyISRT5+PFj6A7kkzztmHSsNyE84fbNmzcN
MQfyysf1dTWfqLganhyti7tfs2ZNhw4dCKIlPUuKFCmyZ88O8o0cOXLHjh10
f+1eaSWdrpXiX19qiFlC815zNK1654fYVkI+f/6cGEf+0vKDg4PPnz+/d+/e
FStWgCgQCPUFilBHcB1wQmeRvaslS5aUjastWrQACPv37w+3T548efHixfjN
o0ePXr16lWvKPgWVfDWu83DjoVAjotPSjrqgdgwwKmbJFjBJlEFkx70MHjwY
HIWsADa4Ds+SNGlSMI+/P0WL6OOXX37hQdasWXH0+P0JEya4urp27twZQsP7
p0qVSsgQ8Zi3gXy05Fy5cllYWPASn+UKxI85cuQoX758o0aNmjRp4uLigpFZ
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
aefPKXpZHun2rbbaCsDDHldffXXskfzaY4899ttvPzzzgAMOOPTQQzPTwBCM
FwlIypAd55133itf+crW6AxlkcXmpEw+uym1/kaOE/r5PX71q1+dpPZXC2V5
zMgnRuemYI+bb74ZbQAtRYy94YYb8vPc2k5OhvPL4S34pxfDIR3lagFKHcaR
Qvll+PznP3/9JGXKIad7oKhAscpxJRyVX+i34nZ1YjB/IC36wUJj29qIu/+L
SWqHuv1TyCSwAQ7lzzDvhQU4K382GnBpxbYQV2ltiCvQfecYYSH11FcdUcuR
cg6uYVri74EHHkiHmpkweb3neYYzNVPzg39K6JxeK5by6HN6a55eZNMDtavj
miUv6jcZCtFrXheKV/46UJcGvNtobu8+i+YWA/Ok3fLsIJIMh4tep1ZeVJl8
9Bm1TJL/8yRl3BE4zB65pUJ56j14VSH+hWmBw2yKW37MyEjKErkF6te+9rUd
nmyx1438/vX8Va96VS6AZEC3Ssuxtn9Nhxe+8IUdBE3fMVnM9MMPPxwkoy5R
o1p3wgGoTvCh6zbbbANnXnbZZS95yUuOPvpo0005CtefMxOMF3MojNo0k2md
weDqEE0jd8zcolHk5jQ7sulzNQqhZegxMBXkA0332WefN7zhDQYa8Bt7wZXv
Zp4efoNg77vvPkqZoTcEhfCDco888kiUhjJ12hzUl3r+FBHKyYUB6vBSE4TK
gyRo94cccgiCx13pmzNTW5PzlBgeLv26qKxOmHZCout0kdmHe+y6665EpyvN
giTy/GnUV5oGRSbdl770pde85jW77bYb/WK55Zbbc889r7rqKvwcX5qZ5yvw
je8IdXHddddh44cddhiGT58CqEgWyORHP/pRxFP+TDnGz+FT5d9YjUWftzdU
qOhLLrkE5DME4CgpsPnmm++7775w3Yte9KLzzz8/y4Wrr776D//wD0m3Ysh2
Zg+uIMqJe7I4v7tZyyq2U08diHLTilmHqUq3337717/+daIfsAnPJKDz5dtC
Wd50h4vdntxzzz33338/CQUwE4vjFBkI0V5ex8wghGx7g3CfmyQwsiOCBYqV
WoAKshYPImuCIFlH7FoIgtPIegCVRM6MRSKsg8Gd68sQtYOOZeje9ZRTTjnq
qKN23333nScJASxYsICIBxIuuuiirEuKP9uLnRK84IILDEGHADs96JrJTBav
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
35y08hdR4khSAzMZPumxFj2IidJMeKEqEdwkdSHLCD4nha6FIkq6CirAEvl7
Ll26tGUN0s0XiZ4SUeE8X/rSl77+9a8nmPKMhktDfZmEGTWidthTla0jiJXR
l1ICsmLzFqcaZsvCDRjIQK6sbeABAOORsl10BDMy6GqhMr9Rsh4GyOTvm9/8
Zng4sEEVMqYgjb6CWtUt8ObNPp0N5IjvMeBlLgxhzsJlF8C5z/WUos91OABm
yIClayalMCO5Euvkm2++GT2UYyXjtDdMys2T0oiMwN3DmTdf4wJ3j4hzKlDM
Q21HIePmsbWq2tlM4qKZhlIZ6hZU5FvIdYMNNhj2aUVOo7B4Zwt9qM6rfBGw
LOLxcFIuynH+IyWLye4uAJ9bR/GoDaIaoitV0plZG2ZdaXCNrHGBzEtYrBSb
MXL6m0nJe7dl5PzxS03iWUCuLH55rPipzoZvdOC73vUuP/WVLlJVrTAiULHZ
Z+oBeI4vf/nLL7jgAmqXOeIKLYmQza8HIKHptBa6YMECepMZaqZnXfyC5Rl5
mh3Yr/doPsg6FPNpztY5TKgVKuMT5DgYqUUF0lfyTRsbuP/yL/9CVXFzviSA
evnLisI6Rxc9WotQeXPTGIG+0Gw+HaaPqYpK11jhPrN8PSdQhwDAfhpWugYK
ROEUt5nVA+qvdNRHLc2UkcKFJMwOkx0bn7UYvgaWOratfxoTtZcySw/dcccd
HRHJ448/PsxL5lCZhfpaYfvyl79MoFx00UU5Huavqr0lspy+eWZlm4IsW24/
iSdjUJlhY9Qj1F6+G1tuueUWW2yB55e3nRAhSkhPcA71QlnlFyBAiaeClhCC
5aTQFoLeCZQILmodsQL1ecnVV19NSMEepCR5B8YbVliXWIEtE9bz5s0jxR58
8EEA7HOf+xwBAXFl80+yeCq56aTNYufFfin8GlJxUiTkgtH5150eJ0N9HbfB
k0viQMxpYBGBfOsb3/hG+jgB5LuFtutDSrZkwyQvGZ3nQs4FZRArY0Vptorp
p5LehqTL0lXKiQceeODOO+/MU6McEJ4aXg+VEVrHp71BXxVGA8ZzXpBkCuOy
5Xm9dZrGfvjDH1bbj03KbZNSDXt5q0NKGXVzRSlvby4YI9luySZaYsqNRQ1H
AOo/+ZM/8WZNaD+63eG77767Pi/Q9F3Li3+L+1cQ6RFKenqL2fn9999f6MKi
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
VUQ627+8aUVUJirjKV2nA1W1KcT0b57RZ5111pvf/Gbi9OMf/3ieIE7+alLK
ogVYgmH+8nKD4v1f+tKXwLAHHnhgOorLMvhxadJpuGbMTDSUc4bq7bffTqF/
6EMfqovUByDxLaQOAFx77bXQ0R/90R+VPEKVisKXF0OOD1U47FSot8KJNBuW
c0qh6oCuXGDc/JGPfGQswhb/xIe8ECAJfXkz+FRg51JyjHQbJeNoobA5KL1X
Egqf9omRps2JlwAt+QuH+kKDbnMz3GIc3zMp03jGRehRDb1WlXq/n64XThBI
Bjg93sWoC6UhGDi5UN4tTF955ZVuaB7Sm1UDcjCgRMeZZ54J0ozI5Eubqpr2
7Y2WRpmDbcaVSrYGIkR7QBGewtqsoaB4c7Dvete7BkcUITnH3qZk8QheaI0V
owGNjpgOGceA2A2XaWw7Fd0PwLftUPESr/LCUhh7T+u2Gp7fhzcwEEBBphaT
rXDrL37xi3tPBlHnjs0hexyscn+T/I6sOaIDLNTM0VfT+Hl0bFiahFE3FNXk
+aNuzolTjBRa1ZxTJ8UI4otHZnf1z0F9rqM6ZKBz1OfII490PzNhToDNZTPv
CiyPTOXc1CfQHa7UdgYy4iF70QNOh5ZXxe1MP31ZhkFt3Nmzhx9++KJFizAX
wYJy5sjelWTcm80mQulHwmfPPffEkuQSA2fEL5qZCkm9ouu7Asojs3sag8FY
nhAjOYkXCIHAwQXf+ta3lj0Js7KVIaM6Pvzww+z99773vYRnS0VHH300dYzr
l7t5Ms0IUB+JShHstttuFFOxkSmpEu+2XpOO85dasffdSZyqXku9559/PqQ3
VkuLRPGqV73qpS99KR3h/C1veQttXjgyiILqv+mmmyhceADG8BcNAmE2PeLT
PgFSnnbaaW0gT7s1bZXWq/hJW9GGlJ1+K5Ya4Pfggw/CSyB0EQgPPfTQbbfd
dvjwFtPbU8AJNFXEWjZXiSqacoHBirlRnEAG40MPPdQiwrTW+InR+MCNxWcw
9HfeeSfspAklXAC38jS555577r33XkdVgqxCpDBYLjD5zBbPJBfacbEka1px
+6SUabe4IoVA6YZGIYyn99yDjwp1mDPvSNpbeBw35P1RVBalxG1NvunP5vQg
OgLNU+0iA/OK112wOz9BUK91BEdh7/AYzNNsZFk/wHKgyBH9+AkUORa6pGyz
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
MpR4wVgMRqhv/p789CmJClprLBZdvny5r2jLCJWzTpU1zOpoBWNEw7EHhIyF
IF6jRrva2fJ4130dLd/73vcYUzTUNttsc/jhhxtHeB4/zPyoo/ejWgcS1bA9
4ogjnvKUp+i4iy66iGAfW9fq4vU9OKeUhQehDPMMyXJz0G5jru+RLIY+9oXO
JYf/y3/5LxdeeCFOgFuwJXCytlDfHCTsDezBz372s4DQc5/7XLpsGmI5J4pJ
Xfhzm0lBZAp06623ZlHuu+++y5Yty88iS/m4SSHqqcXnT4rKe21Z20jjZrre
9KY3adFf/uVfAjPUCiRQPH+CGvwreSiVPaz++XulxtzINDqds5pGC8Ol3oYf
6Kmbb74ZLCnYRU67zdeV4IDyKvFZ83jNlrjekrSB2SKsExfRinYo92u5YrWF
rU3w/vVf/3UOICAZxe1n04AhPeVDH/rQcB1VnyIhK0hBCzsZwXUDaanj4ipr
gqe83+Mf+9jHPO4p2CDEOEr78F2EIVsW/Kd/+qd26d9xxx1QXy4h+YPcc889
BXkuwcdIL1LOU4+H+txJHvpXhRFEN5VbdoMNNli6dCmNH7T2Nt9VSTgBbaE1
gASc08UY4LJJAfAKJEhJATBtBgPOSxbmBqhv5cqVoRo0L6YK+vuJ4HoE8HDR
R3Uu5mwn6gjtu2hqwbTyb6bKtIt6N0OD22677bnnnqs+pV3TlUVf/MY3vvGt
Sfn+pKAhvQCmFpW6sJaLZp04Fq3RV/ehAD81obWhWdWA9nXfJz/5SSBTxcBm
hEKu1m2vvfbazt88KcXJxIr53jZ9V9S+973vfZkYmBNfxWw6EQjMbTkP9L+c
lHzS2wKqB3MZzmzJhGnstEkDni/UNiCqQy+++GKojyg4cVJ0DU1KPoDlQHVT
9yjWBP6c5rd7ZL7HR/TUZXvuuadBF36b3pg3H/WBOqyDM88884ADDlCHMtLO
zJvpmkZ9VP+v/dqvHXjggR7BYxTxOqgvVof6il6ojYSDjsA/ZDVZigj6cU5u
2XWwXY9joWoJVTKHntX1qYkw/2OG+ohcI8jXqdS99trrJS95iaE33FTH/OSj
WoeFVZqndSS+oI6yx05nZBsdt4C4nXKhPbEfY1mLqFQ6kZW9tlBfdsTYLYAy
999/P/BAjANpO++880B9QT70xJPEOCwHWtN3xOPxxx9vsNBE9A65WvICR1qm
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
kAsXrQ7yDdSH4XU3GwGJjAh9YcgvCNQ3WlHcWlTSF3oBiMU/bL3p6ZHHu7Lr
XImLmuujRMB+bHDttdcSoT/4wQ/WIlSeg/oUEphs0V+HHXaYocSCI67Xyrd+
skucrJCTAAY5Q/AudNRHppFa5Dwt04YfUvcP//AP1xbqm36w47333su8hZF8
awQ9m6+wSGw69IADDmBOFmSPUD3//PNbxlXgN6KmDLxnn302vUBxUB9tjSsa
c2Hr6F83eJz6KMQEFXbdddc1WdH+pQJ6gBbNCKEAZPInf/In73//++m1t771
rf4q6XyxJui+clLkgpovalkJHNGzCZNPfOIT733ve+m7/fffv91Hcxo7fATA
QthShana5p3grqI3t6hKt5ZNuGkZ5219L95F4ctaaKatfLR7jPQAs/ZWQ7eV
x8R5y9ZuKwSuT//ubHHRG0bCiICBhhcnp7VpnE9NIwiKtbYb3T7wgQ/kJdEu
L83RENqtqaR8bcrX5icKu7+UH0V7K2OyKlWH4R3QejFdg6oj5kw5fz/5yU+W
QbhpwwJfG6fuVA33OHFz2Di07LxJziIVU9b33XcfmOor+AdzQg4jy96iWS+A
0WXz0YJOBEVANcyGVYobjMI6BZ5p+xwGPv3005kk3u/mEaL8SU96Enni2bjd
6GBKYGy2T/bCNCZZZdy/NaC+cQJqgkyGScvfKoYzc7O9ZLYYQQBq3FIqw7yw
2wCAvcFmHJj3DWr/3d/9XbvymitGTxTWBRig5Ln1COKX109HFJm8qJWFJHKu
j8rg7BFvjgkhSRySixPwqQ6ql4fXkUceiYxOjj/+eDYa8ZUH/XbbbQcH7rDD
DrvvvnvJdjV5m2220Zv12pr39Q1vDi80ptQzn9zVoT7/jhXe4vV1/xpQH7yE
1XUuaxRXGC/tHhy7aNblHXFDKaiw8UXYMlc1RBfgdvB1uhWPa03XxVK34hC0
MtKNdwxMPuP/UN/aSuc6B/XNTPJhGdf5Q9EyrLZpF9T1ZQ2lbIkkVdzO4l7o
qO873/kOuT3i9e25556g0VpHfQ9MbQ70RVreV5YtW8YMn9aq07KXamOhw34E
ONF9xBFH5MNLyLeMm+R3/ZhjjjnzzDNJ3auuuqqc7E3vOC9ZG6DSivBLX/pS
5/kb0l/0MnFNrUAUFFn7xhWo44Mf/CCB36YvUp18a8dRcYDLQFEoOaisnUtt
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
i5kEGEQAD0Q02Y1UaXMLzVdKjkaHhMpMUc1PO+00Xa05oFpeVJttttlQuIyF
n863m5UM/AqTaHKNtDt55iouNoXHTATax+xu1j9+Vpr74GI7+NO4LmOfd/vt
t0c2JoJOyDgh9jJ2ZnNHQt4Gi75AU9DeUhi0vVv6qofmV2hJrxo7+iBVkXg1
QInvKStbhOXB0AUKxzcuvPBCJKrnMVhI24gjvzZ3BpNftE1bVGUI/bl5C09U
R66ZYjgA8gYSsDuER3bkZr6KqK+Yt/R6rJICBViS3cQojh3qW+uGs9JlDMTg
DMaURCAISl9I9aPMAgy4ilEeEVYXOepbPnFPizGSjIWiIlWxWRyYJo6KUOmD
ucWtXFkApH0axyb1SHnslO6/7azssssuiJlw32OPPZYsWbL7rOy4446EDtHw
YMHBcu5T/4yInva0p+UDuOJCQS6fhfVzm5eTa8axRT/ij3QAXUrKRnoCVOXP
BaVKsdHiVbHXAksfm5XwkhM3tKKVL2rmcwVGGxAin4tgm/tL1jBN0etVoFpG
+xBaq09tX7bMWLyOwr+oJ7FeeN7f//3fLwtJ/iClV8uWrH9Lc+bmlijbcGwV
scxrhQdp/SfLOvikNB+FLIZ8rrzySupPWTmCNJl+ZfNmUvjLDYW1GYmMf+3X
fg0CNOKXXHIJXRUgBPBgRRClzHcFHmkLOycOFy+++GKgwnQDCQAM7BTKKj8y
QKhnCCzQDkzKfUOPgXym6le/+tXCEga/cUsgECaHlIoo2E4lyW6IC7BsvDzo
Kf8asga0MdX/Kgk4aa+jT4dmNZAYbRH47LPPzl3CxRHgWus82+5wMK+lWu8s
RUvEY+gz1zTuKqA5sOgDriaZQVqqFdFG3sqKB73WoGfCl+3ByErTaBrZYXRq
mueOXTAiUNCwtunsPCNJ2BXmycSidXj8ociWJumYqmZusBCQmIZYaUN2xQk7
ihtaEnzsYx/rZIrxpqFdxjuDkSqDzIA6XYSTTG352t6lVOpAGPiVr3xlIBxp
ffOb3wTpY2vL5zeFH6wUeM3A6R/QCM4EjHX1NBZuxiqLk88/YKHa6BNzh3YP
eGcbabYiniL1jbIWPDz8MhZ+9TCSoG7jBnQNAmiLLbbApkx8+hqaXDnUt3wS
ucVXDCLFFv0TXoDlnnvuiRFhKZkuLNr15zWlLJ9s1+rzQvGYNS9/+cuBCvgB
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
ZWBsU7G+g8/f9ra3GWJYi83icxdccIFPz0zWWeYL6lvYEK5ZyFWVPe+88448
8khWWF7eBAtr4qSTTmq1aGbSJsv1+zKlhVEf9c1+wXhQn8FOfOH26cwyo0eW
OuobL2yy5c477/T1rbbainghvYkpQqyNFvPOZeCPgxJo5Nu3vvUt6oOiJy2N
3JwdKJ0WROY76hvUYsTJJ5/8P/7H/yhhB4BBO1Ac1Og555yTaphT04GQl25h
FtzVN9DooNnpiPJkQWhwHU2UwybF9OhHP3rNCdFQzhW7Ncd11123BUcQoqW0
EBqNTF/nWxE4bOs7LKfukB51/5d/+ZfEgvfk6zEUfYm0XMwXMozkzW2domHL
5tAj7ikpcOdatb/aKdrbygNbWI8x8/N/LobCYyVcCH54ocI0CwcgveENb8Cu
/+t//a8PfOADH/nIRzTai170osc//vE+N1DfIoHf4uKEBGAUUjNqnJ133pkR
1GomnAaJtbraYvQnPvGJT07IGGml9dOf/vTHPvax97///YrU3kWQTAk9WCCa
t7/97Y4vfelLoRSgWo3yMNVueq1wLmoHjUNiTbJ5EE9+9KMf/cxnPkNsFsCw
eIbAnrK1rKzipe3AJ/o0DI9tiqvjbb7YLC60784S9hVSmzpos6iBj8EYFOH/
YQjgljK1jb/cVi6PESyo6CiOGKCVcb0MQi85BN89oTLrQZVY19DAEkwAfRfI
jH/wnqppKGMKims7E0EXAhnR817zmtdoFtVUOx0NpH3ve9+75ZZbxqj8XcHY
gqnNM+TJP/zDP5AtBUyjhS+66CKGZ6tsxvs8Qn3TpRrTBQWCYIa8/OUvxzNG
K8ZW3+OPP/673/1uAVuG4li+j2vZ0RzUd+2117IxDzroICLRGCEiTjnllLyH
Rj8uu36Zg/pw++c//3mCqJ0YpM3HP/7xLILlqO/epOmuz/IF8I466iimMRRB
ehfUUWf99Kc/nfljQX0LJhESCr9PTdObJFUzG4973ONe8IIX0K1lVx/Rm6ef
XbpzfQtmM0BlczkBsE844YQDDzyQ9tcLBUJpamW1CTUPU7zl0pjmbws2AH4g
nPPi0+a9SC8DS63z5r7RPJ4TP9tbru5NmzT19GdT1HUv8SqgyL/FXis6dHGk
t7wrwQYhTEMbQgAy8zJ2DEg4KSfynACDiyQfpURyuGg+84ADDgB+vvrVr557
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
3C8FhTNvbCqb5htFgu2+tIcT3YRmB1cZMWIEnH+zZs3A9zp06DBgwABQGvA9
OrpOpW0qYmqy70QJ7Ykuphtn+9tpKRzWAhrQokULmJmsrGzfvn13794NO4Fh
SEwBVURW8J34WzusoKDUSXBZkJaQh/Ah6OhBgwaB0tMsbkVnROQc4Mog66B2
KadW165doc1hw+AJTLZU6NusmpBei4FTQhTz8/MbPnw4QiQkjIqKio2NzcKF
C0+dOoWglpubS29mFZSq4H4/Qr64dC+GeUxMTGBg4KJFi5ydnQ0MDBqJAQaI
+PjHH39gpNy4cePp06eIoWA+LDhKHG/MF2TyL5/7+XEU59UJ3zO3KZI6OVLk
D9ExalA4NDXcTkwxoLk10EWWFhgfRLODn8ycOdPS0hIuGqIVTkxfX19bW5sK
7FJFYDokUrduXTjwfv36odeOHDly4MABUM0TJ06cP3+e8uYRwSOOB4KK4UBr
mkX6eVohFaZiK/0+KAol90gJwfcvca1YeHtIlUuXLuH2FyxY4OTkBEumSnb2
9vagwWC/+C+4+vv374WlCSsrSjBy4bRtvvjQLoQzdMHIkSNhbNCAioqKnTt3
Xrp0KSgBVAxt+SiQ2jNcKVFZWR/6GpZ/7969KVOmQAeB1RsaGk6bNi0qKopW
xCr6PZLLgnrdv39///79aZUE9wgveu7cOWg9MmPRvztBGUeRoLk7Yd9RTlGE
th07dkC8IDhSHj8Q/jlz5pw9ezYhIUFYe1pUGSun/y0ktieBYCAChoeHb9++
ffz48e3atUOjgT+AYIBaODg4zJgxA9o/JCQErQe3ICqqNFtFbMa/ZRcS7xeu
/xa5oCkBto6AJ1CXICSgc7DPD8UDzUsHqMk+37x5c/PmzY0bN/bq1UtVVRUS
Rk9Pr3fv3lOnTnV3dx89erStrS3iMh0NpmTROjo68+bNu3z5Mkjdy5cv8Qga
CQf4Xgz6FXqel5dXwgHbIv1h2US9EvpF+teZNdKJfljyhQsXVq9ejYgG06XS
xmg3U1NTV1dX6MErV66AXYPAoJ2F20UqeqQrAcW1p3BPO+1uhbjbs2fPkCFD
MPCp4oyZmRmGP2IlWkxi92b53VAZobh2K+/r+ll8/vwZog+q0MXFpWnTplCO
UEa+vr54UaIEW0Wc9CPDxmNGRkZwcDAiGi38qampDRs2DOYN8Uu3Wbq54jnK
Boy2UYikFykTERSrsFA4DLtHjx6enp7nz58nh0/LOuV7/eUFttLNRjSI39u3
b+HzKakFOAYIM+gE2+cPprF48eLAwMDbt29DK2VnZws5g0QUqCje8m+vUzpK
FplwuMjvZGuOwo+wZONFgiRqQeHqeW5uLiifj49Pnz590AuQ5LR0C/988uRJ
WPKBAwc8PDysrKzQU3XEaN26tY2NDd4QExNDh1aohDqlnmOzdrQAyhKYC6+Z
4d/J+oRhiDUv6DQMEnwPox6xDG3i7OwMmqepqamhoWFkZAR7hsyH8IfDp2M7
5DpYxbGCCjVH/aMorj3ZveeLc59iXB88eHDy5Mm6uroY+KB87du3d3NzO3z4
8LNnz2gHtajwOHNVcJ5/6x/+5Sju+rOysq5evbpmzRpLS0sFBQV0NyQSXEpK
Sgo740bfUBE7mu1FgU+AACQPSafkevbsuXbt2sjISFZ+tLwvluOfQyTIFEqd
jh6Piorat2/foEGDlJSUGjRooKqqam9vv3Tp0vDwcKqyJPqW+VRBiL4tTwOa
kZSUdOPGjb1790LgW1tbt2rVis6Wgk5YWFgMHjwYr2/atOnixYsIBMQlhN8j
EiTA/Pd7y7+9TpGAtpXxTgCKwjt27IAMh0qFAaMLQPlAvGHYtJMQ2vzSpUvQ
MlRGk6qj9u/fH2wQ/xX9XcXJv+2U8uq44vpFouwXdQ1ehNHeuXPn0KFDECYD
Bw7s1KmTjhjdu3cfPnw42sff3//KlStgwpA2jDeKCucEyvjuyh5/2560N+b4
8eNjxoyhxLYtWrTAeMdgDw4Oxkh///49tVXVoXwFlZf1vXz5EuJo1qxZUJFw
79I5W5gPr4jbn5hxfvjwATIQLhRhS1lZuVGjRpRtEndKc338LFJFhHAAsujM
eEheXt7jx4/Xr1/frVs3RUVFGRkZyuXi5+f34MEDMBxRRduHVuoQfXsmmtIX
Y7CAb5w6dQoqycHBAUqwadOm0ErwD40bN9bS0urduzfIc1BQUFxc3OvXr9GS
oH/CeYPiUH43WjR+1KszssH4Bs2kib49AswOFDBmIkFUioOocFEY7Qled/bs
2cmTJ4Py1a5dG8TbzMzM19eX6ibTOQs8pqamgoEvWbKENi1ramr269dv//79
eBt8msSmNeEmPeGlCm9QeCMSE5u/sCeKaucSuiZffMI6JycnPT0dIezkyZMb
Nmz4448/0ESURNHQ0BC6fuHChXv27Ll7925aWhqsmhKzCHVKBYrgP4OSGxMG
TDU40FygARjstWrVMjIymjZtGo3xT58+iQTzq8Jv/neO69LCj/qHfxuK88NQ
i/AkQ4YMoa2bdnZ2mzdvhpZ89+4drUSwhDwVNDiKCtN6wD2GhYXNnDkTdwpR
DAIAUQyrhsHnC3IRcFQgsKhEg1EYPekNkPY3btxYsWIFVD/UK6hL27ZtBw0a
tG3btsjISGG9tioFoe8SCYoOsGr1lOLs6tWraCjEAmilLl26IJ42aNAAXgIj
CI4CQXbZsmXbt28HOUFjYnwhqrJlzUrJ+soMoCh37tyBYHF0dIRE/e2338C3
nZycgoODabs1q42ONk9OTj5z5gw0LDhPu3btoGvQa7GxscT6fsZ7M75Xxs1S
AuvD9cCZZ2VlPX369Pz585REEabYo0cP3DtGt4GBAQY7GAsCWUhICN4GDy8x
zEXfnsEpe1pbxijZzkGJIRy8vb0xqCEc4CRVVFQw5Pft24fWe//+fX5hxkKJ
r80XnOivlPjX+ofvRHF+GARv9uzZpqamCgoKcC8jRow4ffo0zIAW8fMF59kr
KOtj4xraEJ5w+fLlOjo60DKysrLm5uZwjxkZGbTLpbyvlOMfQnoYEnuBxcKM
wUZCQ0Pnzp0L3iInJ0erYAgThw4diomJqZpJ/KTBZvxEhYs4aENofNorBXHk
5eXVp08fPT09kGc65Nu0aVMEWUTY6dOn79y5E+z61atX+AhtmKxMrI+9Lpz7
EtKG4iBM+JYvSCpSwiXR22C0aPPJkycbGxvXrVsXzgpNPWbMmEuXLsGP4TuF
u5Hz8vLi4uL279/v6uqKwA1R4+fnBzkvvH6JergiqUly4b38bYv9YDP/MIpr
T9w7DCw9Pf3BgwcYvyC6Dg4OoHktW7Zs0qSJsrIyHdkAgTl37hzahGqrFXx7
WI/ZufDnfvUdlS+Ka0+aMQ4PD1+wYIGtrS0asF69eoqKiqDQCJR3796FLmbt
xtJxs4Es3E1dKfGd/uFfi+L8MHocwwSjplq1ahg47u7uERERtNGXPvhLN7uW
QauyyZ988dYF6JdevXrBsBH9EcKWLVuG0E/rUxWoNzlKBtuCAksG8QN1CQ4O
XrhwoaWlJeiKvLx8586dp06dihdfv37NDnELd7mU9x2UD4QunagC1TB99OhR
SEjIpk2b3NzcnJ2dO3XqpKam1kQMcL/27dtDLYIWHj58+M6dOxhQoH/4lEh8
MFBikZG1M1thrNzTLD8ExrtSUlJ27do1YMAATU1NsD5YrKGhISw2LCyM+B5r
1XzxOsXbt29v3brl6+s7Z86cGTNmHDhwIDExkd4gbNu/BGc2f4WRF+fPS/Dz
wicSQw/3yKIPRjHuMSEhAQoOEgN+e9y4cVZWVlBwCF6qqqowQhcXF4i7PXv2
3Lx5Ew0IfljqN/gvR3HtLNGwNO7wOsbp9evXfXx8QPMwlmvUqAFNZ25uvnTp
UkpwSgvi9CWVm+BVVrCDe2QD8OdpaWnHjh2DhIeWlJGRMTIyWrVq1cuXL1lC
jF/KxwrKlvUViNdNYMxwF3ChMPI2bdrAkUI+ox3Y3n6OygRR4fo+hP/58+cX
LVrUpUsXmqfq0KEDYgScHrQAYorEkd78KrnoL0HAiDb/KQZibnx8/I0bNwIC
AhAUaFqpdevWCgoKGEpt27ZFw+JF/MvPzw90Oioq6v3791T4jA6Tggd+z4+y
F6ss9wZAWrZt2wZ92qpVK1qYMDAwAOWGuVLwRY/8JTiTi7aNjY09e/bs/v37
9+7de/HixfT0dLQqpZiGbdNh3l+deePHOJ9UnR0GOiUkKpx2xt0lJSWB1qJN
pk+fbmtrq62tDbKnrKyMJ2ZmZsOHD583bx4UPfge6C5tTyr1u/v3o+R4ShP4
NLJgEmDFGM4QazY2NiDPtHcX5HnUqFGnTp2CdpNO4lEe98TxUxDO2pE8fPr0
6Zo1a8Dt0d0Qlf3794fTQBAsYZyW7iWVMesDtYPrgE50cHCAO4WugZqGk4yO
jv748SPXMpUM+YLsE/Byb968OXfu3KxZs8D3mophZWUFlgLhk5CQgOEgMZtd
NQOHBESCDCS05pucnBwWFob4Cwo9ePBgS0tLXV1dCChVVVVjY+OePXv269fP
3d19y5YtV65coQITaHkMvYLCJSHhVkzRtzushL9bNccjNcLr16/RgODVzZs3
r1u3Lqg1hOqUKVPQpGBECMcgddCq0DKgQ9DpaGTKS3zy5MmgoCCwPjpog9df
vHiRnZ2NT4kK13kL/k2sj0C6gJXY+KswfQ0sB84ZXO7QoUMrVqwYNGgQ7E1d
XR2UD3zP2tp69OjRixcvpuqBrLBalUXJ8VTY47ANtKq3t7e9vT1UsJycHMav
hYUFlAUCImyGbX1hX1I1x2NFx1+CTLZwwhgjoaGhkE46Ojro965du0IunT9/
Pisrq4RxWrqXVAa/ItyvgruOioravn37kCFDqOIw/OqqVavu3LlTRZK0VynQ
fB2LIOh9hELERHCSLl26gPMrKyvD7P/444/Dhw/fv3+fajNx5yYN4ahEE4FF
xMbG3rt379SpU1u3bvXw8Bg1alT37t1NTU3btWsH/WhkZIRoMnbsWPxr06ZN
Z86cQct/+PChuBVG6WM4VRNMp4DR7dixw9HRsXXr1g0aNICnQpNOmjQpJCQE
jf/q1asbN27g+TExjh49evDgQZrlAxtfv369n59fQEAArHrfvn3BwcHh4eGJ
iYk5OTnscIewQ0uxzb+L6hXl5/O/TQ9I+gLXfOHChY0bN4LuQk2YmJhAXGho
aMDGINsnTpy4bt26EydOUPW6lJQU2lRA/ITSXJfWfVUUFNfOtI+Czawi2IEk
L1u2zNbW1sDAAJ6Qslp5eXlBLzx//pyl4mQb+US8ikHFRL5gtzaGP/xwYGAg
BhS8NLxK79694Z9v375NhdjKgI+Vza/89W36cXgShCq663r16sGX4jl8C+Uj
KsXf5fhXgaaq4M0SEhJg9ggZ6HpZWVnoHaiekSNHwvgfPnxIFfqqsiXQAJRe
dSX/z4gZ/QkiER8ff/PmTRCMJUuWuLq6WllZITS3atUKqkpPT8/S0nLQoEGQ
k7t374aipAkofOrjx4+0mZbWHQqK2tZVBZFfmG0yPT0dRG7o0KFt27atX78+
DBWNCdZ3+fJlmCi5btChtWvXIlLPmDED/5o2bdqsWbPc3NxGjx49depUDzHm
z58PVXvo0CGwRLg+2LZw36bEk5/HD5K+b+rn0r1jhGZkZOBSr1+/7u/vv3Ll
ShhV+/btIdCaN28Oyte5c2c0C4wNtPbBgwdZWVm0CYGWsCXO2pTWfVUUlBxP
0doYd2heKNzVq1f36dNHXl6+SZMmWlpaTk5OPj4+aPPMzEzSX+wLy+9uOEoB
ZADkVWAAT548gU7/448/4KWbNm06fPhw6CYMN9p+UwZ8rAx+hWKT8BVEnKio
KG9vbwjGGjVq4MahcaCR4UtL60c5yh1UWlT6dYgdmHd0dPS+ffvGjh2LkFpL
DG1t7WHDhh04cADxlErNVk13R6NPesmV1uBogx9Nn7L/oj0ReZ8/f46QERQU
tGHDBnd3dwQUU1NTOJaWLVsiUnfq1MnZ2XncuHGILPv37w8LC0MXvHnzhmbX
RVL0sspO+okK+TaC79mzZ+fOnQuSIyMjU716dbDoMWPGgPXRIjs1Nd4watQo
eDAzMzM0MtrcxMTE0NDQwsLCxcUFWgZscNGiRX5+fpC6kZGRLKt2gaDZS5Ed
/RDlE4nPkAoVFqwLAejatWu7du0Cle3Vq1eXLl309fVbt26Nxx49euB2QGIR
p8BbXr58KbFTVNqQSuu+KgpKaGr6L1WrBJ1GuNfU1IRdwfshFC5duvTu3buU
u174PRJfXj53xfETIJfCipDevn0bDsHc3Lxx48YtWrSYPn06hhKsgvZw/mo+
xi7pV/+KhJej0pbQ0TY2NnXq1IFHNTAwgPBJS0vjVl1pwGrs0p/MqOjMDoyc
So+NHj0aAaV27drQvAgroCWBgYHPnj3Lzs6W2MlcRfD941FUuERLTQ0qCDYC
SYVYjPDh6+vr5ubWvXt3XV3d5s2by8nJNWrUqFWrVpTlDyEGOuvKlSsvXrxA
4KbPsrMzNCtbNadbWVPn5uY+ePAArTR48GD4599//x36FCwIjgueKjU19caN
GyBy69evh992dHQ0MjJCO9erVw8+TVZWFlZtbW0Nlujh4bF27dpt27YFBwff
u3ePKpFJ/FY5sj5RYf49DEloB2iu06dPr1mzpl+/fqAiTZo0wb2D7oLNwmwg
GU6ePAnN/vbtW9rcCDuBcIBMkxAp+YU5tEvrvioKimtkDC4qufj48WOY0JQp
Uzp27AiLQtzX09OD/j137hz+y3J3iL7N8CMq3IFZ3vfH8WMQCWR7gfiQFLQk
5WxRUFAA8/H29oYTpnGUX3wSqlK/ql/9K6LCBSkWVuAlYOTOzs648fr162tp
aXl5eSUlJVEGD45KhvzCPGksutFmeDjATZs22dvbQ/NC8NJy/4wZM44fP/7k
yRMQvyo4VyANkaC6BHMLLKqKxKsGwgFLeXKgH9GM4CSzZs1ycXHR1tYG8QMh
UVRUBA+0srLCi9OmTQMbuXDhwq1bt0BjWDLYAkEhxaoGFljRjCkpKVevXp09
e7a6unqNGjXA5Tp06LBs2bKHDx8mJydHR0fDStF0Bw4coLrJbdq0qV69Ovhh
gwYNwLfd3d3pjMPNmzevXbuGHnn16hW+Vnq3WzmyvszMTDje27dvg875+/tv
2LBh/PjxXbt2NTc3NzY2BvGztbUF31u+fPnhw4fRGomJiZSPBbYHGiM0GOHt
VNk0XCXEUzi08PBweLxhw4ahYaELoMI6deo0ceLEI0eOxMfHwzbK+/I5ShnC
HJUi8XRHQEAAQh7YvoqKCp7ARdCOPpJIZcP6fjXypfKREq2F/U+aNKlt27aI
9dCScJvwjR8+fKAlJ6KIdL9c4FQ+kBlQirMVK1aAgSgrK9cXA/6Q6hDFxMQw
4kfrm/RZVs6pEoyOn0dx7YDQ/O7dOwR08I0tW7aMHTu2c+fO8DONGjVq3Lgx
TTKACsLtUFXfkJCQhISEvLw8hB48FjfoJNi7qHDxgraHFRSzMlXhgDsi6Z2W
lobGsbS0lJeXB2emiglbt2598OABjBM+/M2bN7GxscHBwTNnzjQzMwMzhEOD
ipk/f/7ly5dh4fBpeKSNlCWcViuuH4WnrYXvlP6s9PeQNKDDufRfShgCQHbl
5uaC6j969Oj06dNQB+Coffv2NTExAcWlyb0BAwaA8a5btw6DMTIyEndKukCo
Pn5N81cAlOx/8gW5lEViXYY/nz17tnbt2t69e+vo6ECCQX/BrtDCR48ehRxg
uyJFv+ZwN0e5IL+wqAo9SU9P37hxIxwF9T4iHe0YqWQ5yopkfbhH6GU4Rtx+
w4YNEYBGjRoF43/+/DntaigQBPcquExQuSEqXLxA6ElOTkbQgTPs37+/kZER
Yis4CfTv5MmT/f3979+/T4kc2QFDkXitpMxmwv/9KLkdqKzb9evXd+/evXDh
wgkTJvTo0aNr166GhoaqqqotW7aE7ILzcXZ2xmD08/M7efIk3vzkyZPMzExW
CFLit+h5vlQ1W+njJxUXbHUSBPj8+fMgxu3btwdhhipB040ePXr79u2g0+BC
COU3btwAMxw6dChN4HTs2BFvQEu+ePGCQv/3FAT5fnuWeF1UVLEPadAFfPny
BT0bHx9/584djLv9+/d7eXnBKpycnLp169alSxfamgiTcHNzW7NmzbFjx6DL
IAfAXYXxi7O+4vqLHY1hrA9eDpz/6dOnR44cGTlypK6uLsYdbQAA5QOjBvGm
s8/CAs3lfX8cpQPWlXCnEE0REREeHh6IdMrKyi4uLj4+PngFAa6SnXaXcA5s
ZgDeEqS3X79+rVq1AvGztbVdsWJFWFgYBgiTSAWCSkYclQMS4Qwu8fXr14ie
u3btGjdunLa2toyMTJ06dbS0tMaMGbNz506Ep+zsbOE3sDwGnPUVfAdbwPCB
twH3A5e7d+8eOMzevXsXLFgwcOBARHlwGDS1urq6jo4Own3fvn1nzZq1Y8cO
cD/0C2UYZqfPmCAVntOUYCBlff+/BiKB2KScA9OnTzcxMYFxysrKwkrBk9GG
GzZsQGPCdQ8bNgy0EBS6c+fO7u7uIEupqalMwBJKnsD5TnsWFc7gFfdxYnes
6go5W6qPk5ubm5SUdPXqVUgAhB5cs52dHV02bAC9j5sCA1yyZImvr29oaOjj
x4/fvHkjnKIUHs6tmsONobj+YmbD1rgx+kCzYScwDIR7BQUFFRWV7t27e3p6
UnkCVplIeJ66PO+No/Qg3DESFxcXEBAwfPhwNTU1uNxp06YdP36cSnJUMp4v
zfrIHeFmjx49Cl+qr69fr149DQ0N6CBoz1evXgkLXEofAeao0GBknhEGhCRE
lqioKHC8oUOHIqSC9dWuXbtdu3YgfmCD+BfVli15bbdqhqHi2oGO+grDBw0l
xKCEhISQkJDNmzfPnz+fsvzRJBWd9gUVBB9YvHgxHNStW7dAFGNjY1NSUkAC
Qb8p3VxxqYalt6YwklDGzfLzYFH7w4cPz58/B5GbOnWqmZmZrhh4Ato8efLk
GTNmoA2trKwQ0G1sbKZMmRIYGPjixQsyV7Y5P//vCs0U14/SAie/8IS16Nv0
PiJB9hX8KLgE+jozMxMeFddDmZYPHDgAvoe4Y29v36FDB/A99Dson4WFxYgR
I8BD6IwPBALUNyWZoYNCxCRZXQnO+orrLxa+KZSjF9DyMB6YSrdu3dDaoHwO
Dg5oavBqkGrWhhJ1W8rnrjhKG8z1wY2Eh4cvX77c2tpaUVERtGf16tUIbYh9
7JxORfSTRUIktUhETgPC8+7duxs3buzatSspaHgeLy8vhBjKBiBcQiqna+co
fQi9HAURCo6IMrAHPz8/RB+EoVq1atGpXjCQHTt2REZGpqens5wGFJGLRLne
XDmgBLZQJGi9CTQADgde6Pz582jeJUuWgAk4Ojp27twZDBDNTml4R48ePW/e
PHinffv2nT59+v79+6mpqRCtwoSKbISKxIvvxV1VuTXQD0LivoitwTOD+J08
eXL9+vVoK9C/sWPHQqqjcebOnevm5ubq6opXfHx8Tpw4ERMTgyaiW2YqniVF
LA4lsIgiV2/ZVB6LFEwg54vLw6WlpT19+vT69evoOOhrdOLMmTOpgrOJiQkI
qpOTU//+/XHleJ0Sy4AWgu+B3gtTJ7FDQ+xXOOsr+DvWR2MBzfjs2TPoVqhX
cGxIKh0dHVrXCwsLQwdhHIkEO2OFjVyuN8dRamB9+u7du3PnzoH8w7U2a9YM
bAcSDDZAeopGbqWkOhKjA+4FjhSSuVGjRtWqVWvVqhVUMyIRreiJBAcVy/vC
OUoNwqjKpg4orGRmZt66dQtCAI6xZcuWIH61a9du06YNCAmYCQwjKyuLrYAU
53XL9+7KHn/bDiLBvi+RYF6IOAOI9KtXryIiInbv3o1gNGXKlD59+lASEgjS
1q1b43mXLl1AD9zd3dE1YDUg55Bm+BT82JcvX/ANwpXfit4FEmdVGGCrb968
AfcDW4b33r9/P2xy69at4IEbxIAPv3fvHtw4y7ZKX0Lfhq8tORNRcf1YQnvS
d6IL8IsQ0RkZGfCobFrv2LFjW7Zs8fT0RMdNnDixZ8+eCDS6urqQVObm5iNH
jgR9xcXjbXhzSkrKp0+f0JWMzxd3CJezPkLJnYX2QXvGx8cfOnQIMrZt27YN
GzZEgMPggqncuHEDnfVXYRFn6Zo4PORVJpAHpqzvffv2hTGoq6vDo0Jxf/jw
gbnigsrI9qW9BKTQ7du3IZzRCL///nv9+vV79OgBdwq9SVmt6COVrymqMoTJ
G4XTFAViXwdneP36ddCP3r17g3KA+NWpU0dfX3/o0KFr165FeMLYofwGnPUR
SmALJTcICzSgDeAqDx8+RDACqQNVmDNnDpxS586d9fT0VFVVEa0ozzOG55Ah
Q6ZPn75ixQpwnjNnzuBTiYmJoOt04oamLNgcVEXsDlFRVVEIdIPwWmBWT58+
ffDgwbVr10JDQ9FuUCuPHz8GDWakUbjSV1B4eLYELf893ScSCGF82/v370Hz
YmJi7ty5c+HCBRAMdAq6ZsGCBRMmTBgwYIC9vb2VlZWlGLa2tr169UL3gQF6
eXnt27fv4sWLUFL4OL4EFIWVDCvy3mmukvYMcNZXUGJ/oZXevn2LKIYoP378
eOimRo0aNW3a1NTUFL0DaQAnJpGSV/i1FXRHBEdxyBefYE1KSlq3bh2cqpqa
WseOHaHFMGxp9Uq4XFLeF1uakDZvNAXCzaNHjzw8PNq1a0cTO/BRUKBwR5DV
+G++4FgHR+WAhIujJzQu6JXU1FSIoIULF8IY4CqrVaumoKCgra2NKLZ582bE
KbyBVkM46yv48bOfLKCANrDteXgO/5OXl4doRdnb/P39582bN3jw4A4dOsBN
oSMUFRWbNGmC+EVpPUDLZ86cuXv37pCQkKioKPBG6Faq8kYTgPhOYYmusmuR
n4boWz3CNtERoUW8pgMO+DM3NxeNhudQIiBOQr7HvkG4sFtCO5TQj4zsUeEz
Sq0Dpv38+XMMh+DgYF9fXxB1KCPQcpBzqCQVFZWmYkA6gbqjE8H30KFs2x4G
EfqLuonp6xLaQXgLnPUVlLjCm52djbgWGBg4depUExMTGjgGBgbDhg07ffp0
Tk4OerDIHD75VTg7emUFDSI6vrpo0SIEMgxJSLDly5djGApLYRZUAapDU5oJ
CQnQp6NGjWrTpo2MjIy6ujqer1+/HqGnEk97ckiD9TJCKnofXAJjpGfPnlS0
qEaNGqqqqv369aPqAFRRgt5PSe+FoVZUWPSQfTM/Bv6doI1/4H7wUZcvXz56
9OjSpUvB7hCwHBwcLC0twR/QI6ATGLCIaI6OjhiweMPKlSvBAI8dO3b8+PGz
Z8+CWoA6IvahpxDmqIQcO9rAfkt6Vo1R0yIn3ESFVeyFb2bP2dcWxzNFgrky
tm2P/UnvYTRVOqAXuU+yQFA3gV5hWxdE3wocOhZRZJsLJ8CFr4sE5zrxWTC9
yMhI2D8txy9YsGDSpEnDhw/HMDE2NkY0UVJSorquLVu21NXV7dq1K3i7u7u7
p6dnQEAAxBTtjwUtr/TxpbRQnIyS2HDO1AEoH0aBt7f3iBEjOnbsSD0ClYSe
2r9/f2JiIp2HYp8quzvh+JXIL+pcFfNFEMUg/GPHjm3RokWrVq0wZqG/4GOJ
5FcdMyBGB8mJ1li4cCGiSYMGDZSVle3s7PBnTEwMixFVtiRrlQJNONAiGqVz
QZBavXr1oEGDQDPq1asH4gcXCpUEjhEUFIQISCVEhQSPJsyl437VGVb/GKzR
qBcosVtycvLTp0/v3bt37tw5uKlVq1a5ubn16tWrXbt26IvmzZtjwNIh0E6d
OoF7gGMMGTJk5MiRU6ZMAWnfunXrhQsX4uLi3r17R0WEaRMg5Wmn6TL8ED2h
BCPCXLUSdItNfNEFE9diiUqE9yL8oMRtFhfEf0V7lrDGLZwuY5dK90L3RW1F
LYM2odMZINJo0jFjxlhbWxsZGbVt21ZNTY3InoKCgqysLAgGOkVPTw9sfPr0
6X5+fmfOnLl//35sbCy6ktKwsFXav00hyFFQvMFIz3aisz58+HDnzh1wbIwR
dXV1dAr0kYGBwYQJE+iYj/DwO3q5hKzdHBULEhKPAUPs8+fPjx8/3r59+4AB
AyDHMDynTZsGe8CQlN7SWblBjhpeKDo6+uDBg05OTo0aNZKTk0OIh1uLiIig
+QERz9dXZSCcycHzlJSUa9euLV26FIPF2NgYLrRWrVrQSjY2NvPnzwcPwVDK
zc0VRnyWOaRKCajSgkQUyxcfX4XLQixLT0+HMr158+bhw4eXL1+OKAZe0aVL
Fx0dHfQIQhuIBzQsSAioiK6uLvrLysoKjH3OnDmbN28ODAwE/QsJCQkLCwN1
weh+8OBBVFQU4uDz589fvXqVlZWFrsQPUXpAiasS+kahkxReMPFG6VyO+d9m
k2b/FbLcAsFcnDDf3V+ClHf/9y2E3yn6dh1WQm4IPyJcOJaeDCRiDIKH1khK
SkKDo33QSmDdV69ePX78+Lp161xdXRE1IIJ+++23atWq1a1bF26Tsm137NgR
mgiOFP7T29v72LFjDx8+pNMl0kczSpgR5RBCaEtFvoFaEnaLLqNKQw4ODlBD
MjIyTZo0gRoaP378gQMH4M1YwTVmNlUn3FcdSHQrBnVGRsapU6dmzJgBsaat
rd27d29oNwxqaGHRt6XHqog90N4YDJZJkyZhpFC+DhcXF4R7OtVeUEmPM3NI
gwIfI/mfPn16+fLlo0ePaJ3R3t5eUVERYQ6+1NzcfMqUKbt370ZYpFR+Ernp
ymxKp5JB9G1xAWJB6JGvX7++f/8+OzsbDO3Jkyegf0FBQfBdCxYs+OOPP/r0
6WNhYQEGCPrRsGFD8HM8ggqCB8LLgQGampp27dq1e/fu/fr1Gzt2rLu7+7x5
8zw9PVetWrVnz54jR46AEOI7QQXj4uLgJEFUaO1DVLgrhmYIaXqEnvwlSF1C
ff3raMx3GpKomJMgbB2ZlmupYVkNO3oFlIC26oGqXbp0iUrirly5cubMmVOn
Th01ahToXOfOndu0aQNpXL169dq1a2MggGCD6Q0bNmz27Nm+vr6HDh2itXU6
o5GTk/PlyxeWFIItOUnPjnIUB1FRKCg8pENPoFbi4+MxIry8vOCm0EeysrLN
mzeHzcPUIXlg1Rg+tLZLvc/5dqWEdNDBQMOgxliGTDYxMQHx8/DwCA8Px/Ck
/R5VjfWRF6KNjgjrRkZGVJfBxsYGQhUhhh1/K+8r5fjlYCFJeu4OTCM0NHTO
nDkdOnQAnahZs2azZs06duw4ZswYiOjHjx9nZWXRaq/Ed4oEOV7K9GYqJkpu
KLbwikeQQFCU2NhYcAwwjXXr1oGcDBgwwMrKCjxEU1OzdevWLVq0UFJSAvdD
l9HiI4A/1dTU9PX10X0Y5pC9I0aMgOKDJ/Tx8dm8efPBgwfPnz8PBggtjJ5F
MH3x4kVSUlJiYiIek5OT09LS3rx5gx7PFgN6mSYJcUng/2yqkE65UpwVsh02
7SYqXCD+q5iEeNKNU3KziL5diSbCzHgdrgRUFteJi8QF48pxC2hD3A7uCy0J
sgcjR2Nu2rQJfJiqpKGJ2rdv365dO2LUoNO0hquhoQFvCRY9evToJUuW7Ny5
E7Q5Ojoa3yYxnymcF2VP6Ma/5645imR9+YVl4tGMsMCnT5+C2rm5uYHmgfKh
g2D8lpaWM2bMCAgIgOkKF9OF/cLbv5JBYkyRoIuMjIQlwOlhzA4fPpxKUQgn
ftmby+GKyxzMO6WkpEDyOzs7I1iA+IESQ7dSJoR8Xpuj6kHI/civIvRDCMya
NcvW1hbMoV69eo0bNwbBGDhwIGTUnTt3WNIMiRk/tq5XTrdSYVBcK0lsA8sv
PEyK5+AwcF8xMTH3798H/UMHwaGtWrUKFA6kZdCgQb169QJvMTU1BW/R0tJC
NAT9wwBH91H1eYz3tm3bGhoa0mRgt27dwAOHDBkCMjNlypS5c+euWLFi/fr1
8AbgQlu2bNm+fXtQUNDJkydBcq5fvw5m+OTJk4SEBLBBxFY8wfWAVkk4XomF
VHY7+VJnMUTFZEWWeE+R/5UwPOEbaEUD6h6q/+XLlxC5d+/evXz58okTJ9Bi
GzduXL58+fTp011dXanFzMzMECPQOFA3sHYVFRWwPj09PTQUuATax93dfe3a
tXv37j137lx4eDhYB24c3UFElzE6Ia2VWBlnU3//3GKqBiTIHgP9C24nIiJi
x44dsFjwc5g0jBxPEMtWrlwJ/YLRQckopJs6n9fbrXQQug7aoJ6Tk4ORjjEL
1YZxvXDhQvwJ0feXIG+txJPKDTYQoHkvXrw4e/ZsCwuLhg0bamtr4zmGDJw5
Lflx71SlQDPAtJmqoHA4pKamwkg8PT07dOgAzlC3bl2QBwwlBweHZcuWXbp0
KSkp6e3bt1TJmg29kjfVczBIUCPhzFiR7yfiBI5B5w4Q2ih7SVxcHEg4nTMF
IUfXgLxNnTp12LBhPXv2BLsDn9HU1GzVqhVRmkZiyMvL169fv3bt2jVr1sQj
OhfRE2+DAIRPANWxsrICJ+zRoweo0bhx48CR4D+9vb39/PwgGA8dOhQYGIjH
U6dOgQqC/kEmQEu+efOGaskJpwdpkg2PoEl08e/fv6cXafIQjhqv0LwcQ64Y
9PpHMeh13Dhex2fxExkZGXgEryMi+lIMML1Hjx5du3YNbRIQEICL3Lp1K2ge
JMz48eMRDhwdHXF36urqysrKTcSgPDn4k+ZFu3Tp4uLiMnLkSDSjl5cXkT3c
Fy6V8ioDtOrNzoNI95eQDfIR8f2QoHzCDZ9paWnoVqgSaE8oUJBzRC50JYxz
586d6HQYEqUagJGwTafCry3XO+MofQj7FyMO/gGKzN/f397eHg6tT58++/bt
i46Ohhv5qzDpBFMQVWR2i5k9GgGKCcMHzg2xAA5w7NixcI+xsbF0poOzvkqP
4raX03lGmAqibWJiIrSAu7s7mB54AlgfqAL4g42NzZw5c4KCgh4+fEiLfcLR
V+a3UiEhDEPC56wlieOxRCISypRNK9H+NNCex48fozvAAKFtqSgY8cBVq1aB
ukybNg08EG4Q+rd9+/YIl7SCCcpXrVq138SoXr26rKwsOCGUIB7hGfAeQ0ND
vB+foo2CoExwGgMGDBg0aFC/fv3wnTCPxYsXL1q0CLQQGoEmCXft2rV///6D
YsAJ4zk4WGhoaLgYkAz4M1iMK1euhIWFIZrfuHHj5s2bt27dovdcFQOvX79+
nf0LwCuwSdwd/BW+Gfe4cePGlStXzp8/38PDA9ewYMGCGTNmgKmC4OFSBw8e
3Lt3b1y8aSGgYoyMjNqJgVvr1KkTiK6dnR3eP3nyZNzCmjVrwCLw/cePH0dj
gk6ATCKgSKwNSQeO4gieiKe+/24Ux/ri4+MhQtE16CYdHR0QdXTf0KFD0ekw
Bpg9FCjlVyyQmsYhxVRF5naqFIRxh/QgBiwcAoQbfNeoUaPgaih1Ek1NsJCX
XzXSi9Et050iTEMaQ8BOnDiR9kU4OzvDXd+9e5eVXi0O5X0fHL8cNDT+T1wW
AXYCCoGwbmBgAJIAblCrVi1KggqlgJgLppGVlUUfZPMef0llPudR7xeBziyA
H8KzgZlA0OXk5CACZmdnp6amgq6kpKTgMTIykuqAIEqymUBwnhYtWoDJ161b
lxaChcDrDRo0oKMijRs3pmkxRUVFsEElMWg/FaCsrKyioqKpqYlwDBJlZWXl
5OSEiIxfGThwIPjh8OHDQTvBDBG1165dC3Nyc3OD/YwePRosa9myZaBtYKfQ
ofBCYKo+Pj54Zfny5fjXihUrVq9ejRc3ioF/geCB1OE78f3gn2B0bdu2bd26
taqqKryZmpoaLgbapKUYuFpFMXC1eAPs1tLSEiqmb9++I0aMAM2DfgEr9vX1
DQwMBK+Ijo6G2ElLS6P5SbQknXTm/rDUIUGGRd9uvWNL5Gh8Sr9GR8zQ0bQ+
BfuBuIiIiHj+/DnCPTv3zTulKoBEMdkPzavjCQbv4cOHx4wZA1kHuQpfFxsb
K5yUqJqgcIwB8u7du/v37y9ZsgSOGoOoY8eOs2fPDgkJQaBnsz3cy1VBSMxg
QD6/ePHiwoULCxcutLOzowrOgKysLEYWYi4CMWIlbZeVmPoQziVKHBvhKC0I
J0Yk9kEVCMg2RjRI4NOnT9GVtCFw69at3t7e4DxTpkwB+YEuBj3r3bu3gxgI
r7a2tiBUYHHt2rVDkAWp09DQAKcCzQMJbCAFsERwxdq1a9epU0dOTg50C2yQ
mCE4GOhW586d8bX4cnytsbGxrq4u2FqHDh1MTU3xLwsLC2tra9hYt27d8AZw
M3NzczMzMzziTxsx8Aa8QrsWcTG09U5dXR3Xgx/CteFXaO6OFqnxEfwibgrk
848//gDdnTdvHpgkaOTBgweDgoKgfC9fvnzz5s2oqCjYOS1DI0zQ4iAxaiZh
uD8sRQiz6wjn9NgbaDYGrBtx6siRIzNmzICUMBLD0dERdguWDi0DvkczFQWC
atdVPMpXEbB5dZZtIDw8fMGCBfAScAvwM5By0AvlfZnlD7a6jSevX7/esWMH
3C+8NNwmfCM8YU5Ojqiw1AL3clUTEr0MwpCcnHz16tXFixebmJgguNOCoIyM
DAJ63759vby8EDpBKiTq3fOtAmWAEo7Eir6tmYLeoWww6enpKSkpIDnx8fGP
Hz9G6ATnAfM5c+bMvn37tm3bBrewfft2+EwfH5+lS5dCD44bN27kyJGurq6D
Bw/u2bMnaBXIVUcx8AS0DYahr68PFqegoECZAcAAIQ2IDeIJHqEuaYawSZMm
oIV4A95JuQebi9GyZUuapsMrMC28QvOKeN6yEM3EII4H+gd2B04IKtijRw+w
VvA6WCnY7Nq1a6FH/Pz8Nm3atGfPnhMnTly7di0iIuLJkyfPnj2Li4tLTEyE
VUOtoDUyMzNZ3a7iXBz3h6ULiVk+ifakE0x0dgPyBMKkffv20B3g+ejlzZs3
37lzh0qEC79H4hANR6VHfmFBeVhLRkbG0aNH4Z3gJeAZJk6cePjwYaiGgiq8
0sQSLLCpAIQAtBK8ZaNGjaDQMazWr1//8uVLiULV3MtVNVAv54vTX5AjhaAG
Tzh9+jQIQPfu3TU0NBC1aVZHW1vb2dl51apVYWFh0BGU0eX/Ckv78QWXX40S
5vpEgtwm+YWVy1hJDonn6Lg3b97ExsaCB0ZHR8fExIANIraGhoaCMh04cGC3
GOCEq1evBrOaNm0aTRK6ubm5u7tPnz59woQJo0aNsrOzAxMDG4ScpIMkbdq0
UVdXp9lCVVVVyjDDOB7+q6WlBbpIE4l4hSpf0FIyvQ2fwjfQ23R1dcEwwfQc
HR2HDh06adIkXAmuATRv165dJ0+ehB3eunULV37//n3cAm7n+fPnLNcQaxPh
vQuzQAvPsuULMktzf/jrIPp2K8jXr18RrNFrtEdr9OjR8Dnge+bm5pAesECI
lA8fPrBT3hT0aUd6Od4FR9mDRiseQWZgFQhD8DzgM/BCIDNXrlzB6wWFGcmq
IOjG/6+wAlGBeL/E+fPn4TPB9+Bm4VdnzZoFyQ/9S5qXe7kqCJGgOAt7Qq44
MzMTkRSxdcyYMbCZhg0bVq9evW7duojL9vb2np6eMKfExETaJFAgOJoqTLBW
bjdWNcBYTZH/KhAsi0iMZVHhITg6NguA6iP4pqWlgfAjBMfHx8fFxVH1ioiI
iKdPn+LJgwcPwKyePHmCP/Hk3r17iNQhISEQCIGBgdu3b4cfXr58ube394IF
C+BqELX79evn5OQ0YMAAPB8/fjzMZsWKFXiDl5fX/PnzwR4R5QcPHgxGR2/A
pyjFNN6zZs0afOehQ4fOnDlD6ZGJ10WJgcuD7qD9eLQlLycnB3eRl5dH2d7Y
nRbnx0SF1WqknR73h6ULikTU4MJkGn/++SfUBwxp3759U6dOtba21hdj4MCB
ixYtOnXqFEyRTtYI/YlEX/B+qfSgLqZ5CcQpkBb4HOhQqINWrVpBDEKuwlQo
hFVxe2AHWArEW7bu3r0LRwonjMANiT1kyJCDBw/Cf3LWV5UhdMIiwbxfgZgH
Pnv2DA553LhxJiYmjRs3/o8YTZo0sbW1XbhwIblliTpfzHI46yszCM//CvdN
CQOl8CxqviDVMO1nY5l82PvZbCFFavzEZzG+fPkCUYAnIPygWAjKII0ZGRmx
sbEgZteuXYOWxOO5c+coj4qvr++2bdv8/f2DgoLgnK9fv443gMWBy4ErQlZs
3Lhx7dq1lCXmyJEjjOOBZMK60tPT8f30o5TKBj/NaotItIP05jG6678Ki3cI
M+yVMCfA/WHpgrE+4dZfKI7U1FR0NLj92LFjjY2NKX2imZnZ6tWrL1y4AELI
ErlIkHPhl/N+qSIgUgcmA88Ap+Hi4gJrMTAwgLVApcIR0duqctwRFW7UZ2ed
kpKSjh07BjWtq6uroKCAwA1tDrUOj8q9XJWF0A8Tc0BsZVumc3JyoqOjT5w4
MX/+fEdHR4wyWVnZWrVqUUUkqK29e/feunULQR9WVH43UVXAmAxbzC15nDJi
k1+YtDa/sPABe49IkIGELXEyNiiRBIPF7nxBFlyiiGCAmZmZiOPgaXA18MNP
njy5d+8ezAOR/eHDh0+fPn358iXtrMPbqGrGo0eP8B4qH4w3ULkQmsR79+4d
PLl0vhT6XTJXIYuTTs7wnR5M6PHYbjHuD38FqA3RazADxG6QfCoF3rFjRw0N
DQQmJyenefPmgfbDPFiRtb8Kq72A87OyLLw7qhqoyBr8zOnTp6dOnWpqaqqn
p9enTx+IRwQgchRVvB4fVRsvEM8D0JPs7Gz44Q0bNnTp0kVeXt7ExGTmzJmH
Dx+GpOJersqChlKR+KuwMOvbt28vXry4bNmybt26aWpq1qtXr0aNGnJychh0
w4YNW7ly5f379xHQaTOV9JFSjjIAYyzCeTzhqj0bzqQB8wUFQf528qQEVyCk
f2QwbOKxoJBk0jQdpdMXvk4p12A2lAmZ7cGj0s/kwdj7hXPR7OeENiZ9opPN
+AlJnTDjh0gwNSqxgMj9YSmCtTYZQ1ZW1p07d/z9/cePH29paUmbP/X19V1c
XLy9vS9cuEBZ10Ti/SeM9kt4Kn6ao+qAPAzRGIjBvXv39u/fX0tLq2fPnuAw
169fz83NJUuQOGNYNSEUsAAIXnBwMGJ3gwYNVFRU7OzsfHx8nj9/TgNKJN7t
w1R/eV87RzmDhVFK+RgeHr5ixYoxY8ZAmEM1/Pbbb3Xq1IE879Wrl5eXF+QD
5UUXFu+Q8MlssaY87oaDg+PXQjj9KzH2aRIGnuTZs2chISEbNmwYMWKEkZER
wpCamhpC0vTp07dv337z5s20tDSJ2ezyuBWOfxdID3769CkpKWnNmjXt2rWD
TBg0aNC2bdsePHhAi1MS+z+rLCRYH3jylStXXF1dmzVrBuKnrq4+depUNFpO
Tg7bAMM+WK4XzlGekPDe+PPDhw+pqanwyXv27Bk3bpyxsbGcnFz16tXxqKqq
amFhMXny5KNHj8bHx4P40UIMTdfgkSZ/pDebcXBwVCYI55bZsXHKiJiXlwe3
kJWVdenSJYjHvn37amhoKCkptWnTpmfPnqtWrYJvoUJ4Hz9+5KyPQxqwpdev
X1+7dm3atGmgLjo6OlAKJ06cSEhIoI3oVfb0rgQkWN+XL1+ePn26bNkyKrcq
Ly/v7OwcHByMYE01DSU+WF6XzVG+EG6REp4Dhf3ExsYePnx49uzZdnZ2EOnQ
DrVq1ZKRkdHT0xs9evTWrVshKzAMwRLZN0hM8XG74uColBCqxfzC2oKIyJmZ
mU+ePLl69er+/fvprK6uri5lWuvXr9/atWtv377NPIb0tlXuMThgA6AoERER
mzZtcnBwUFRUNDQ09PX1jYyMzMnJoQUmzvoIjPWxcQS2HBAQMHLkSIw7NJ2V
lRWU161bt6DCRN+eseKLvFUWQjcrsZ8fzhkaITQ0FCPO1dVVX18f8qFu3bpQ
EFpaWk5OTkuWLIH+SkxMJLFf3GovBwdHJQNbGmAe43//+19ubu6DBw/8/f1n
zpzp6OjYtm3bFi1aIPqA+7m5ue3ZsweE8N27d4jprOoW31fJIQQxurdv3548
eXL8+PFUmtnS0vLYsWN00JvNLZf3lZY/hOOFsT6Mwbt3765atQqDrlmzZlBb
EyZMQGO+evWqQLA3m6+Pc0hMFLPEtp8/f8ZYgyeHx8YYhHCAJ2/cuHH9+vXb
tGnTq1cvDw+PoKAgqLDk5GQJCc+9NwdHZUW+ID04KBzCdFRU1Llz5zZu3Dhp
0iQLCwt1dXVVVVU9PT3Qv+nTpx8+fBiUj6ZoRIXHdfkZag5pfP369cWLF5s3
b+7evbuysjIMaeDAgdeuXaM1SjIeYn1VdraquFFDic0RsqmaCW3KcnFx2bVr
V3x8fIFUYVaOKgs67Sj8U5g2hBKkw2bg0rdt2zZ69OiOHTvSaq+iomKnTp3A
Bjds2HDnzp3Xr18z/c6ygpTfbXFwcPxawEt8+vQJMfrSpUs+Pj5//PGHubk5
mB48Q+vWrbt16zZlypStW7eGhYVBFcKNSDgEiU3FwlmL8rgbjn8FsrKybt++
PWfOHMrMbGVl5eHhAU3BTnazlAWc9UmzPjTOn3/+GR4ejsGopKTUrFkzxOul
S5dGRERQUOasj6OgcDMe+1P0bYkHUeFB75ycnKSkpCNHjsyaNQu+HRZVp04d
GRkZXV3dvn37rl+//vTp07GxsZmZmR8/fqRRyb03B0dlBTwDRnp0dDR8AmK0
nZ2dpqamvLx8y5Yt8QSUz8vL68yZM3FxcRSvKYcPnf+S9gxCysf9RpXF169f
nz59eujQof79+ysrK+vr60+YMAEGBtUgkZOqfK+zfFHCDDlFcwRiT09PY2Nj
hGkwZzc3t6tXr/73v//9S1wIu4BP+lV5sM05InHWLIlUvexPWsd58uTJ0aNH
Ib7A9LS0tGrVqlW/fn04eSgyDM9t27aFhobCzyMc8GUaDo7KCniDvLw8Kgcw
c+ZMa2vr1q1bN2jQoEWLFl27dnV1dV25cmVYWNiLFy8yMjIQyiXK6UoX8uas
j6NAnGoYZrN69WpLS8vGjRt37twZhhQREZGVlVUgmEbgjKVIsBm/lJSUffv2
OTs7Y1Q2bNjQycnJ39//5cuXVFY1v7AmFweHEMWpic+fP8ON37t3b8uWLQMG
DFBTU5OVlYXAV1BQaN68ubm5OUJAUFAQbdsWiZO1skxBbMzSXm4mTwpKrDPL
wcFRNhCevmfbPKRTZP/55585OTkJCQknTpxwc3MzNDSUk5NDcIE3sLe3X7Ro
EaQf+B48ACXf5uOaQwLCuSZK+UUFWV69erVz585hw4YZGBhAQQwcOJAK9rHS
PHwyoQSw0jZosVOnTk2aNMnIyAjk2cTEZPHixdevX6c6HQXiNuctySGB4lgf
yQQor7t371JVTTA9DQ2NevXqycjIgPhB9U+fPn3Pnj14Q3p6OhvaJR8V56yP
g6McIRJU6xO+wp6z1/Py8qD7wsPD/f39p06d2qlTp0ZidOjQYciQIatXrz5z
5kxycvKnT59KKAbEUcUhZH2Mzn358iUqKsrT07Nbt276+vrt2rVDKEEc+fjx
I2d93wN2Wio3NzciIsLX19fR0bFZs2bKysrOzs5+fn6PHj2iUcknSzmkUQLr
o//SEQ94eEh7FxcXEL8mTZqA+8H/Uyr1DRs2QPJnZ2cjTFC5JVa9q4QfKo97
5eCo6ihZcIkKK6y9e/fu2bNn165d8/HxcXV1NTQ0bNq0qaKiYseOHd3c3Pbu
3RsZGZmWlsb2Dn3Pl3NUTQhLhxeIM8dmZmZeuHBh1KhROjo6xsbGgwcP3rFj
R1JSEpWO4qzvb8GaFPw5NTU1JCRkwoQJKioqCgoKenp648ePP3/+PJW040OS
4/tBxzRgNn/++efnz5/T09OvXr26ZcsW+HwnJyeMVhgY1YLp37//kiVLzp07
d//+fQQC2OH/KwRLDiMczuV9ZxwcVRfCASgdWDFIs7KyoqOjL168iME+f/78
Xr16mZiYtG3b1tTUFBIP0i8oKOjx48cQg4zyCfMAlOnNcFQEsLw9ZCcQFA8f
Pty9e7ednV2LFi1sbGxWrlx548aNnJycAsF8YHlf9b8abDUNIw4BNyYmZunS
pe3atUNEbtiwob29/f79+8EGhcl1OTj+Fiw6sO3ZGJWwritXrkCXQVmYmZlB
+8vKyqqqqpqbm48bN87b2xuiIzk5+ePHj+CKtJE7XwrcDjk4ygtsloDm5Gkw
0qjEn9nZ2Xfv3t25c+fUqVMRlI2MjKDvDAwMevbsuXDhQvA9/PfFixegfNLH
NAqqcIYNjhIg9Px4hP2cOHFizpw5YClKSkqDBw8+fvz4y5cvWeFd6R0IPGRI
QFSYf4PCdHp6+vbt2x0dHeXk5GrWrIlhu2rVqqioKBqnfFRyfCekV23wJC8v
D0oN5hQQEDBv3jwHBwdQPnkxNDU1u3fvPnfu3CNHjty/fx+j+NOnT0V+La8R
w8FRXhCeq2LPEXCzsrJiY2MvXry4YcOG4cOHI3Aoi2Fqauri4uLl5QVBh0EN
D8DyAEiEYxHPEcEhBbaPlEwFFvLw4cO1a9f26NFDTU1NXV19xowZERERCBYs
CZiQ9Qm3G3EwCMVagXhCJjg4eOLEiRoaGnXr1m3duvX48eMDAwPj4uK+fPnC
oy3HP4BIUM6DpuhhTmFhYX5+fsOGDdPX11dUVGzYsGGrVq06deo0ZMiQxYsX
Hzp0KDIykg73CZM5EOvj0YGDo3zBim68ffs2ISEBpG7Tpk0IHI6OjoaGhggc
IH5OTk4eHh67du0KDw9//fo1Igj7uEhQHKqAj2uO4sGYG/Dhw4czZ86MGTOm
bdu2KioqFhYW69evh5pgxiOd84GzPmlQm7Dh9vHjR4zfRYsWWVlZNRbDwcFh
2bJl165dY4W0ODi+E8ylCxd0qPw6zCkqKgrEb8CAAe3bt2/WrJm8vLycnFzL
li0xlidPngzihzdkZ2fn5uZ+/vyZLSfxUczBUV5gRe0xJN+/f//mzRsM0rNn
z3p7e2Mga2trt2jRonnz5ngC+bZx48bLly8nJiZivIsEKT3ZEUK+9MbxnYDh
/fnnn2lpaRARNjY2ysrKWlpaLi4u/v7+0B0FxRiViOd8KB40JOlMdExMzOnT
p8eOHaukpCQjI6Ouro7hHBQUhAFeIIjjrG35FlyO7wed0qXBiKjx6NEjsLsV
K1aMGjXK3Nwc3E9WVhaGZ2JiMmLEiKVLl544ceLmzZspKSlfv34leSKRHZq+
Cl/7v//9j88VcHD8KCSOUYgKU/dLO3bG3BAm4uLiLl26tGfPngULFgwePNjS
0lJXVxeSDXyvV69e8+bNO3DgwJUrVzIyMqDv2MDkTI/jR8HsEFHg4sWLMC0D
AwN5eXk7OztK8U3nOAr4vtDvhvT8SVZWFuTb4sWL9fT0KMOGhYXFpk2bEhIS
mCsQ7q3ioZbjh8ASusJyEBGSk5MfP34Mdufl5eXo6KipqQmTw6BWUVFp3749
1BxM8dy5c4mJiVRWu0B8QqSgcAtHud4KB0eFBx2QL/J1GqosP//nz58RYVNT
UyMiIg4ePDh37tw+ffro6+tDrCkqKrZq1crY2HjgwIE+Pj6XL19OS0ujE4Is
ajPVxokfx3eC8r7CYOD879y54+vr279//xYtWujo6Li5uZ0+ffr58+d0joOv
AX0/WF41YRGTt2/fQqlBsjVv3lxGRkZNTc3d3T00NDQzMxMtLLEHgxNsjh8F
I35syx8G74ULF7y9vV1dXbt06aKuro440rRpU8QUxJHly5cHBATcvXs3Ozsb
QYT8ACwQT4RFPXj5GA6OH4VQwksrKRqeBeIjG1Bet2/fDgoKWrVq1YQJE6yt
rcH0GjZsiKGqra3t4OAwc+bM3bt34z206CaB4lJxcnAUB3bGJzc398SJE2PH
jjUyMoLJdejQYc2aNbGxsZ8+feLzTj8K4W4rdrIDAu3q1auzZs3q3Llzo0aN
EHz79u27devW+/fvs5OV7CgWH8Uc3w/h3DJFAQLIW0ZGxsOHD48fP75y5Uow
PcQRWTGUlZWNjY379eu3YsWKsLAwvE24S5CiEp894OD4x2CHrdgOCnpOgxRi
iijfqVOnvLy8hgwZ0qlTJwzPli1bNm7cWENDw9bWFsFi165dt27dgnyDNKMT
WBLHN3i+TY4fBbMZ6Ig9e/bA0po3b66kpIQn+/btw4tkt9z//xCEp11I6FH9
RLDonTt3urq6qqurKygogP7Nmzfv3LlzoNzCDwr36HJw/C0QQYTSTHiOj+TG
69evb968uXHjRhA/fX19OTm533//vXr16lpaWoMGDVq+fPnJkycfPXpEWb+E
X1I+98PBUSkgMYg+f/6MkJqWlpaQkBAZGXnjxg0E2ZkzZzo4OLRp06Zu3boY
mK1bt4YcGzp0KEYlQkNMTMzHjx+Fs3k8szrHTwJUhLaCJyUl+fj46OjowPDw
OGHChNDQUOHiDpuU5vgHIOKXlZV15coVKDsTE5MGDRpA0I0aNSowMPDNmzcS
2+l5U3N8P4pLs4zxS3EHxA82dv/+fSg7CA0rKyuIuxo1ajRq1EhbW9vS0nL0
6NGrVq06e/YsogxNJpDF8lHPwfHzYPV0wPcuX74Msrd06dKpU6c6OzsbGRlh
MNavX79evXqICI6OjhihR48ehQp7+fLlhw8fpBNlSA92Pk45vh+0HgQBAt3h
7u4OoQEL7NWr19q1axEjYKh8lu8fQ6Lp8OfXr1/j4+P9/f3t7e2pTkf37t03
bNjw/PlzCrU8jQbHz0D0bd0N9jqeYyxnZ2fTau/MmTMRXGjCuU6dOrKysnp6
ek5OTp6engEBAQ8ePEhOTs7IyMjLy+N2yMHxo5Dw/OBjlH+Pzmt4eHgMHTq0
c+fOWlpaysrKGINycnKqqqoQX66urt7e3hcuXADfw4Bl23TpxN//CiH9i5z1
cfwQYF3Pnj3bu3fv4MGDwfpMTEwWLlx46tQpWClYCt/U94/B5uFZynS8gsh7
6dKlIUOGYLDXqlXLwMBgzpw5VEKxQDBpw6Mtx/eD5WqWeBFDm0UNevHjx49x
cXGQeIcOHZo7d66trW2zZs1q1KhRv379Vq1aGRoauri4zJs3z8/P78SJE48e
PcrKyvr8+XN53BMHR0WFkPVhAGLQIcKGhobS/j0zMzMNDQ34/7p168rLyzdp
0sTGxmbSpEkYdMHBwbdu3UpNTWVhlzLAFDf3wudkOP4ZwDeuXr0Kg+zWrRtY
n729/e7du+kcB3tPybbH8Z2g6PzgwYMJEyZg4NepU6dp06bQfSEhISkpKRSd
2ao6J34cpQJhFQ+a28/Ly0tLS4P6mD9/vpWVlZqaGmkQcD9FRUV9ff0+ffqA
Ex48eDAyMjIjIwMughaLGbekyUOJ5GPCogBFonzun4Pj58AmzyVsuLisqrQT
HgMkJycnMzMTOuvIkSMYUNbW1qqqqg0aNJCTk5OVlcVw09TUdHR0nDlzJt5A
tdVAERF52SF6Do6fATNRkbimM/PDycnJAQEB4B7t27c3MTEZP358eHg4ZWeV
XqMsh+uuRKBNuYmJiWvXrsVgb9myJaIthN7GjRtv3LiRm5tLSTMKxE0tPKvF
wfGPwfYFEesj4gfrQpShEp/QIF27dkU8qlmzJrgfQhJ4oIWFxfDhw5cvX+7v
7w+H8Pz5cwQjiVXj4v7krI+jsoL2u8JLU6YjelFUWNiU/sQbML5SU1Pv379/
6tQpX1/fcePGQV7B4cvIyGCINW/e3MjIyM7ObsqUKfjvmTNnYmJiPn/+LBRW
HBw/CcrLRws9dHyjQJyXFUzj2rVrixYtgpOnGn9r1qwBD2TZ/oVfwv32T4KO
X7179+7ChQsLFiwwMzOTl5fX1tYePXr0vn370OyQh2xuv8j9GxwcPwoh62Mz
fiT9MPzj4+MRdDw8PHr37q2srAzKV0uMunXrKioqmpqaQg/6+PgcPXr0yZMn
2dnZeXl5tONI+BMS0yCc9XFUJkgzMYkNtDS44LExNL5+/YphkpCQEBoa6ufn
B0kFvqeiooKRVbt2bbA+jDKIrIkTJ27atOny5csYgIgItMQjHCZ8nx7HT4Id
EMAjoxMfP36Ece7atatv375t2rTp3Lnz3LlzT5w4kZWVhYggnbCF++2fBxof
cRMBdM+ePWj2xo0bI7aC/nl6ekZFRUEh8jw5HKUORvzYjB97DpN78eIFiN+6
detGjRrl4OBgaGiIwATW9/vvvzdq1AhisFevXpMnT0YIw9vu3LkTFxeHuIYA
R18uPUHBWR9HZUJx82/CtGZw7IibGBqRkZEhISFw7/Pnz+/Xr5+BgYGCggLx
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
zJkzb968oWa9nwTWiYPikZmZ+fTp0127dvXu3Zut4Ono6Ojh4fHkyZPi4mLK
zk0QBEEQ1ZCvqD7mu+Ho379/f/ny5Xnz5llbW8vIyNSuXVtRUdHBwWHfvn0h
ISEpKSlV/RDEd4KpPpSNgoKCpKSkGzduTJgwQVNTU1lZuVmzZuPGjTt37hzK
A8ufT7EAQRAEQVQrvqL6mNfOz89/9OjRpk2bIPOMjY3r1q1bq1YtLS0tV1fX
69evJyYm5ubmkn//qfhDlMS1uLj41atXa9eutbKyUlNTU1FRsbOzW7NmDVuf
paioiEoFQRAEQVQrxKk+NocXzj0uLu7UqVMuLi6mpqby8vJSUlLw761atVq9
enVkZCQO4Ol8iRpPpWl66enpJ0+ehP5nyRv19fUHDBiwY8eO8PBwxAJVdZME
QRAEQXwRcaqPabmPHz8GBASwBH3Qe7Vq1ZKWlm7atOm4cePOnDkDp88uQq06
PwmsVHCRX1RUFBIScvTo0QkTJpibm2tqajZs2BABgq+vL0/ZTRAEQRBENUGc
6vv999/z8vKCg4M3b948dOhQExOT2rVrs7TMI0aMOHz4cEREBJu6Syuv/WyU
VaTwwnuH8n/16pWXl1fnzp1RNhQUFKytrT08PFByWNZugiAIgiCqCeJUHyRf
TEzMr7/+CslnaWmpqqoKyaempmZrawuf/uLFi5ycHNa9S5LvZ4OnTsWrh/LP
zMy8ffv2lClTOnTooKKioqmpOXjwYAQLkZGRLNVqpdNpPABBEARBVAmfZ2Vn
CdujoqIuXrw4d+5clpBNXl5eTk4O8s/V1dXX1zc1NbW0tJQ6dn9Cyv6cqx/K
v6Cg4PXr197e3lOnTkVp0dLSsrGxGTly5OnTp+Pi4vgAP5QrHExzewmCIAii
quAjtfiS3CUlJdnZ2Tdv3ly/fr2Dg4O2traEhEStWrV0dHRGjx69c+fO0NDQ
4uJimsTxc1L22QpNKAkQfigVBw8e7N+/v7GxMcpMs2bNli9fHhgYmJCQwI5n
S/VV0V0TBEEQBPH/gFNmKq6oqOj9+/eenp6DBg0yNTWVlZWtJcLS0hKS78mT
J9CE5aJGQubEhcP7iRoPU32V3jj+RKkICgpyc3Nr3769hoaGlpYWYgToQBSY
3NxctmQnO5iGBBAEQRBElcDd96dPn9gGW3Zh3rx5VlZWioqKUlJS0tLSmpqa
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
KykpSUxMhORbu3Zt79699fT0NDQ0mjRp0qdPn02bNgUEBMTHx3/69KlMNPae
VB/xTeBtfcXFxb///jtKVEpKyqNHj9atW2dnZ6eqqqqpqdmgQYMxY8b4+PhA
EJLqIwiCIIi/jzjVl5WVBa+6detWR0dHQ0NDKSkpIyMj1sr34MGDtLS0/Px8
5mHZbEpSfcT/Dltml+k99mdRUVF2dvbZs2eXLVvGxhgg+rCxsZk3b97FixdR
DlH8UPYQpLBTqMgRBEEQhDh4wwi8J+tfgw/NyMiA5Nu5c+fIkSMtLCwg+RQV
Fdu2bbtq1SpIvg8fPvAjq/LWiZoIE37CYllQUBATE8My+DVq1IgJv86dO69e
vRqlMSUlBSpRmFSciiVBEARBfBGWgbmsrAwbbJGsnJycqKio3bt3Dx06tHHj
xmzlNTMzsxEjRhw/fjw2NjY/P5+dy70zNbAQ3xBhozE22MSN9PT0w4cP9+vX
z9DQsF69etra2oMGDfL29g4LC+OJJcsrMv5V0Y0TBEEQRLWGr5vGXG1RUVFk
ZOSFCxdcXFyMjY1r165dp04d1rf7yy+/hIeHFxYWCs/lUzmq6PaJGsjnQwVY
a15QUNCiRYu6du2qpqYmIyPTvHnzCRMmnDlzJjExka8jQ4P6CIIgCOLvAPH2
/v37kydPzp4929bWVlFREapPVVW1Z8+emzZtun37dnp6urArjbUNlpOrJb4p
n6+4wcaOonCeOnXKzc3Nzs4OhVNBQaFZs2bz5s27efNmUlISCz3Y+NIqu3WC
IAiCqMawVHuQcHCsfNk1KysrDQ0NeXl5fX39Nm3aLFq0KDAwMDExsaSkRJgn
jftl8rPEt+KLmfdYizRLGH727FkU0datWysrK0P4de7cee3atSifbOABde8S
BEEQhDj4PNysrKznz5/v27fP0dFRXV29Vq1a8KqdOnWaMWOGr69veno6a28R
+mIOqT7i34AXNpYgCIFGXl4eG4GwcOFCOzs7FRUVExOTHj16bNq0KTw8PDc3
l3f1EgRBEARRCeZVS0pKoqKiTp8+PX36dGtrawUFBQkJCXNz81mzZvn5+cXG
xv5HhLgrUAML8S/BixYLOgACEAi/EydOjBw50tjYGLGJpqamk5MT9mD/x48f
qTQSBEEQxBdhY/Nyc3ODgoLWrFnTtWtXHR0dSUnJ+vXrd+nSZffu3ZB87MiC
goLyirZB3gJDw6iI74OwsOXl5aG4enl5oYgiNoHqa9as2YgRI3bu3BkeHl5e
IRF5xmY2Ebhq758gCIIgvj/C+bYsRx8cYmJi4unTpwcPHgzJJycnp6GhYW9v
7+7u/vDhw7S0NHGtfATxfWCBBg83UIZjYmJu3bq1cOFCxCmaImxsbCZPnuzj
45OQkMAilHLBEm8UmxAEQRA/Dyz5LWstYTM42HQMvtju0qVLW7VqJS8vDwdq
bW09b948Pz+/uLi4/Px8vlBCVT8E8ZPCV2rjhRDlFqHKlStX5syZ06RJE9bP
a2dnt2zZshs3brx//54N8GPLBbJTqOeXIAiC+EmotD7p77//XlJSAs/45s2b
8+fPL1q0qEuXLtra2ioqKh06dIDku3DhQlRUVHFxMbQiG7lHSfmIqoIXXR6t
sClI0dHRhw8fHjlyZPPmzdXV1XV0dBwdHTdt2nTnzp2UlBQcw6acl1fMVa/S
hyAIgiCIqgFO8OPHj69fvz59+rSbm5u9vb2pqSmcpqWl5dy5cy9duoSvWDcZ
X9qe2vqIqoKXPTZCj0Ui+DMnJ+fJkye7d+92cXFBAZaSkjIzM3Nyctq6devD
hw/z8/OFS/pSWx9BEATxk8AbOj59+gQPWFpa+vz580OHDk2bNg2Sz8DAwMjI
qE2bNmPHjj18+PDbt2+hCZm75CeS0ySqCmEzHRuiwLYh/9LT0x88eODh4dG5
c2dlZWVFRUUTE5Phw4fv3bs3MjISspCiFYIgCOJngw9rLy4uzsvLi42NPXHi
xOTJkxs2bKikpCQnJ2dlZYU/f/3117CwsIKCAhzGjucOl7wnUYUIEwQJ0zij
YCcnJ1+/fn3p0qVdunTR19eXkZGxsLAYP378yZMnX79+zVbppZiFIAiC+AmB
nHv79u3x48fhFlu1aiUpKVmrVi01NTVHR8c9e/awVLflFRpPmPKC1rUnqhAm
8PhkXhTL0tJSFsuwAX4XLlxYvHhxmzZtpKWlIfw6dOiwatWqgICA7OxsFF3K
3EIQBEH8PPB0Z3l5eXfu3Jk2bZqFhYW8vLyioqKSklLjxo2nTJly+fLl1NRU
4bgpNumDXYFUH1Hd4Gvv5uTkxMTEoABPnz4dhVlFRM+ePSH8rl+/zkaoFhUV
CXuHCYIgCKIGIBy4zvvF2GTG5OTkS5curV+/vnPnzrVq1ZKSkpKTk2vSpMmI
ESP27Nnz6tWrwsJCys5H/CgIR6vm5uZGRkbu3bt37NixzZs3V1ZWNjU17dOn
j7u7e2hoKFult1zQO8xm9ZIIJAiCIH5cxK2PBtWXlZUVGBi4YsUKJycnc3Nz
qD5JSUkDA4P+/ftv3rwZX+Xk5JT/ebQ8QVRneL8tK7QowA8fPjx48ODQoUN1
dHQkJCT09PQcHR29vLxCQkJ4q3X5n5eYIQiCIIgflC86MuyEQwwPD9+5c2e3
bt2MjIzk5eWh+rS1tbt27bpu3TpIvpSUFNZy8p///IeveUoQ1Rmeu4939SYm
JkL4rVy50sbGBoVcQUGhSZMmLi4uu3btev78eWlpKR+wSqENQRAEUWPg8g8q
rrCwMDIy8tixY+PHj69fv760tHS9evXU1NS6d+++evXqW7duQfLl5+ezpC4s
EW7V3jxB/CMqrdlx6tQpV1dX6D02bNXCwmL48OFHjx7FV3l5eXwVaT4xpErv
nSAIgiD+J3gvLfwa3NyHDx/OnDkzffr0Nm3aqKqq1qlTR05OrlWrVsuXL/f3
909NTWUZ/Mj9ET8ibLVBto2ApaCgIDw8fM+ePUOGDNHW1mbjV1u0aLFw4UKU
9ujoaLZYm/D0qrhrgiAIgvhf4cvsMl9WUlLy9u3bGzduzJ8/H5JPS0tLRkZG
QUGhUaNGrq6ufn5+CQkJzGOS7yN+OFhpRwHma3AgzPn06VNOTk5oaOi2bds6
dOigoqIiKSmprq7es2fPNWvWnD9/Pj4+HvWCBvURBEEQPzpM77FeWrjCDx8+
+Pr6Ll68GO5PQ0NDXl4e7s/KymrixIkHDhx4/vy5sMOLXYFlbqnShyCIf4ZQ
wrGuWwi/u3fvTp48GaUdJV9CQsLY2LhHjx4rV64MCAhAsJObmwt9KG72E0EQ
BEFUf4SjlaDoQkND161b17VrV21tbTg+VVVVCwuLoUOHHjp0KCQkJCkpiffq
CscBVt3tE8S3ITMz8/Xr135+fghwWGrKevXqGRoaOjg4oEZcvXr1/fv37Eg+
xaNcUPhJChIEQRDVCu6hhHMYubfKz89na3A4OztraGjIysrC8TVq1GjcuHEH
Dx58/PhxWloa9eoSNRVoudzc3JcvX+7Zs2fYsGEo+XJyclJSUiYmJo6Ojhs3
brx//z5btuPTp098+hKrU2xJGhJ+BEEQRDUBgq2kpITnWuEb2F9YWJiYmPjk
yZNjx47Nnj27devWioqKKioqjRs3dnFx2bt3b0hISHp6Os3dIGoqfFwrYp+H
Dx9u377dycnJ2Ni4tgg9PT3owKNHj0ZFRbH1poUBFN8g1UcQBEFUE4Qr5HJX
xZwdJF9AQMDu3bvHjRvHFimQkpJq0KDBkCFD9uzZExYWxrIxE0RNhYU/5aLZ
THFxcf7+/h4eHgMGDEAtkJeXl5GRQSjk5ubm5+f35s2bgoKCoqIidiLlLCII
giCqJ7wtgrsqOK/09HRIvm3bto0fP75ly5bwcdLS0rq6uoMHD968efOjR4/S
0tJY+0Y5+Tii5sIXIszLy0tJSbl///6uXbvGjBljaWkpJyenpqZmY2Pj6uq6
f//+J0+eoFKwusB6e/mi1VX9EARBEATx/8M6ofhSGnBwrJXPw8Ojf//+zZo1
g2uD5DMxMenVqxd04N27dz9+/IiDqW+XqNnwka7lFctwIBpiXb3Dhg0zMjKS
kJBA1bCwsJg0adLhw4cjIyPZQr28Y5dUH0EQBFGt4O6JjUrKyMgIDg729PSE
XzM0NJSUlKxXr56mpmaPHj0WLVp0+/bt2NhYatwjfgZYBj+2zYRcaWlpSkrK
vXv3duzY4ezs3LBhQ3l5eWVl5bZt206ePPncuXPv3r1jiVzYWTSojyAIgqiG
sEmIhYWFoaGhXl5erA9LSkoKkk9HR6dTp07Lly//7bffIPmys7OFa1GVk2sj
ai48wGGLzjDhl5mZicho69atEH4mJiaIjCD8GjVqtH79+jt37rDBD7yHl2oH
QRAEUU34owL4qZycnPfv3589e3bChAmNGzdWUlKqVauWurp6hw4d5s2bd/ny
5ZSUFD7hl3k01oFFfo2okZSJIS8vLyEhITAwcMuWLQMGDDA1NUVlUVRU7N+/
/+7du+/du4cDykVC8Yut4iQFCYIgiH8VvqJuJQoLC8srxiwlJSX5+fktXry4
bdu2bMauiopK69atp06devjw4VevXjFv9UW++wMRxL/OV0o7FN2HDx9u3rzp
7u7et29fExMTOTk5S0tLVJYDBw5ER0ezxnN2HRYZMdhQChJ+BEEQxHeArTfK
5mLwhohCESEhIcuXL+/Zs6ehoSFcmIyMjIGBwZAhQw4ePAjJx/UhqT7iJ+Hr
pR3CLzU1NSgoyMPDo3v37lpaWoiVWrRoMX78eF9f36ioqKysrHLR4EB+orjg
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
uhQeHp6VlVVpiCBZDIIgiO8GV3psVB7bhhSE5Dt48ODUqVMRrWtoaEiIgA23
tbWFVb9+/XpycjIP20n1EcTPBpvowfsIsJGRkQFdd+7cucWLF3fu3NnU1BTa
r169enp6evb29kuXLoVJefDgAaLFnJwcYfcu79XlrX9V+mQEQRA1Ft7DyyQf
7C2C8Tdv3pw8eRKSDzG7lpYW9J6ysnLDhg379Okzd+5cHx+f6Oholru1UkoW
Un0E8fMgHL7Lensh596+fXv79u1NmzY5OjpC79WpU0daWhpmpFWrVs7OzmvW
rPH19Y2MjCwoKKh0NS7/SPgRBEH8G/AB1Wygdblowc3Q0NB9+/ZB8tnY2Gho
aEhKSiJgt7a2HjVq1P79+69fv84WXeImWpzkI7tNEDUb4WBgHj/m5+enp6ff
v39/9erV3bt3Nzc3h+RjizYaGBh069Zt0aJFEH6vXr3Kzc0VN2uDrAdBEMQ3
h5tWGG3oPRjhiIiIw4cPDx06FDJPWVlZSkpKVVXVyspq0qRJ3t7e+DY5OblS
Nj9q6yOInxPew8tVH+uohYlITU319/ffs2fPwoULBw0a1LJlSxUVFWg/fX39
jh07IqiEPQkODk5LS6uUDJBB1oMgCOLfAPa2tLQ0JycHoffly5c9PDxGjx7d
pEkTFp4jTnd0dFyxYoWfn19YWFhmZubnebdYYhZSfQTxs8Hycwr3wJgwg4Cv
CgsLk5KSgoKCtm3b5urq2rRpU9Z3gHCycePGQ4YMgfCDVUGwiZATJ/JLsXXc
quKBCIIgajgZGRnJyckxMTEXLlyYO3euvb29iYmJtrY2m3yHIH379u2w27De
RUVFfPpGpQm/pPoIgmAIM7RDy6Wmpt67d+/XX3+dMmVK9+7dDQ0NZUTAvAwd
OnTjxo3Xrl1DyMmyAcDCCONKph4pwydBEMQX+cpwaGY/K+1EiP327durV696
enpOnTq1ffv2RkZGiMdNTU27du06c+bM3bt3BwQEpKSksF6Y7/s0BEH8ePB5
YazbFxvZ2dlRUVGIK1etWtWzZ0/oPQSVsDMWFhYdO3acPn36kSNHYIhgjoTN
ff/3f//HFoNj12FQ9maCIAiOcBUMYYMbwmduillW/OLiYtjYyMhIX1/fJUuW
9O/fHxZYSUlJRUUFNnnYsGGrV6/+7bffWFL9SutuEARBfB0YjdLSUmEyqOTk
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
9y63dTyq5cNXKmnOL44zJANIEMR343OjVF6xqCW22cJG+DMvLw9RbURExIUL
F7y9vdesWTNp0qTu3bs3a9YMZlBaWhqWsG3bthMmTGArbnz48OEPMVTZoxIE
QfwN2DgWWL+cnJyEhISoqChfX183NzeYOAMDAzURRkZGlpaWI0aMcHd3h/BL
Tk6G8CsWwYay8Evxy/KkpqT6CIL4/rD1zlgKPuH+sj8vY1QuauVLSkoKCgpC
YLtw4cJBgwbZ2Njo6+vLy8tLSEioqKjAAHbp0mX+/PlHjhzBYTCAZX/OjkWq
jyCIH4XPlRgM4NWrV1esWOHs7NyyZUstLS02oMXCwqJv374rV648ffp0YGDg
mzdvcnNzhScKOzhI9REEUYWISzAlnK9RUlKSnZ0dERHh4+OzYcOGCRMmtG/f
3tjYWEFBQUpKSlNTs0mTJu3atRs2bBgC3gsXLjx//jwlJaWoqEic5CPVRxBE
taWSGOMJB4qLiyH8njx5cvz48Tlz5nTo0AFhr4oIbFhaWjo4OEybNm337t2P
Hj3KyMgoLCxkITPLDPPFi5PqIwiiqmDGraxirQ02wjk/P//9+/cwYnv27HF1
dW3btq2pqamioqKcnJyysjJLYTp58mQYukuXLkEZwirm5eUxWydMU0/2jSCI
HwLYPZ6ZSghLO1BQUPDu3bvz588vXbq0f//+bdq00dPTg/BDFKyrq9u6devR
o0dv3rz53LlzsIfQfuxcbveorY8giOpAWUU2FdYQV1JSkpKS8ubNmwcPHvj4
+MCIwZS1aNFCXl6+Xr16MjIyJiYm7du3Hzp06JIlS7y9vZ89ewa9V1RUVFpa
KkzAQvaNIIgflC8ut/H/tXfmYTml/x83ltCoVErRopCo7CGiiGiqqVFkCTMq
hslOvvZtkF18bWWbhVJSdiqRFC22LGlRkrRoU4mZ33cev/f1fK7OdeZpGWaM
GXxef3SdTqdzznOe+9z3694+N63eS3PZ9u/fv2zZMhsbGwrpjLqwurq6sbGx
ra2tu7v7vn37rl27hlqwzDk5V2QY5p+ien8rLUqelZUVERGxa9eu+fPnjxw5
EoLXvn17JSWl+vXrN2/evFu3bpDA9evXHz16NDY29v79+9nZ2cjcaJQgratL
6xz9U5+LYRjmLyKpCuoiZJIS6ew2VIqpwxfuhwzQ29vbw8OjX79+urq6yCRR
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
4b2jOVbwwDFjxnh5ecEM8Xo+fPjw2bNnOEN5ebkQ70VoY/9nnwbDMAzz70FS
FcZZpt1P7F15eXkJCQmhoaEHDx5cs2YNyqOBAwei3DE0NFRRUaFIL61aterS
pYudnZ27u7u3tzeOPHv2bFRUVHx8fEpKSn5+Pq3wS2Vcjddi62M+DmpLz8Lq
1TTkFduoEBUXF2dlZd27d+/KlSshISHbtm3z9PTE+9WuXTuhcQ/vl4aGBl63
/v37Ozo6fvfddytWrPDz8zt+/Pj169fhexRF83VVE7rMuEGGYRjmU6a2EkEc
e1lY+Z0KkZKSktzcXFrZjSK9LFy4EPqHYkhTU5NGGTVv3hzuh9KqW7dugwYN
cnV1nT9/PkoxlGWJiYkZGRkyTYsC1Vf1rW39KYb591Ob9cl0tuJ1KCwsTE1N
DQ8P9/f3R13Jw8PD2trayMhIXV1dXl5eTk6uYcOGtHIuKlnffPPNxo0bAwMD
L1++DNl78OCBOHgmmaSgfEJ4Fho3yDAMw3yy1BagtbbGARQcv/zyC0oT/EQp
A3+LiYk5ceKEn5/fsmXLRo8ebW5ujqJKT09PQ0NDVVUV+qekpKSlpdWnTx8n
JydPT0+UaAcOHMB/QRrT0tIyMzNxEpRZxcXFODlbH/MxUZv1vZSCNI/En5SU
FBsbGxoaunv3bi8vL/iejY0N+R5en5YtW7Zp06Zjx46mpqbwQLxiqEAdPHjw
2rVrjx49evHiBd4amTbz2l5ebvFjGIb5xJGIQkZQa4BQgogjS4jXWRP+kRoQ
SkpK4Gy3b9+Oi4sLCws7dOjQli1b5s6dO3LkSEtLy7Zt26Lkatq0qZqaGlSw
Q4cOvXv3trW1nTp16vLly/fs2ePv7x8cHBweHn737t2CggK2PuZjog7re/bs
GU3LXbdu3Zw5c1xcXPr3729sbGxgYNC6dWtFRcXPP/+8VatWvXr1srOzg+lt
3bo1MDDw3LlzV69eTU9PLywsLCsrE7+S4mV5//d7+A1iGIZh/gR19FihxKmo
qMjJyUlISAgKCtq4ceOCBQvgfrT+OwoyTU3NFi1aqKio4CeKNpRxo0ePhv5B
EdeuXQv9i4qKorFJpaWlKNSoXRHnFCxUJq7s62oR/2rcI+znso+Robb0LJOE
xGlPQOg5RSp9XVUPouPp4NdV8fewXV5eXlxcjFSdm5ubmZmJWhJqOrt3754+
fbq1tXX79u3xUsD0lJWVsaGhoaGlpdWpU6ehQ4d6enri7YiMjES1CK8GXgcY
ozDT6r0/MIZhGOYTorYiUhgEWFlZmZ+f/+DBg9jY2IiICLicj4/P/Pnz3d3d
hw8fPmDAAJRlOjo6CgoK8EAjI6Pu3bubmppaWFjgr7Ru1KFDh8LCwuLi4rKy
slDMCaFlJVWrCdCAJaG0rREqFlnzmLqpOz3XWH14Kyj6JapCN2/eRKoODAzc
s2cPKkTz5s0bN27c4MGDe/TooaurC9+jgRAmJiaoJTk5OX333XcrV6708/M7
efJkdHQ0RBHSiCQtrrz89dtjGIZhmDqorZQUx12hniZaTQDahgIrPj4+NDR0
165dCxcuHDNmzMCBA9XU1Fq2bKmhoYENGvunqqqKPZaWligNcdjOnTtDQkLg
jYmJiSg0UeQJgV/EN/OrCCoT6775v/8JMR8SdbT1VR/V8LpqtpG46kEIyRKa
h4oPEurz589zc3ORdFNTU6FtqMt4e3vPmDFj9OjRNjY2sDskfiR7pPlWUrBn
2LBhEydOpBgs58+fv3PnztOnT0tLS/EqiZv1fhPFVH/fz4thGIb5lKjD+mTG
EdF+KhNRcj18+BD+FhYWdvDgwbVr17q5uaH4++KLL/r27WtkZKStrY0SsHHj
xpqamh06dBgwYMCIESPc3d09PT1p+F9wcDDKQZyBGj1Qqr5VkcfxypgaqcP6
hFQtXkemtvMIPbkFBQVI6vfu3YPpIdHu3bt38+bNEDlXV9chQ4b06NGjbdu2
8D0dHR0tLS0a5+Dk5DRp0qRly5bt2LEjMDDw9OnTcXFxSOeo5sisUUhDbcWL
3fztD4hhGIb5hKmtfBQfIG4P+eWXX2hPRUVFSUlJUVHR48eP7969GxMTc+rU
KegcCrvJkyfb29v37NlTX19fXV1dWVmZ5i2Cdu3amZqaoricOHHi3LlzfXx8
QkNDExISUCbSOvKAykEKK01ldGVlpVg+xXf+Dz025l/KHzb0Cc19kqqgKOL5
TUKL3/PnzyFp2dnZV69eDQkJ8fX1Xbx4MUUy79WrF+wOjodU3aJFC1VVVRUV
la5duw4bNgz1mqVLlx44cODy5cvJycnQxby8vPz8fKTt8vJynJauQrUViWiK
PcMwDMO8B+poGKntePE/0jbKypcvX6KAS0pKioiICAgI2LZt26JFizw9PZ2c
nCwsLHr06NGpU6fWrVtraGjQT5r86+joiGNWr169b9++48ePX7hwgeKVocTM
yMgoKCioe3w7l5iMDLUl5rqDG6OKUVpa+uTJk/v378fHx0dHR58+fRqyh2S5
cuXKqVOnOjs7I7nq6urKy8s3bNiwUaNGkD1DQ8N+/frZ2tqOGDFi+vTpmzdv
DgoKCg8Pv3fvHiovdNrq16IazeuqzmXhtnlmLsMwDPN3U1spKbR+VC8oxXuE
khRHUryyp0+fQthQeiYmJsbExJw8eXLXrl2rVq2aOXPmqFGjHBwcBg0aZGBg
oKKi0rJlSx0dHehf9+7draysRo4c6e7ujiNhjD/++CMkEOUvxI/OX32JN44A
w1Sn7vQsHEPqhRT7Wpq0ioqKkGLDwsL27t2LFDhv3jwXFxc7O7sBAwagwmJs
bNyuXTtNTc3mzZvLyck1btwY1RZzc3MPD4+1a9cePHgwNDQUoogzwBtzc3Mh
kHShGkcgSKp6coV5wZKqKfOcnhmGYZi/lbob+gS5EvZQGEDxWHdxw4V4VDz+
hFK1pKTk7t27ly5dCg4Ohv5t3rx5/vz5KE9heiYmJihMqemvTZs2Xbt2RSFr
bW3t7Ow8ceJEWOLGjRtRnsbFxd28eTMtLQ0yiVK1sLCwoqKCY1wwNVJbehYn
aSSe8vJymF5+fn5KSsqtW7ciIyN/+umn5cuXu7q6IhEiZSorKzdq1KhevXoN
GjRQVFREDUVbW7tt27Y9e/Y0MzNzdHRcvHjxkSNHrl+/jmoOzc4gsaTEL9SG
JL+fOSL5/dgJYfsPJy4xDMMwzL8fFGcoEwsKCuBsycnJ8LcLFy4EBgZu2rQJ
5SaFf/niiy+GDRs2VIqlpSUK1s6dO+Nn//79bWxsvv76ay8vr3Xr1vn4+AQE
BCQkJNTY8yv5/Siptx0xJQ4LI+EBV3+ZOuyrNiUTu5nQkFvbtyA+WPiXOmI/
CvUUHFZcXIykiJrI8ePHqQ8XtQykNCQ5PT09NTU1FRWVzz77DL7XuHFjKJ+u
ri5UkMbsId3u3bv31KlTqIykpqbm5eUheYuboGtUTYZhGIb5FKDVQF6+fEnR
aF+9ekUDqCBv4eHhP/3005YtW1DsLlq0aN68ebNmzXJwcLCwsDA2NkZRq6mp
SfMiu3XrZmtr6+LiMnfuXD8/v4iIiKSkpKysrPz8fBhgYWFhSUkJzk8LGVBj
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
XfH/RWUQOg==
     "], {{0, 920}, {850, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{217.4888888888895, Automatic},
   ImageSizeRaw->{850, 920},
   PlotRange->{{0, 850}, {0, 920}}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{
  3.7162686423922296`*^9},ExpressionUUID->"9736eee3-879c-41fb-a4e5-\
c4bcc176bd40"]
}, {2}]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Solution",
  FontVariations->{"Underline"->True}],
 "\nFrom Kepler\[CloseCurlyQuote]s First Law, the stones travel in an ellipse \
with the Earth\[CloseCurlyQuote]s center as one of its foci. "
}], "Text",
 CellChangeTimes->{{3.7205066088757277`*^9, 
  3.7205066477274537`*^9}},ExpressionUUID->"792efd11-eb6d-47a3-b39a-\
88eb9e2624a7"],

Cell[TextData[{
 "Let us orient our axes so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", 
    OverscriptBox["x", "^"]}], TraditionalForm]],ExpressionUUID->
  "bddd7d26-dc54-43e8-a7a0-d3e72165ae29"],
 " points to the right and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", 
    OverscriptBox["y", "^"]}], TraditionalForm]],ExpressionUUID->
  "de6671ac-50f9-45b7-98dd-ab4d1f7a554e"],
 " points up away from the center of the Earth. Given \
Kepler\[CloseCurlyQuote]s First Law, the rock must travel in an ellipse. \
Because the initial velocity is directly horizontal - perpendicular to the \
line between yourself and the center of the Earth - this implies that:\n1. \
The starting point of the rock will be the highest point\n2. The semi-major \
and semi-minor axes of the ellipse must be along the ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["y", "^"], TraditionalForm]],ExpressionUUID->
  "a42da06d-d72d-46be-b8ce-3fcc53b18bd1"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "^"], TraditionalForm]],ExpressionUUID->
  "d4e40a5c-c4c2-4a10-92fb-d1de6d6f0601"],
 " directions, respectively\n3. The orbit of the particle must be symmetric \
in the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "fe06527b-e989-4210-a304-e510bd690259"],
 "-direction"
}], "Text",
 CellChangeTimes->{{3.62206113502514*^9, 3.6220611452527246`*^9}, {
  3.6220613751778755`*^9, 3.622061391662819*^9}, {3.622061442581731*^9, 
  3.622061466955125*^9}, {3.622061533429927*^9, 3.6220618662019606`*^9}, {
  3.622061897169732*^9, 3.6220620201627665`*^9}, {3.7162675145566688`*^9, 
  3.7162675243794255`*^9}, {3.720506637601433*^9, 
  3.720506651576915*^9}},ExpressionUUID->"3bf560b8-4c1b-4bc0-9c70-\
463e2da9b830"],

Cell["\<\
Here we see what the orbits can look like, with the center of the ellipse \
shown in orange and the two foci shown in dark green:\
\>", "Text",
 CellChangeTimes->{{3.622062029601307*^9, 3.622062040477929*^9}, 
   3.7162692074002285`*^9, {3.7162692763568945`*^9, 3.7162692864375563`*^9}, {
   3.7164378874945445`*^9, 
   3.716437887986411*^9}},ExpressionUUID->"7b32d620-0c9f-4268-8db5-\
7d4bbcf54a1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", "y0", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"y0", "=", 
        RowBox[{"-", "yNeg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "[", "Gray", "]"}], ",", 
             RowBox[{"FaceForm", "[", "backgroundColor1", "]"}], ",", 
             RowBox[{"Triangle", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "0.05"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.05", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "ybar"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
           RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{"showOrbit", ",", 
             RowBox[{"{", 
              RowBox[{"color4", ",", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "y0"}], "}"}]}], "}"}], "]"}], ",", 
               "color2", ",", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "y0"}]}], "}"}]}], "}"}], "]"}], ",", 
               "color6", ",", "Thick", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "y0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "y0", " ", "ybar"}], "+", 
                    SuperscriptBox["ybar", "2"]}]], ",", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"y0", "-", "ybar"}], "]"}]}], "}"}]}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"color1", ",", "Thick", ",", 
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "ybar"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"0.05", "+", 
                   RowBox[{"(", 
                    RowBox[{"0.7", "-", "y0"}], ")"}]}], ",", "ybar"}], 
                 "}"}]}], "}"}], "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"270", ",", "200"}], "}"}]}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"yNeg", ",", 
          RowBox[{"-", "0.4"}], ",", 
          RowBox[{"font", "[", 
           RowBox[{"\"\<initial velocity\>\"", ",", "13"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{
         RowBox[{"-", "ybar"}], "/", "2"}], ",", 
        RowBox[{"ybar", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ybar", ",", "1.2", ",", 
          RowBox[{"font", "[", 
           RowBox[{"\"\<initial height\>\"", ",", "13"}], "]"}]}], "}"}], ",",
         "1.2", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"showOrbit", ",", "False", ",", 
          RowBox[{"font", "@", "\"\<show orbit\>\""}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
      RowBox[{"Initialization", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"(*", " ", 
         RowBox[{"Primary", " ", "colors", " ", "for", " ", "figures"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"colors", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "color1", ",", "color2", ",", "color3", ",", "color4", ",", 
             "color5", ",", "color6"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "10", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "5", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "6", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "9", "]"}], ",", 
             RowBox[{"Lighter", "@", 
              RowBox[{
               RowBox[{"ColorData", "[", "97", "]"}], "[", "7", "]"}]}]}], 
            "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Secondar", " ", "colors", " ", "for", " ", "backgrounds"}],
           " ", "*)"}], "\n", 
         RowBox[{"backgroundColors", "=", 
          RowBox[{
           RowBox[{"{", "backgroundColor1", "}"}], "=", 
           RowBox[{"{", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.99, 0.97432, 0.91748], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.66, 0.6495466666666667, 0.6116533333333334],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               "RGBColor[0.99, 0.97432, 0.91748]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.99, 0.97432, 0.91748]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.99, 0.97432, 0.91748],
             Editable->False,
             Selectable->False], "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"font", "[", 
           RowBox[{"text_", ",", 
            RowBox[{"size_Integer:", "14"}], ",", "opts___"}], "]"}], ":=", 
          RowBox[{"(", 
           RowBox[{"Style", "[", 
            RowBox[{"text", ",", "size", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", 
             "opts"}], "]"}], ")"}]}]}], ")"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy1soQwEAh/Hx4JJlyoMpy+2BECON5XqoNbFCiDA2IyPNLTyxJmsR5d7q
bOSBlHJpZC+WhAxP5pINRSkOs8hlWnL+5+Hr9/RFylWljd4sFiucDpqPrRKt
55l4TI5SQEutSAlPpLI2uKEydsN2naQHTmXcjkCT5WgUBgg+Z6CN5MxCudjf
CCOu+xdgda50CS5alxjfxa4V6CRjd+H6s2YfqnNsB1AbMvgEH8Icb/B+yPYB
4wR3jPPnWz+Qe0O6oY87VJK+RhHFlXzGqYudaejoe9HD+nLToJCW3xk8BAPv
ZROQbUidhBGvFfGZtMdnvAQo30txDtNyT/WM/tXflGKLIoJ0fy74FSP8gV7a
bDdcTuN4N9K2fKvY0O7VVNhM26snqqCMV9ch2aaIYbG6C3YI85bhgu/bKjSP
+eVwzBRx5LEzSpNu82FlYrwIzo2TNdBkKGiAlwElrVCz+auCX7qsbuYvKxqA
fiFXulBal0c2DstI5WE0bbny3Qr/AcGlEkw=
  "],ExpressionUUID->"a890f69e-fdc9-48f3-8d65-cbfc529727bd"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`y0$$ = 0.4}, 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`showOrbit$$ = False, $CellContext`ybar$$ =
       1.2, $CellContext`yNeg$$ = -0.4, Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`yNeg$$], -0.4, 
         Style["initial velocity", 13, FontFamily -> "Times"]}, 
        Dynamic[(-$CellContext`ybar$$)/2], 
        Dynamic[$CellContext`ybar$$/2]}, {{
         Hold[$CellContext`ybar$$], 1.2, 
         Style["initial height", 13, FontFamily -> "Times"]}, 1.2, 10}, {{
         Hold[$CellContext`showOrbit$$], False, 
         Style["show orbit", 14, FontFamily -> "Times"]}, {False, True}}}, 
      Typeset`size$$ = {432., {155., 165.}}, Typeset`update$$ = 0, 
      Typeset`initDone$$, Typeset`skipInitDone$$ = 
      False, $CellContext`yNeg$82753$$ = 0, $CellContext`ybar$82754$$ = 
      0, $CellContext`showOrbit$82755$$ = False}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`showOrbit$$ = False, $CellContext`ybar$$ = 
          1.2, $CellContext`yNeg$$ = -0.4}, "ControllerVariables" :> {
          Hold[$CellContext`yNeg$$, $CellContext`yNeg$82753$$, 0], 
          Hold[$CellContext`ybar$$, $CellContext`ybar$82754$$, 0], 
          
          Hold[$CellContext`showOrbit$$, $CellContext`showOrbit$82755$$, 
           False]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> ($CellContext`y0$$ = -$CellContext`yNeg$$; Graphics[{{
             EdgeForm[Gray], 
             FaceForm[$CellContext`backgroundColor1], 
             Triangle[{{-0.05, 1}, {0.05, 1}, {0, $CellContext`ybar$$}}], 
             Disk[]}, 
            PointSize[0.025], 
            If[$CellContext`showOrbit$$, {$CellContext`color4, 
              Point[{{0, 0}, {0, $CellContext`y0$$}}], $CellContext`color2, 
              Point[{{0, 0}, {0, 2 $CellContext`y0$$}}], $CellContext`color6, 
              Thick, 
              Circle[{0, $CellContext`y0$$}, {
                
                Sqrt[((-2) $CellContext`y0$$) $CellContext`ybar$$ + \
$CellContext`ybar$$^2], 
                
                Abs[$CellContext`y0$$ - $CellContext`ybar$$]}]}], \
{$CellContext`color1, Thick, 
             Arrowheads[Medium], 
             
             Arrow[{{0, $CellContext`ybar$$}, {
               0.05 + (0.7 - $CellContext`y0$$), $CellContext`ybar$$}}]}}, 
           ImageSize -> {270, 200}]), 
        "Specifications" :> {{{$CellContext`yNeg$$, -0.4, 
            Style["initial velocity", 13, FontFamily -> "Times"]}, 
           Dynamic[(-$CellContext`ybar$$)/2], 
           Dynamic[$CellContext`ybar$$/2]}, {{$CellContext`ybar$$, 1.2, 
            Style["initial height", 13, FontFamily -> "Times"]}, 1.2, 
           10}, {{$CellContext`showOrbit$$, False, 
            Style["show orbit", 14, FontFamily -> "Times"]}, {False, True}}}, 
        "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{513., {253., 263.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>(($CellContext`colors = ({$CellContext`color1, \
$CellContext`color2, $CellContext`color3, $CellContext`color4, \
$CellContext`color5, $CellContext`color6} = {
            ColorData[97][1], 
            ColorData[97][10], 
            ColorData[97][5], 
            ColorData[97][6], 
            ColorData[97][9], 
            Lighter[
             ColorData[97][
             7]]}); $CellContext`backgroundColors = \
({$CellContext`backgroundColor1} = {
            RGBColor[0.99, 0.97432, 0.91748]}); $CellContext`font[
           Pattern[$CellContext`text, 
            Blank[]], 
           Optional[
            Pattern[$CellContext`size, 
             Blank[Integer]], 14], 
           Pattern[$CellContext`opts, 
            BlankNullSequence[]]] := 
         Style[$CellContext`text, $CellContext`size, FontFamily -> 
           "Times", $CellContext`opts]); Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.7162765639965315`*^9, 3.7162765773758583`*^9}, {
   3.7164378737893515`*^9, 3.7164378769756074`*^9}, 3.7164419060517216`*^9, {
   3.719505760628933*^9, 3.7195058000625677`*^9}, {3.719505861023977*^9, 
   3.7195058660851407`*^9}, {3.719505949403507*^9, 3.71950602974229*^9}, {
   3.7195126690792117`*^9, 3.7195126858602924`*^9}, {3.71951271604944*^9, 
   3.7195127784731016`*^9}, {3.720506254543915*^9, 3.720506282632532*^9}, 
   3.7205067114284725`*^9, {3.7205067428268156`*^9, 3.7205067586310325`*^9}, 
   3.7209032009143844`*^9, 3.720903600237887*^9, {3.7209036451911297`*^9, 
   3.7209036746070695`*^9}, {3.720924267053338*^9, 3.7209242993958044`*^9}, 
   3.7209247347226086`*^9, {3.72094521166861*^9, 
   3.720945239773735*^9}},ExpressionUUID->"fe9c73f0-6d99-4b3a-b735-\
c3f4490acba7"]
}, {2}]],

Cell[TextData[{
 "If we look closely at Newton\[CloseCurlyQuote]s drawing, we see that it \
does look correct. However, note that:\n1. If the rock travels ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "4"], TraditionalForm]],ExpressionUUID->
  "023f59b3-9b7b-44f2-aaf5-9a4b1e25a415"],
 " of the way around the world, its final velocity as it crashes to the \
ground will not be parallel to the ground but instead will point towards the \
Earth\n2. If the rock travels more than ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "2d1f317b-0892-47fd-934e-7cccbcd7198d"],
 " way around the world, then it must be in an orbit and will not reach land \
until it returns to its starting position. In particular, a rock cannot be \
thrown ",
 Cell[BoxData[
  FormBox[
   FractionBox["3", "4"], TraditionalForm]],ExpressionUUID->
  "7689e860-f823-48ad-b5a2-2864d6848bc0"],
 " of the way around the world! \[EmptySquare] "
}], "Text",
 CellChangeTimes->{{3.6220620580109315`*^9, 3.622062228294671*^9}, {
  3.720506671763482*^9, 
  3.720506672194996*^9}},ExpressionUUID->"161e79c0-db60-4848-8995-\
8d23dabbb03f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clown Cannon", "Subsection",
 CellChangeTimes->{{3.720298318260539*^9, 3.7202983221491365`*^9}, {
  3.7205005185793915`*^9, 
  3.7205005190953083`*^9}},ExpressionUUID->"51d6b6cd-9712-4af5-b934-\
2fd849548e0e"],

Cell[TextData[{
 StyleBox["Example",
  FontVariations->{"Underline"->True}],
 "\nDuring an incredible ",
 StyleBox["Cirque Du Soleil ",
  FontSlant->"Italic"],
 "performance, two cannons A and B separated by a distance ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "36265c6a-6cf4-4417-817c-acf0c5d1e92f"],
 " simultaneously fire clowns into the air. Both clowns are launched at \
velocity ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "2e45bdc1-5b6b-475b-ab2d-71e8f22a1ac0"],
 " but at different angles ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "A"], TraditionalForm]],ExpressionUUID->
  "7f4aa87d-6e22-4148-9e5b-13b988899c23"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "B"], TraditionalForm]],ExpressionUUID->
  "c104d2b3-074b-41ae-be06-ec2facd156ce"],
 " so that the two clown high-five in midair and then land in the other \
cannon! \n1. Assume ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "B"], TraditionalForm]],ExpressionUUID->
  "8559e925-2291-4ca7-865f-28748b542ddf"],
 " is fixed. Find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "A"], TraditionalForm]],ExpressionUUID->
  "7daafea9-390e-4229-984d-47453b519aad"],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "B"], TraditionalForm]],ExpressionUUID->
  "1c2a8ec5-24a4-4693-9aae-8c95896d2b3b"],
 " so that the two clowns cover the same distance ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "98c0e945-be3d-4884-818c-94508a723c11"],
 " but do not collide in midair\n2. Will both clowns reach the maximum height \
of their trajectory at the same time?\n3. What is the minimum distance \
between the two clowns during their trajectory? In other words, how far do \
the clowns have to reach to high five each other? (Check your answer in the \
limits ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "A"], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"81230fc3-53c9-4b34-ba2c-2db28e778362"],
 ", ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "4"], TraditionalForm]],ExpressionUUID->
  "959dfdc7-fc85-463a-aeae-7b6a2b70f0fb"],
 ", and ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]],ExpressionUUID->
  "738242af-969c-4afb-9c8c-4865885c5118"],
 ")"
}], "Text",
 CellChangeTimes->{{3.621375240809927*^9, 3.6213752490613985`*^9}, {
   3.621375346186954*^9, 3.621375419462145*^9}, {3.621375459168416*^9, 
   3.621375564241426*^9}, {3.621376065072072*^9, 3.621376111107705*^9}, {
   3.6213765819136333`*^9, 3.6213766064210353`*^9}, {3.6843771387843957`*^9, 
   3.6843771391906667`*^9}, {3.6843771740531216`*^9, 3.68437718460244*^9}, 
   3.689219063998777*^9, {3.7204998278820653`*^9, 3.720499837900876*^9}, {
   3.720500137502571*^9, 3.720500155605095*^9}, {3.720500226810652*^9, 
   3.7205002289492407`*^9}, {3.7205002894561467`*^9, 3.720500328113561*^9}, {
   3.7205005203957777`*^9, 3.7205006335033083`*^9}, {3.720500712144037*^9, 
   3.7205007426476154`*^9}, {3.720500793415926*^9, 3.7205008563685074`*^9}, {
   3.7205008998215*^9, 3.720501134983098*^9}, 3.7205016771497498`*^9, {
   3.720501868598394*^9, 3.7205018962229967`*^9}, {3.7205063317406487`*^9, 
   3.720506342751609*^9}, 3.720981870612306*^9, {3.7209819023071876`*^9, 
   3.720981929781381*^9}},ExpressionUUID->"1d46ed77-be31-47c9-833d-\
0e8911afcacb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", "10."}], ",", 
      RowBox[{"v", "=", "1."}], ",", "d", ",", "d0", ",", 
      RowBox[{"s1", "=", "0.004"}], ",", 
      RowBox[{"s2", "=", "0.0012"}], ",", 
      RowBox[{"\[Theta]A0", "=", "0.59"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox["v", "2"], "g"], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]A"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"d0", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox["v", "2"], "g"], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]A0"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"v", "*", "t", "*", 
               RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "*", "t", "*", 
                RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], "-", 
               RowBox[{
                FractionBox["1", "2"], "g", " ", 
                SuperscriptBox["t", "2"]}]}]}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"2", "*", "v"}], "g"], 
              RowBox[{"Sin", "[", "\[Theta]A", "]"}]}]}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.01"}], "d0"}], ",", 
                RowBox[{"1.012", "d0"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.0015"}], "-", "s1", "-", "s2", "-", 
                 "0.003"}], ",", "0.05"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
           RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d0", "-", 
               RowBox[{"v", "*", "t", "*", 
                RowBox[{"Sin", "[", "\[Theta]A0", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"v", "*", "t", "*", 
                RowBox[{"Cos", "[", "\[Theta]A0", "]"}]}], "-", 
               RowBox[{
                FractionBox["1", "2"], "g", " ", 
                SuperscriptBox["t", "2"]}]}]}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"2", "*", "v"}], "g"], 
              RowBox[{"Cos", "[", "\[Theta]A0", "]"}]}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}]}], 
          "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"d0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"1.1", 
                   FractionBox[
                    SuperscriptBox["v", "2"], 
                    RowBox[{"2", " ", "g"}]]}]}], "}"}]}], "}"}], "]"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Gray", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"d0", ",", 
                    RowBox[{"-", "s1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "s1"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"d0", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "+", "s2"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"d0", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "-", "s2"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "+", "s2"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "-", "s2"}]}], "}"}]}], "}"}]}], 
                "}"}], "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"font", "[", 
                 RowBox[{"\"\<d\>\"", ",", "Italic"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"d0", "/", "2"}], ",", 
                  RowBox[{
                   RowBox[{"-", "s1"}], "-", "0.004"}]}], "}"}]}], "]"}]}], 
             "}"}], ",", "Purple", ",", 
            RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"d0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", "Black",
             ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"0.01", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], "}"}]}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"d0", ",", "0"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"d0", ",", "0"}], "}"}], "+", 
                  RowBox[{"0.01", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], "-", "\[Theta]A0"}], "]"}]}], 
                    ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], "-", "\[Theta]A0"}], "]"}]}], 
                    "}"}]}]}]}], "}"}]}], "}"}], "]"}], ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0.004", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "\[Theta]A"}], "}"}]}], "]"}], ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"d0", ",", "0"}], "}"}], ",", "0.004", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Pi]", "/", "2"}], "+", "\[Theta]A0"}], ",", 
                "\[Pi]"}], "}"}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{
              "font", "@", 
               "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(A\)]\)\>\""}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "2"}]}], "}"}], ",", 
                RowBox[{"0.009", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]A", "/", "2"}], "]"}], ",", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]A", "/", "2"}], "]"}]}], "}"}]}]}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{
              "font", "@", 
               "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(B\)]\)\>\""}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"d0", ",", "0"}], "}"}], "+", 
                 RowBox[{"0.007", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "2"], "+", "\[Theta]A0"}], 
                    ")"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "2"], "+", "\[Theta]A0"}], 
                    ")"}]}], "]"}]}], "}"}]}]}]}], "]"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]A", ",", "\[Theta]A0", ",", 
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"font", "@", "\"\<\[Theta]\>\""}], ",", 
            RowBox[{"font", "[", 
             RowBox[{"\"\<A\>\"", ",", "12", ",", "Italic"}], "]"}]}], 
           "]"}]}], "}"}], ",", "0.01", ",", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "0.001"}]}], "}"}], ",", 
      RowBox[{"Initialization", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"font", "[", 
          RowBox[{"text_", ",", 
           RowBox[{"size_Integer:", "14"}], ",", "opts___"}], "]"}], ":=", 
         RowBox[{"(", 
          RowBox[{"Style", "[", 
           RowBox[{"text", ",", "size", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "opts"}],
            "]"}], ")"}]}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6212796190365133`*^9, 3.6212797418955407`*^9}, {
   3.6212797749944344`*^9, 3.621279944807147*^9}, {3.621279974843865*^9, 
   3.62128003613737*^9}, {3.621280086294239*^9, 3.6212801183020697`*^9}, {
   3.6212801599554524`*^9, 3.6212802494985743`*^9}, {3.6212802928490534`*^9, 
   3.621280311268107*^9}, {3.621375586666709*^9, 3.6213756300411897`*^9}, {
   3.6213756706755133`*^9, 3.621376013886144*^9}, {3.621376121748314*^9, 
   3.6213763672403545`*^9}, {3.6213764615827513`*^9, 
   3.6213764775926666`*^9}, {3.6213765181859884`*^9, 
   3.6213765259374323`*^9}, {3.621651987432435*^9, 3.6216519892424374`*^9}, {
   3.6845496175774975`*^9, 3.6845496495351915`*^9}, 3.7200646742948327`*^9, {
   3.720498126744732*^9, 3.720498319415033*^9}, {3.720498350660823*^9, 
   3.720498407859821*^9}, {3.720498530550848*^9, 3.7204985324060297`*^9}, {
   3.7204985634989796`*^9, 3.7204985769631176`*^9}, {3.7204986966590395`*^9, 
   3.7204987059795637`*^9}, {3.720498783192732*^9, 3.72049880186685*^9}, {
   3.720498833360058*^9, 3.7204988376936927`*^9}, {3.7204988895050154`*^9, 
   3.7204989735412235`*^9}, {3.7204990112547073`*^9, 3.72049904692107*^9}, {
   3.7204991280355625`*^9, 3.7204994231048746`*^9}, {3.7204994967678556`*^9, 
   3.720499580703884*^9}, {3.7204996419121256`*^9, 3.720499732931226*^9}, {
   3.720502948491308*^9, 
   3.72050294862014*^9}},ExpressionUUID->"9e6fe485-947f-4af1-8421-\
a715bafb6967"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`g$$ = 10., $CellContext`v$$ = 
   1., $CellContext`d$$ = 0.09246060124080203, $CellContext`d0$$ = 
   0.09246060124080203, $CellContext`s1$$ = 0.004, $CellContext`s2$$ = 
   0.0012, $CellContext`\[Theta]A0$$ = 0.59}, 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`\[Theta]A$$ = 0.59, Typeset`show$$ = True,
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`\[Theta]A$$], 0.59, 
         Subscript[
          Style["\[Theta]", 14, FontFamily -> "Times"], 
          Style["A", 12, FontFamily -> "Times", Italic]]}, 0.01, 
        1.5697963267948967`}}, Typeset`size$$ = {576., {139., 149.}}, 
      Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
      False, $CellContext`\[Theta]A$272010$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`\[Theta]A$$ = 0.59}, 
        "ControllerVariables" :> {
          Hold[$CellContext`\[Theta]A$$, $CellContext`\[Theta]A$272010$$, 0]},
         "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> ($CellContext`d$$ = ($CellContext`v$$^2/$CellContext`g$$) 
           Sin[2 $CellContext`\[Theta]A$$]; $CellContext`d0$$ = \
($CellContext`v$$^2/$CellContext`g$$) Sin[2 $CellContext`\[Theta]A0$$]; Show[
           
           ParametricPlot[{{($CellContext`v$$ $CellContext`t) 
              Cos[$CellContext`\[Theta]A$$], ($CellContext`v$$ $CellContext`t)
                 Sin[$CellContext`\[Theta]A$$] - ((1/
                2) $CellContext`g$$) $CellContext`t^2}}, {$CellContext`t, 
             0, (2 ($CellContext`v$$/$CellContext`g$$)) 
             Sin[$CellContext`\[Theta]A$$]}, 
            PlotRange -> {{(-0.01) $CellContext`d0$$, 
               
               1.012 $CellContext`d0$$}, {-0.0015 - $CellContext`s1$$ - \
$CellContext`s2$$ - 0.003, 0.05}}, AspectRatio -> 0.5, PlotRangeClipping -> 
            False, Axes -> False], 
           
           ParametricPlot[{{$CellContext`d0$$ - ($CellContext`v$$ \
$CellContext`t) 
              Sin[$CellContext`\[Theta]A0$$], ($CellContext`v$$ \
$CellContext`t) 
               Cos[$CellContext`\[Theta]A0$$] - ((1/
                2) $CellContext`g$$) $CellContext`t^2}}, {$CellContext`t, 
             0, (2 ($CellContext`v$$/$CellContext`g$$)) 
             Cos[$CellContext`\[Theta]A0$$]}, PlotStyle -> ColorData[97][2]], 
           Graphics[{{
              
              Line[{{$CellContext`d0$$, 0}, {0, 0}, {
                0, 1.1 ($CellContext`v$$^2/(2 $CellContext`g$$))}}]}, {Gray, 
              
              Line[{{{$CellContext`d0$$, -$CellContext`s1$$}, {
                 0, -$CellContext`s1$$}}, {{$CellContext`d0$$, \
-$CellContext`s1$$ + $CellContext`s2$$}, {$CellContext`d0$$, \
-$CellContext`s1$$ - $CellContext`s2$$}}, {{
                 0, -$CellContext`s1$$ + $CellContext`s2$$}, {
                 0, -$CellContext`s1$$ - $CellContext`s2$$}}}], 
              Text[
               $CellContext`font[
               "d", Italic], {$CellContext`d0$$/2, -$CellContext`s1$$ - 
                0.004}]}, Purple, 
             PointSize[0.02], 
             Point[{{0, 0}, {$CellContext`d0$$, 0}}], Black, 
             Arrow[{{{0, 0}, 0.01 {
                  Cos[$CellContext`\[Theta]A$$], 
                  Sin[$CellContext`\[Theta]A$$]}}, {{$CellContext`d0$$, 
                 0}, {$CellContext`d0$$, 0} + 
                0.01 {-Cos[Pi/2 - $CellContext`\[Theta]A0$$], 
                   Sin[Pi/2 - $CellContext`\[Theta]A0$$]}}}], 
             Circle[{0, 0}, 0.004, {0, $CellContext`\[Theta]A$$}], 
             
             Circle[{$CellContext`d0$$, 0}, 0.004, {
              Pi/2 + $CellContext`\[Theta]A0$$, Pi}], 
             Text[
              $CellContext`font["\!\(\*SubscriptBox[\(\[Theta]\), \(A\)]\)"], 
              Offset[{0, -2}, 0.009 {
                 Cos[$CellContext`\[Theta]A$$/2], 
                 Sin[$CellContext`\[Theta]A$$/2]}]], 
             Text[
              $CellContext`font["\!\(\*SubscriptBox[\(\[Theta]\), \(B\)]\)"], 
              Offset[{0, 0}, {$CellContext`d0$$, 0} + 0.007 {
                  Cos[(1/2) (3 (Pi/2) + $CellContext`\[Theta]A0$$)], 
                  Sin[(1/2) (3 (Pi/2) + $CellContext`\[Theta]A0$$)]}]]}]]), 
        "Specifications" :> {{{$CellContext`\[Theta]A$$, 0.59, 
            Subscript[
             Style["\[Theta]", 14, FontFamily -> "Times"], 
             Style["A", 12, FontFamily -> "Times", Italic]]}, 0.01, 
           1.5697963267948967`}}, "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{650., {206., 216.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>($CellContext`font[
          Pattern[$CellContext`text, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`size, 
            Blank[Integer]], 14], 
          Pattern[$CellContext`opts, 
           BlankNullSequence[]]] := 
        Style[$CellContext`text, $CellContext`size, FontFamily -> 
          "Times", $CellContext`opts]; Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.6213759374027696`*^9, 3.621375949311451*^9}, {
   3.6213759872676215`*^9, 3.6213760145871844`*^9}, {3.621376163853722*^9, 
   3.621376190939271*^9}, {3.6213762275473647`*^9, 3.621376357454795*^9}, {
   3.6213764000592318`*^9, 3.62137641313698*^9}, 3.6213764788247375`*^9, {
   3.62137652031711*^9, 3.621376526114442*^9}, 3.621376571907061*^9, {
   3.6216519893824377`*^9, 3.6216519978924494`*^9}, {3.684549618185772*^9, 
   3.684549650027749*^9}, 3.720064674650617*^9, {3.7204981237886305`*^9, 
   3.720498241479062*^9}, {3.7204982838679295`*^9, 3.720498319861862*^9}, {
   3.7204983524934597`*^9, 3.720498408140049*^9}, 3.7204985325687838`*^9, {
   3.7204985679863386`*^9, 3.7204985771791096`*^9}, {3.720498786811304*^9, 
   3.720498803220413*^9}, 3.720498839410865*^9, {3.720498892539156*^9, 
   3.720498988974468*^9}, {3.720499182792041*^9, 3.7204994388039703`*^9}, 
   3.720499472343551*^9, {3.7204995315915155`*^9, 3.7204995425993648`*^9}, 
   3.720499582972065*^9, 3.7204996477378793`*^9, {3.720499688853845*^9, 
   3.720499756670809*^9}, 
   3.720502948959685*^9},ExpressionUUID->"2eaf810c-b3e4-4ef1-b5dd-\
56f728fb53de"]
}, {2}]],

Cell[TextData[{
 StyleBox["Solutions",
  FontVariations->{"Underline"->True}],
 "\n1. Both clowns have acceleration ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "1f5d8cd9-66f4-44ed-afcb-52fef3c3d179"],
 " downwards. Integrating this, we find the velocities"
}], "Text",
 CellChangeTimes->{{3.720298506023545*^9, 3.720298507656106*^9}, {
  3.720498055155573*^9, 3.720498056971712*^9}, {3.7205011396239877`*^9, 
  3.7205012194384823`*^9}},ExpressionUUID->"ee7156c2-0731-47bf-9b94-\
19b21baaf9ea"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["v", "\[RightVector]"], "A"], "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{"v", " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "A"], "]"}], 
     OverscriptBox["x", "^"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"v", " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "A"], "]"}]}], "-", 
       RowBox[{"g", " ", "t"}]}], ")"}], 
     OverscriptBox["y", "^"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"cf1fdae0-755d-4a19-9565-fe24f9ece809"]], \
"TextNumbered",
 CellChangeTimes->{{3.621135580382345*^9, 3.621135618996441*^9}, {
  3.6211357712382364`*^9, 3.6211357712382364`*^9}, {3.621138498126337*^9, 
  3.621138499324405*^9}, {3.621138562324009*^9, 3.621138606452533*^9}, {
  3.6211386614876804`*^9, 3.621138661586686*^9}, {3.621376681632337*^9, 
  3.621376689187769*^9}, {3.6213768092286353`*^9, 3.6213768609925957`*^9}, {
  3.6845518271593475`*^9, 3.6845518271593475`*^9}, {3.7200644641439004`*^9, 
  3.720064466049374*^9}},ExpressionUUID->"27839122-8111-4159-a58a-\
f7e3a61d9eb6"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["v", "\[RightVector]"], "B"], "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "v"}], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "B"], "]"}], 
     OverscriptBox["x", "^"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"v", " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "B"], "]"}]}], "-", 
       RowBox[{"g", " ", "t"}]}], ")"}], 
     OverscriptBox["y", "^"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"e65c8d34-b595-4044-9def-22f9093754fc"]], \
"TextNumbered",
 CellChangeTimes->{{3.621135580382345*^9, 3.621135618996441*^9}, {
  3.6211357712382364`*^9, 3.6211357712382364`*^9}, {3.621138498126337*^9, 
  3.621138499324405*^9}, {3.621138562324009*^9, 3.621138606452533*^9}, {
  3.6211386614876804`*^9, 3.621138661586686*^9}, {3.621376681632337*^9, 
  3.621376689187769*^9}, {3.6213768092286353`*^9, 3.6213768558983045`*^9}, {
  3.6845518296292114`*^9, 3.6845518296292114`*^9}, {3.720064468019969*^9, 
  3.7200644712396746`*^9}},ExpressionUUID->"fe669c8e-d767-41ac-856e-\
43dd5e30eb4e"],

Cell[CellGroupData[{

Cell[TextData[{
 "(As a quick aside, these two equations enable us to answer Part 2 of the \
question: Will the clowns both reach their maximum heights at the same time? \
Absolutely not, since the maximum height is determined by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"v", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"g", " ", 
      SubscriptBox["t", 
       RowBox[{"max", " ", "height"}]]}]}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"c22aac8c-099a-43e5-a69c-3222f1d63d0c"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], TraditionalForm]],ExpressionUUID->
  "2c982d90-9f43-48e2-a143-5a5170e0c742"],
 " will be different for the two cannons.)"
}], "Text",
 CellChangeTimes->{{3.6845517319855156`*^9, 3.684551785662315*^9}, {
  3.720501146994644*^9, 3.720501147439618*^9}, {3.7205012347685485`*^9, 
  3.720501245460577*^9}},ExpressionUUID->"5f3af65e-9880-4369-a4a3-\
3e4fcc8098ad"],

Cell[TextData[{
 "We now integrate the velocity to obtain the positions of the cupcakes. \
Cupcake ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "6d898bbb-a20f-4d25-bf1d-8416c950f773"],
 " started at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "0"}], ")"}], TraditionalForm]],ExpressionUUID->
  "e9e1bc25-61cf-4748-b212-0bc2f640f610"],
 " and cupcake ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],ExpressionUUID->
  "f6a67e18-3044-443c-8fe5-f5bb9b13d3ad"],
 " started at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"d", ",", "0"}], ")"}], TraditionalForm]],ExpressionUUID->
  "2c0fddfc-e1ed-4fd3-95f9-f68f3698f4de"],
 ". Thus, we can integrate the above equations using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["v", "\[RightVector]"], "=", 
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      OverscriptBox["r", "\[RightVector]"]}], 
     RowBox[{"\[DifferentialD]", "t"}]]}], TraditionalForm]],ExpressionUUID->
  "06140757-c092-4a95-8371-9823a9bd3e48"],
 " to obtain "
}], "Text",
 CellChangeTimes->{{3.621376876296471*^9, 3.621376959288218*^9}, 
   3.6843771951476684`*^9, {3.6845518059474487`*^9, 
   3.6845518231613407`*^9}},ExpressionUUID->"f1a5cf2f-5706-4d11-b9ac-\
25800a2e7504"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["r", "\[RightVector]"], "A"], "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{"v", " ", "t", " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "A"], "]"}], 
     OverscriptBox["x", "^"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"v", " ", "t", " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "A"], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], "g", " ", 
        SuperscriptBox["t", "2"]}]}], ")"}], 
     OverscriptBox["y", "^"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"300172d4-84d8-45d8-95fa-617d9fc3458e"]], \
"TextNumbered",
 CellChangeTimes->{{3.621135580382345*^9, 3.621135618996441*^9}, {
  3.6211357712382364`*^9, 3.6211357712382364`*^9}, {3.621138498126337*^9, 
  3.621138499324405*^9}, {3.621138562324009*^9, 3.621138606452533*^9}, {
  3.6211386614876804`*^9, 3.621138661586686*^9}, {3.621376681632337*^9, 
  3.621376689187769*^9}, {3.6213768092286353`*^9, 3.6213768609925957`*^9}, {
  3.6213769632334437`*^9, 3.6213769709188833`*^9}, {3.684551838809264*^9, 
  3.684551838809264*^9}, {3.7200645089453726`*^9, 3.7200645200954547`*^9}},
 CellTags->"tag14",ExpressionUUID->"a597dca3-d15e-4616-be3d-1751f49624fd"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["r", "\[RightVector]"], "B"], "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "-", 
       RowBox[{"v", " ", "t", " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "B"], "]"}]}]}], ")"}], 
     OverscriptBox["x", "^"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"v", " ", "t", " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "B"], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], "g", " ", 
        SuperscriptBox["t", "2"]}]}], ")"}], 
     OverscriptBox["y", "^"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"cb56a6f6-8c53-4780-b90a-ccd96a277219"]], \
"TextNumbered",
 CellChangeTimes->{{3.621135580382345*^9, 3.621135618996441*^9}, {
  3.6211357712382364`*^9, 3.6211357712382364`*^9}, {3.621138498126337*^9, 
  3.621138499324405*^9}, {3.621138562324009*^9, 3.621138606452533*^9}, {
  3.6211386614876804`*^9, 3.621138661586686*^9}, {3.621376681632337*^9, 
  3.621376689187769*^9}, {3.6213768092286353`*^9, 3.6213768558983045`*^9}, {
  3.62137697610318*^9, 3.621376985104695*^9}, {3.6213771478060007`*^9, 
  3.6213771478060007`*^9}, {3.6845518413209486`*^9, 3.6845518413209486`*^9}, {
  3.72006450899783*^9, 3.7200645201423016`*^9}},
 CellTags->"tag15",ExpressionUUID->"4afaccb6-d0c8-4be5-a60d-8e3bc2e965a6"],

Cell[TextData[{
 "Cupcake A hits the ground when its ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "58725087-acfe-4c91-8569-f77e70ddc21f"],
 "-component is zero, "
}], "Text",
 CellChangeTimes->{{3.621376998801478*^9, 
  3.6213770241669292`*^9}},ExpressionUUID->"b4ad6bfa-d347-445c-8285-\
0802deddf1ed"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"0", "=", 
   RowBox[{
    RowBox[{"v", " ", "t", " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "A"], "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], "g", " ", 
     SuperscriptBox["t", "2"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"ca6a26ad-22e8-416d-beb7-164395f425ff"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213770171085253`*^9, 
  3.621377021749791*^9}},ExpressionUUID->"6e897ea6-e600-4586-b273-\
75d16144d344"],

Cell[TextData[{
 "which solves to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "62f4b2d3-332d-4fc5-b2fd-e937d03f0306"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "v"}], "g"], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "A"], "]"}]}]}], TraditionalForm]],
  ExpressionUUID->"143cde1c-6b11-4ee5-b62b-29a2d56f44c3"],
 ". We want the second solution, which allows us to solve for ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "6769f0f5-c3e8-4e30-b1a5-ad458f1c0348"],
 ", "
}], "Text",
 CellChangeTimes->{{3.621377025562009*^9, 3.6213770835713267`*^9}, {
  3.62137711965139*^9, 
  3.62137711965139*^9}},ExpressionUUID->"7527b73c-9f74-4265-bd3d-\
17736fe2833f"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"d", "=", 
   RowBox[{
    RowBox[{"v", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "v"}], "g"], " ", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "A"], "]"}]}], "=", 
    RowBox[{
     FractionBox[
      SuperscriptBox["v", "2"], "g"], 
     RowBox[{"Sin", "[", 
      RowBox[{"2", 
       SubscriptBox["\[Theta]", "A"]}], "]"}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"67cae218-aaa2-4d20-8488-6d6fe4604956"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213770925838423`*^9, 3.621377114599101*^9}},
 CellTags->"tag12",ExpressionUUID->"1dbe33d4-dac7-42c2-a2d8-9f7abccba578"],

Cell[TextData[{
 "Similarly solving when the ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "1e0aaaa0-6936-460d-874b-0e5136c57fa5"],
 "-component of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], "B"], TraditionalForm]],
  ExpressionUUID->"35e45590-e1f0-4f71-b654-f97bec22de0a"],
 " equals 0 allows us to find when cupcake B hits the ground, which by the \
symmetry of the equations must equal ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "v"}], "g"], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "B"], "]"}]}]}], TraditionalForm]],
  ExpressionUUID->"41b18b4d-0028-4eee-b28d-fa7e27d90395"],
 ". Since cupcake B hits cannon A, "
}], "Text",
 CellChangeTimes->{{3.6213771381284475`*^9, 
  3.6213771912144833`*^9}},ExpressionUUID->"dff62d9d-fe04-4b65-86ab-\
7d92e462bd36"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"0", "=", 
   RowBox[{"d", "-", 
    RowBox[{"v", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "v"}], "g"], " ", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "B"], "]"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "B"], "]"}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"f367e997-2928-403c-b593-f8a206c2d0cb"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213771947736874`*^9, 
  3.621377224564391*^9}},ExpressionUUID->"978b2931-ea6b-4f0d-aa38-\
1e1d6528061c"],

Cell["which simplifies to", "Text",
 CellChangeTimes->{{3.621377268067879*^9, 
  3.6213772697839775`*^9}},ExpressionUUID->"f1e438cb-32ef-40d0-8837-\
53ca5750b330"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"d", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["v", "2"], "g"], 
    RowBox[{"Sin", "[", 
     RowBox[{"2", 
      SubscriptBox["\[Theta]", "B"]}], "]"}]}]}], 
  TraditionalForm]],ExpressionUUID->"406589cc-ad3f-4f99-bd2c-1dfd849c5902"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213771947736874`*^9, 
  3.6213772530840225`*^9}},ExpressionUUID->"15d1ead5-6461-43bc-8d1e-\
e6ed4c590fc6"],

Cell[TextData[{
 "Substituting back into Equation (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "tag12"], TraditionalForm]],ExpressionUUID->
  "14b8df52-277b-4f97-8ad0-e58a11e52355"],
 "), "
}], "Text",
 CellChangeTimes->{{3.6213772714660735`*^9, 3.6213772770803947`*^9}, {
   3.6843781148952007`*^9, 3.684378132873037*^9}, 
   3.7200645726125484`*^9},ExpressionUUID->"24c10f1f-fa7b-41f8-94d5-\
d822ac89ba9e"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["v", "2"], "g"], 
    RowBox[{"Sin", "[", 
     RowBox[{"2", 
      SubscriptBox["\[Theta]", "A"]}], "]"}]}], "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["v", "2"], "g"], 
    RowBox[{"Sin", "[", 
     RowBox[{"2", 
      SubscriptBox["\[Theta]", "B"]}], "]"}]}]}], 
  TraditionalForm]],ExpressionUUID->"69080e98-5f6a-4b04-b321-3520a18f7bb7"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213771947736874`*^9, 3.6213772530840225`*^9}, {
  3.621377284815837*^9, 
  3.621377284815837*^9}},ExpressionUUID->"2beeb04d-5a9a-4b77-94b2-\
fbc84c6d422a"],

Cell["or equivalently", "Text",
 CellChangeTimes->{{3.62137730777015*^9, 
  3.6213773123774137`*^9}},ExpressionUUID->"9b9c3c3b-deb5-4af4-ad7c-\
5713a7d83143"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", 
     SubscriptBox["\[Theta]", "A"]}], "]"}], "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", 
     SubscriptBox["\[Theta]", "B"]}], "]"}]}], 
  TraditionalForm]],ExpressionUUID->"6013e918-c64e-40f1-90c2-cfbda8663494"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213771947736874`*^9, 3.6213772530840225`*^9}, {
  3.621377284815837*^9, 3.621377284815837*^9}, {3.6213773160486236`*^9, 
  3.6213773180787396`*^9}},
 CellTags->"tag13",ExpressionUUID->"83830b1d-f1c5-464c-b368-d63fc133c183"],

Cell[TextData[{
 "We would like to solve for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "B"], TraditionalForm]],ExpressionUUID->
  "a15339fa-ccb9-4e5b-89d6-391f195a1a91"],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "A"], TraditionalForm]],ExpressionUUID->
  "8f53f2ea-7d80-4c91-99d9-4404d68b5eba"],
 ". One obvious solution is to take ArcSin of both sides of the equation and \
obtain ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "B"], "=", 
    SubscriptBox["\[Theta]", "A"]}], TraditionalForm]],ExpressionUUID->
  "e40216fd-1641-4f94-8f3a-1f90cdd1dcd2"],
 ", but we specifically don\[CloseCurlyQuote]t want this solution (since we \
don\[CloseCurlyQuote]t want the cupcakes to hit each other). So what does \
this mean? At this point, it helps to visualize ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Sin", "[", 
    RowBox[{"2", "x"}], "]"}], TraditionalForm]],ExpressionUUID->
  "dc9778ea-4423-4f2a-a855-0bc3fdeecef3"],
 ","
}], "Text",
 CellChangeTimes->{{3.6213773202158623`*^9, 3.6213774532414703`*^9}, 
   3.684551887349321*^9},ExpressionUUID->"0787a2d7-faf7-493b-acfc-\
e1e49809976f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"font", "@", "\"\<Sin[2\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)]\>\""}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6213774591518087`*^9, 3.621377493879795*^9}, 
   3.7200647030236406`*^9, {3.7205029373187885`*^9, 
   3.720502961412741*^9}},ExpressionUUID->"d3094927-6b9c-47e6-9d95-\
5383f347d4c5"],

Cell[BoxData[
 PanelBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
v5e4ydlK27GDwozCo9Uy42S/RcK3WykKRgG/BzWJq+c+2KJN5sTF4Tt65sQf
fLfWKXWT/dyOjDxEXPytx35yH4WvlVXjZ4kLNOIoZpDCjlUmwZHEL0NNfJpH
KPwIGpj3mPgZhzdWOk5hz3XOlzzidJNbVzMm0BAzlb7zgfhRor5sjDiN/UWn
TtYTJw63JwRNpbFynqzrH+JY2+uqR2fQCH1GefGIo16sybGRpVHV1B/5l/j6
9FZDg9k0bimvrxASh7hdrliiSOPLvFy5MeILH1bumDGfRk7cYb9x4gCVxlah
Co0Cd4vu/7dvYKAraymNjBvuQf+IPVuW9n5SoxEjW7J4hNhN58u5XA0aNVrb
/vQTH4ryk0haTaN33fQXAmIHwfxbV3VoMDHicWziPWYVyt7rafQ0rottId6R
4vnEzoiG94OHGZ+JLcQUtDeZ0NAu3PS9iHiLQ8lbjc00ILloThaxScHRLXPM
aNBh+h73iA1mydSJWtCodIj4GUKs411g32lNo/ytiqMn8aoaZ6p+F43Jon1D
u4mXhOSMpdrT8Fi213Mh8QKW3dVIJxq7tndvm0A812ii7FkXGv9+VqOd5MP0
gZ2qFsdpqIk6uCYQS9iMvdD1opFWOivRj1gs67HhwlM0OkyVeZbEgy4DNn0B
5Lz1lMuHSX7+LUlsbT1Pw/Ct4s7PxHxlU9ePwTSma3sPJRD/abhzLu46jXsu
q6/oEVdu0nuyIZ6G0NH22V5SH/4fAzWC7tO46emZM5tYdWvZy7ePyHkOOPnV
kXoL2WZZsj6Thmb5L6ONxBt3uLSsKaLx5uuXaklSn3316Y4+pTQ47DW1eaS+
k227OdkfaMhtjb/lSCy272yvxhca+W6h+zJJPyh2jJy2/A8N49E79ArSLzxZ
jVFHOmgMbC/tKh8g/eCQkkIKRaOaWvTCnjjwSOqSRT00Pvinnw0h/cjgxFsj
ZTEe5HfHy7wl/Sz/LO0pvZiHywk2u4sYBofHNAYtVXlYaljgvIZ4VtDJc+Hq
PPDOtmk8ETA4eXH82tS15PlTMVOudTFYfU0+edJmHsauvarUJP02K8a4YegI
DxKXdwRKc0h+zblit86dh5GTmXEH2Qyk4qrbfD15WF7v55/TQfpbwm5Brz8P
Vfdu+m9rJ/310XFxwTUeOrasun7wD4PH2Xf1WE95eHGaNW1pC8nnETu1pmc8
VJ5ssHNuJvmzaZ5iTQ75/RfV/PgmBoVND0dfv+FBXGfhranfGdSNP30X+YmH
Ttectq91DEQtijYZd/JQMRrTIfKZgT2PZX1frRPLRY63UWQ+qqx5bBKj0YnD
X7UbOYWkH507on19dSfGvio0s96Q/Uvz5fzXd+K53qUpDa8ZhK3r/25p1onz
6yNnPSTz9nWIuMP40U6MfFDr/kXmtfwidTeHtE6YhikodZD5HxEVZpuW2QlN
Y1XJa+R+ICnWadKX3Qkv3/HsFXdIv2xLUwwt6ITTPHdNt2iSj4nLPud+6sSr
SomOT+FkHs5dtEpK0AmJBermKpfI+8jMHXizmg9llVu1iuR+w1w4zZqsy4ek
MHqFvys5r56mGmt9PgwmNPz37TADx9o7qdz/+OjYfy0j6CCDbeHye2V38XE8
e77zu/0MFklKF7r58RE/zfP0NwvSX0UlLioU8qFbFW6wRYv068y7DlbFfAy9
SQlw0WQwZd8K/StlfGiVs6LOr2Sw4YVFX181H9YN202eLyf54Hz7cG0rH3tt
U5/3LyTn9V7F/Mo4H2vnPKDnyJB6uGwo12/Shbmrd30o6RYgV8InpbayCzcO
bDj1OFUATsCFrqLPXfg2JVr14GMB5vTcXJP5tQu+7ENi85PJ/bc5o/RacxdY
+yXVIhMF2JjO+WVCd0GkGNsP3Bbgm/m+2bkSAlTH3BBLvihAd7jx1bumArxq
tVWtJPdndfmZbs7lAqxmygpiyXNM+ICcdiOD9eUry+31u7DoyhVND7du1Gha
Hf5qzwdr348WE243Jo3nKR4k33kLu24o90QPjjK+xi9NePD3dnGd1dWD6txz
J/XkaVjk3TOb5fsXvSKiyfXk3iMYdQuYMPAXl0yPGRyw5ODB9wsvT/j0Ytdm
S9qotQPDroaOp0d6oXVgAUt9bTuUxyLtvM70IfiekPp4uw0c07AqiYn9YFty
8izP/8b7pdWYF9aPiTpnPpeU/oCbRMrEhVMG0OreHhC5vAn59xcbvo8cgIIi
u8pJtR41+gblNtKDSCm0jz1pWwuh270djuGDsKufTw/OqESFVdIuqVlCRGT7
KD15UQxnPYPU1Gghage5w79SsnG063P/zxghlMJ8ww44ZsPzwYGNMneFSJee
XflLIRtBUy61BSQI8bBI0qn5+nPEN1cq2qQI8VtouyaInYXG07sjRvOFOFyl
UZUWkA6zAu/T1j+E5P61UiQy7QGsT0ysCGkVYrdRn56N0gPsUYmZVfhbiDsv
RpfI3LyPI6Gvc5Z2CNGkVBikRCcieJ+IYIQvhOvbQKuewDgUDd9wTvknRPlm
q+NIj0R51vzsHyJDiA+z3vDwZgSqnbPHZ04YwtD52PvivHD8qKqPPys+BNaG
+8MhQaEQxil+t5o5hHxK8vOJ9AsYt8hcEiIzhERarmcrLxCTJ+DkG7kh6P2U
6coJOgO5Y87SSxWG0LAjXv1iuhcU5/cdsFMk67m3rasJcoNK3eWsCOUhiJo8
lY1Jd4Laldlj5fOHIDVatOJ1ujW09NPMRxYOQUPrxv/+H/g/h4CSLA==
        "]]},
      Annotation[#, "Charting`Private`Tag$272754#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      StyleBox[
      "\"\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
       14, FontFamily -> "Times", StripOnInput -> False], TraditionalForm], 
     None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->250,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox[
     "\"Sin[2\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"]\\)]\
\"", 14, FontFamily -> "Times", StripOnInput -> False], TraditionalForm],
   PlotRange->
    NCache[{{0, Rational[1, 2] Pi}, {0., 0.9999999707682925}}, {{
      0, 1.5707963267948966`}, {0., 0.9999999707682925}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.621377463310046*^9, 3.621377497304991*^9}, 
   3.720064703343586*^9, {3.7205029401298156`*^9, 
   3.7205029615836797`*^9}},ExpressionUUID->"f7467de6-573f-42a5-b927-\
457b851459b8"]
}, {2}]],

Cell[TextData[{
 "The answer lies in the fact that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", "x"}], "]"}], "=", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["\[Pi]", "2"], "-", "x"}], ")"}]}], "]"}]}], 
   TraditionalForm]],ExpressionUUID->"485df53f-9f3c-4c21-acc3-80bdc6f85bcf"],
 ". Therefore we can write the above relation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "A"], TraditionalForm]],ExpressionUUID->
  "409d1c56-d073-4a75-8d88-dc0f37582606"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "B"], TraditionalForm]],ExpressionUUID->
  "47a17b43-e441-455b-bfec-063b208d9bbf"],
 " as"
}], "Text",
 CellChangeTimes->{
  3.621377457867735*^9, {3.621377518756218*^9, 3.621377578780651*^9}, {
   3.6843781581677704`*^9, 
   3.684378194345826*^9}},ExpressionUUID->"3f543391-6854-431f-ae90-\
2c5685df17ad"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", 
     SubscriptBox["\[Theta]", "A"]}], "]"}], "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Pi]", "2"], "-", 
       SubscriptBox["\[Theta]", "B"]}], ")"}]}], "]"}]}], 
  TraditionalForm]],ExpressionUUID->"0c1f4086-6766-4888-9773-926f5f340481"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213771947736874`*^9, 3.6213772530840225`*^9}, {
  3.621377284815837*^9, 3.621377284815837*^9}, {3.6213773160486236`*^9, 
  3.6213773180787396`*^9}, {3.621377580921774*^9, 
  3.621377591912402*^9}},ExpressionUUID->"33f7f725-7dec-4742-81a5-\
d7070039daa5"],

Cell["and upon taking the ArcSin of both sides, ", "Text",
 CellChangeTimes->{{3.6213775958706284`*^9, 
  3.621377604661131*^9}},ExpressionUUID->"ef131489-3316-4aed-9c10-\
8b0ca73a723b"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Theta]", "B"], "=", 
   RowBox[{
    FractionBox["\[Pi]", "2"], "-", 
    SubscriptBox["\[Theta]", "A"]}]}], 
  TraditionalForm]],ExpressionUUID->"19c9fff9-26a5-43d3-85bc-cf0e1bd47d96"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213771947736874`*^9, 3.6213772530840225`*^9}, {
  3.621377284815837*^9, 3.621377284815837*^9}, {3.6213773160486236`*^9, 
  3.6213773180787396`*^9}, {3.621377580921774*^9, 3.621377617380859*^9}},
 CellTags->"eq1",ExpressionUUID->"390a8dda-e4e2-487d-80e7-6c7ec88a9eca"],

Cell[TextData[{
 "Note that when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "A"], "=", 
    FractionBox["\[Pi]", "4"]}], TraditionalForm]],ExpressionUUID->
  "8bafca9a-392c-44d6-bc44-b2c0a4adacde"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "B"], "=", 
    FractionBox["\[Pi]", "4"]}], TraditionalForm]],ExpressionUUID->
  "56c47712-da0d-4c91-8bfd-58fbb19e7d03"],
 " which is the only time that both cupcakes are forced onto the same \
trajectory."
}], "Text",
 CellChangeTimes->{{3.621377668911806*^9, 
  3.6213777090651026`*^9}},ExpressionUUID->"487473bf-2b0a-404a-9913-\
457c634f85bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", "10."}], ",", 
      RowBox[{"v", "=", "1."}], ",", "d", ",", 
      RowBox[{"s1", "=", "0.004"}], ",", 
      RowBox[{"s2", "=", "0.0012"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox["v", "2"], "g"], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]A"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"v", "*", "t", "*", 
               RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "*", "t", "*", 
                RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], "-", 
               RowBox[{
                FractionBox["1", "2"], "g", " ", 
                SuperscriptBox["t", "2"]}]}]}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"2", "*", "v"}], "g"], 
              RowBox[{"Sin", "[", "\[Theta]A", "]"}]}]}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.01"}], "d"}], ",", 
                RowBox[{"1.012", "d"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.0015"}], "-", "s1", "-", "s2", "-", 
                 "0.003"}], ",", "0.05"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
           RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "-", 
               RowBox[{"v", "*", "t", "*", 
                RowBox[{"Sin", "[", "\[Theta]A", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"v", "*", "t", "*", 
                RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], "-", 
               RowBox[{
                FractionBox["1", "2"], "g", " ", 
                SuperscriptBox["t", "2"]}]}]}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"2", "*", "v"}], "g"], 
              RowBox[{"Cos", "[", "\[Theta]A", "]"}]}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}]}], 
          "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"d", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"1.1", 
                   FractionBox[
                    SuperscriptBox["v", "2"], 
                    RowBox[{"2", " ", "g"}]]}]}], "}"}]}], "}"}], "]"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Gray", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"d", ",", 
                    RowBox[{"-", "s1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "s1"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"d", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "+", "s2"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"d", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "-", "s2"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "+", "s2"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "-", "s2"}]}], "}"}]}], "}"}]}], 
                "}"}], "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"font", "[", 
                 RowBox[{"\"\<d\>\"", ",", "Italic"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"d", "/", "2"}], ",", 
                  RowBox[{
                   RowBox[{"-", "s1"}], "-", "0.004"}]}], "}"}]}], "]"}]}], 
             "}"}], ",", "Purple", ",", 
            RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"d", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"0.2", "<", "\[Theta]A", "<", "1.2"}], ",", 
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"0.01", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], "}"}]}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"d", ",", "0"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"d", ",", "0"}], "}"}], "+", 
                    RowBox[{"0.01", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], "-", "\[Theta]A"}], "]"}]}], 
                    ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], "-", "\[Theta]A"}], "]"}]}], 
                    "}"}]}]}]}], "}"}]}], "}"}], "]"}], ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.004", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "\[Theta]A"}], "}"}]}], "]"}], ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"d", ",", "0"}], "}"}], ",", "0.004", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "+", "\[Theta]A"}], ",", 
                    "\[Pi]"}], "}"}]}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{
                  "font", "@", 
                   "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(A\)]\)\>\""}], ",", 
                  RowBox[{"Offset", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "2"}]}], "}"}], ",", 
                    RowBox[{"0.009", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]A", "/", "2"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]A", "/", "2"}], "]"}]}], "}"}]}]}], 
                   "]"}]}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{
                  "font", "@", 
                   "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(B\)]\)\>\""}], ",", 
                  RowBox[{"Offset", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"d", ",", "0"}], "}"}], "+", 
                    RowBox[{"0.007", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "2"], "+", "\[Theta]A"}], 
                    ")"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "2"], "+", "\[Theta]A"}], 
                    ")"}]}], "]"}]}], "}"}]}]}]}], "]"}]}], "]"}]}], "}"}]}], 
             "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]A", ",", "0.59", ",", 
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"font", "@", "\"\<\[Theta]\>\""}], ",", 
            RowBox[{"font", "[", 
             RowBox[{"\"\<A\>\"", ",", "12", ",", "Italic"}], "]"}]}], 
           "]"}]}], "}"}], ",", "0.1", ",", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "0.1"}]}], "}"}], ",", 
      RowBox[{"Initialization", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"font", "[", 
          RowBox[{"text_", ",", 
           RowBox[{"size_Integer:", "14"}], ",", "opts___"}], "]"}], ":=", 
         RowBox[{"(", 
          RowBox[{"Style", "[", 
           RowBox[{"text", ",", "size", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "opts"}],
            "]"}], ")"}]}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6212796190365133`*^9, 3.6212797418955407`*^9}, {
   3.6212797749944344`*^9, 3.621279944807147*^9}, {3.621279974843865*^9, 
   3.62128003613737*^9}, {3.621280086294239*^9, 3.6212801183020697`*^9}, {
   3.6212801599554524`*^9, 3.6212802494985743`*^9}, {3.6212802928490534`*^9, 
   3.621280311268107*^9}, {3.621375586666709*^9, 3.6213756300411897`*^9}, {
   3.6213756706755133`*^9, 3.621376013886144*^9}, {3.621376121748314*^9, 
   3.6213763672403545`*^9}, {3.6213764615827513`*^9, 
   3.6213764775926666`*^9}, {3.6213765181859884`*^9, 
   3.6213765259374323`*^9}, {3.621651987432435*^9, 3.6216519892424374`*^9}, {
   3.6845496175774975`*^9, 3.6845496495351915`*^9}, 3.7200646742948327`*^9, {
   3.720498126744732*^9, 3.720498319415033*^9}, {3.720498350660823*^9, 
   3.720498407859821*^9}, {3.720498530550848*^9, 3.7204985324060297`*^9}, {
   3.7204985634989796`*^9, 3.7204985769631176`*^9}, {3.7204986966590395`*^9, 
   3.7204987059795637`*^9}, {3.720498783192732*^9, 3.72049880186685*^9}, {
   3.720498833360058*^9, 3.7204988376936927`*^9}, {3.7204988895050154`*^9, 
   3.7204989735412235`*^9}, {3.7204990112547073`*^9, 3.72049904692107*^9}, {
   3.7204991280355625`*^9, 3.7204994231048746`*^9}, {3.720502929402415*^9, 
   3.720502929880186*^9}, {3.7209254467802353`*^9, 
   3.720925473123208*^9}},ExpressionUUID->"6c3be4c2-8d0c-4cf4-95eb-\
456528769d98"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`g$$ = 10., $CellContext`v$$ = 
   1., $CellContext`d$$ = 0.09246060124080203, $CellContext`s1$$ = 
   0.004, $CellContext`s2$$ = 0.0012}, 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`\[Theta]A$$ = 0.59, Typeset`show$$ = True,
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`\[Theta]A$$], 0.59, 
         Subscript[
          Style["\[Theta]", 14, FontFamily -> "Times"], 
          Style["A", 12, FontFamily -> "Times", Italic]]}, 0.1, 
        1.4707963267948965`}}, Typeset`size$$ = {576., {139., 149.}}, 
      Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
      False, $CellContext`\[Theta]A$54886$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`\[Theta]A$$ = 0.59}, 
        "ControllerVariables" :> {
          Hold[$CellContext`\[Theta]A$$, $CellContext`\[Theta]A$54886$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> ($CellContext`d$$ = ($CellContext`v$$^2/$CellContext`g$$) 
           Sin[2 $CellContext`\[Theta]A$$]; Show[
           
           ParametricPlot[{{($CellContext`v$$ $CellContext`t) 
              Cos[$CellContext`\[Theta]A$$], ($CellContext`v$$ $CellContext`t)
                 Sin[$CellContext`\[Theta]A$$] - ((1/
                2) $CellContext`g$$) $CellContext`t^2}}, {$CellContext`t, 
             0, (2 ($CellContext`v$$/$CellContext`g$$)) 
             Sin[$CellContext`\[Theta]A$$]}, 
            PlotRange -> {{(-0.01) $CellContext`d$$, 
               1.012 $CellContext`d$$}, {-0.0015 - $CellContext`s1$$ - \
$CellContext`s2$$ - 0.003, 0.05}}, AspectRatio -> 0.5, PlotRangeClipping -> 
            False, Axes -> False], 
           
           ParametricPlot[{{$CellContext`d$$ - ($CellContext`v$$ \
$CellContext`t) 
              Sin[$CellContext`\[Theta]A$$], ($CellContext`v$$ $CellContext`t)
                 Cos[$CellContext`\[Theta]A$$] - ((1/
                2) $CellContext`g$$) $CellContext`t^2}}, {$CellContext`t, 
             0, (2 ($CellContext`v$$/$CellContext`g$$)) 
             Cos[$CellContext`\[Theta]A$$]}, PlotStyle -> ColorData[97][2]], 
           Graphics[{{
              
              Line[{{$CellContext`d$$, 0}, {0, 0}, {
                0, 1.1 ($CellContext`v$$^2/(2 $CellContext`g$$))}}]}, {Gray, 
              
              Line[{{{$CellContext`d$$, -$CellContext`s1$$}, {
                 0, -$CellContext`s1$$}}, {{$CellContext`d$$, \
-$CellContext`s1$$ + $CellContext`s2$$}, {$CellContext`d$$, \
-$CellContext`s1$$ - $CellContext`s2$$}}, {{
                 0, -$CellContext`s1$$ + $CellContext`s2$$}, {
                 0, -$CellContext`s1$$ - $CellContext`s2$$}}}], 
              Text[
               $CellContext`font[
               "d", Italic], {$CellContext`d$$/2, -$CellContext`s1$$ - 
                0.004}]}, Purple, 
             PointSize[0.02], 
             Point[{{0, 0}, {$CellContext`d$$, 0}}], 
             If[0.2 < $CellContext`\[Theta]A$$ < 1.2, {Black, 
               Arrow[{{{0, 0}, 0.01 {
                    Cos[$CellContext`\[Theta]A$$], 
                    Sin[$CellContext`\[Theta]A$$]}}, {{$CellContext`d$$, 
                   0}, {$CellContext`d$$, 0} + 
                  0.01 {-Cos[Pi/2 - $CellContext`\[Theta]A$$], 
                    Sin[Pi/2 - $CellContext`\[Theta]A$$]}}}], 
               Circle[{0, 0}, 0.004, {0, $CellContext`\[Theta]A$$}], 
               
               Circle[{$CellContext`d$$, 0}, 0.004, {
                Pi/2 + $CellContext`\[Theta]A$$, Pi}], 
               Text[
                $CellContext`font[
                "\!\(\*SubscriptBox[\(\[Theta]\), \(A\)]\)"], 
                Offset[{0, -2}, 0.009 {
                   Cos[$CellContext`\[Theta]A$$/2], 
                   Sin[$CellContext`\[Theta]A$$/2]}]], 
               Text[
                $CellContext`font[
                "\!\(\*SubscriptBox[\(\[Theta]\), \(B\)]\)"], 
                Offset[{0, 0}, {$CellContext`d$$, 0} + 0.007 {
                    Cos[(1/2) (3 (Pi/2) + $CellContext`\[Theta]A$$)], 
                    Sin[(1/2) (3 (Pi/2) + $CellContext`\[Theta]A$$)]}]]}]}]]),
         "Specifications" :> {{{$CellContext`\[Theta]A$$, 0.59, 
            Subscript[
             Style["\[Theta]", 14, FontFamily -> "Times"], 
             Style["A", 12, FontFamily -> "Times", Italic]]}, 0.1, 
           1.4707963267948965`}}, "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{650., {206., 216.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>($CellContext`font[
          Pattern[$CellContext`text, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`size, 
            Blank[Integer]], 14], 
          Pattern[$CellContext`opts, 
           BlankNullSequence[]]] := 
        Style[$CellContext`text, $CellContext`size, FontFamily -> 
          "Times", $CellContext`opts]; Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.6213759374027696`*^9, 3.621375949311451*^9}, {
   3.6213759872676215`*^9, 3.6213760145871844`*^9}, {3.621376163853722*^9, 
   3.621376190939271*^9}, {3.6213762275473647`*^9, 3.621376357454795*^9}, {
   3.6213764000592318`*^9, 3.62137641313698*^9}, 3.6213764788247375`*^9, {
   3.62137652031711*^9, 3.621376526114442*^9}, 3.621376571907061*^9, {
   3.6216519893824377`*^9, 3.6216519978924494`*^9}, {3.684549618185772*^9, 
   3.684549650027749*^9}, 3.720064674650617*^9, {3.7204981237886305`*^9, 
   3.720498241479062*^9}, {3.7204982838679295`*^9, 3.720498319861862*^9}, {
   3.7204983524934597`*^9, 3.720498408140049*^9}, 3.7204985325687838`*^9, {
   3.7204985679863386`*^9, 3.7204985771791096`*^9}, {3.720498786811304*^9, 
   3.720498803220413*^9}, 3.720498839410865*^9, {3.720498892539156*^9, 
   3.720498988974468*^9}, {3.720499182792041*^9, 3.7204994388039703`*^9}, 
   3.7205029307766275`*^9, {3.720925473708321*^9, 
   3.720925486305114*^9}},ExpressionUUID->"ec4ccea5-30ea-44e0-9aa6-\
5ee25701fd6e"]
}, {2}]],

Cell[CellGroupData[{

Cell[TextData[{
 "2. As discussed above, the two clowns will not reach their maximum heights \
at the same time. The clown that goes higher will be in the air for longer, \
but the horizontal velocity is constant during projectile motion, so the \
clown that takes the high road will reach their maximum height later than the \
clown that takes the low road, just like in the ",
 ButtonBox["Loch Lomond song",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.youtube.com/watch?v=x5AQgKnnYeI&t=0m46s"], None},
  ButtonNote->"https://www.youtube.com/watch?v=x5AQgKnnYeI&t=0m46s"],
 "."
}], "Text",
 CellChangeTimes->{{3.7205013142327404`*^9, 3.7205014137958603`*^9}, {
  3.7209041179246435`*^9, 3.720904176815162*^9}, {3.720904252795879*^9, 
  3.7209042587274885`*^9}},ExpressionUUID->"c7fb43c6-1382-45a7-b9bc-\
7de3ded8b322"],

Cell[TextData[{
 "3. Substituting Equation (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "eq1"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1ac4c21b-f26e-4ae5-8099-508048907c69"],
 ") into Equations (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "tag14"], TraditionalForm]],ExpressionUUID->
  "2b0b8e06-bbe3-4224-95e1-dc652ee40487"],
 ") and (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "tag15"], TraditionalForm]],ExpressionUUID->
  "d0c14849-4e71-4565-93f8-e452f99f836d"],
 ") and simplifying using trig identities, "
}], "Text",
 CellChangeTimes->{{3.621377668911806*^9, 3.621377724737999*^9}, {
  3.621377758039904*^9, 3.621377777067992*^9}, {3.6843782620449524`*^9, 
  3.6843782893619556`*^9}, {3.720501312651904*^9, 3.720501321642874*^9}, {
  3.7205014291055813`*^9, 
  3.720501432371272*^9}},ExpressionUUID->"e2cdd338-f7a3-4c66-88e7-\
691b7216a851"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], "A"], "=", 
   RowBox[{
    RowBox[{"v", " ", "t", " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "A"], "]"}], 
     OverscriptBox["x", "^"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"v", " ", "t", " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "A"], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], "g", " ", 
        SuperscriptBox["t", "2"]}]}], ")"}], 
     OverscriptBox["y", "^"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"65a9a0e6-f125-45eb-8989-8235da0f1fe7"]], \
"TextNumbered",
 CellChangeTimes->{{3.621135580382345*^9, 3.621135618996441*^9}, {
  3.6211357712382364`*^9, 3.6211357712382364`*^9}, {3.621138498126337*^9, 
  3.621138499324405*^9}, {3.621138562324009*^9, 3.621138606452533*^9}, {
  3.6211386614876804`*^9, 3.621138661586686*^9}, {3.621376681632337*^9, 
  3.621376689187769*^9}, {3.6213768092286353`*^9, 3.6213768609925957`*^9}, {
  3.6213769632334437`*^9, 3.6213769709188833`*^9}, {3.720064508914152*^9, 
  3.720064520195463*^9}},ExpressionUUID->"74022fb6-08f8-4dd4-87cb-\
bdf3eefff19a"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], "B"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "-", 
       RowBox[{"v", " ", "t", " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "A"], "]"}]}]}], ")"}], 
     OverscriptBox["x", "^"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"v", " ", "t", " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "A"], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], "g", " ", 
        SuperscriptBox["t", "2"]}]}], ")"}], 
     OverscriptBox["y", "^"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"ca32f4ef-daac-4c6a-8bc6-f9adce519b05"]], \
"TextNumbered",
 CellChangeTimes->{{3.621135580382345*^9, 3.621135618996441*^9}, {
  3.6211357712382364`*^9, 3.6211357712382364`*^9}, {3.621138498126337*^9, 
  3.621138499324405*^9}, {3.621138562324009*^9, 3.621138606452533*^9}, {
  3.6211386614876804`*^9, 3.621138661586686*^9}, {3.621376681632337*^9, 
  3.621376689187769*^9}, {3.6213768092286353`*^9, 3.6213768558983045`*^9}, {
  3.62137697610318*^9, 3.621376985104695*^9}, {3.6213771478060007`*^9, 
  3.6213771478060007`*^9}, {3.6213777991912575`*^9, 3.621377808424786*^9}, {
  3.720064508914152*^9, 
  3.7200645202579594`*^9}},ExpressionUUID->"25fe4828-3798-4a92-83e4-\
d5ae4201a018"],

Cell[TextData[{
 "We would like to minimize the distance between the two cupcakes over ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "5a118b5b-07d2-4530-8e1c-6250eb0f3400"],
 ". This distance equals "
}], "Text",
 CellChangeTimes->{
  3.6213777852004576`*^9, {3.62137788489616*^9, 
   3.6213778966778336`*^9}},ExpressionUUID->"9d65c817-ddde-4095-850a-\
04193d877817"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[LeftBracketingBar]", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["r", "\[RightVector]"], "A"], "-", 
     SubscriptBox[
      OverscriptBox["r", "\[RightVector]"], "B"]}], "\[RightBracketingBar]"}],
    "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "A"], "]"}], "+", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "-", "d"}], 
       "}"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"{", 
       RowBox[{"v", " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "A"], "]"}], "-", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "}"}], "2"]}]]}], 
  TraditionalForm]],ExpressionUUID->"5142818c-fa58-4617-bcdf-e8b4f1b48116"]], \
"TextNumbered",
 CellChangeTimes->{{3.621377740148881*^9, 3.62137774363308*^9}, {
  3.621377850477191*^9, 3.6213778808529286`*^9}, {3.6213779149658794`*^9, 
  3.621377919288127*^9}, {3.621378663910717*^9, 3.621378666955891*^9}},
 CellTags->"tag16",ExpressionUUID->"f84d22a3-4dce-4a2b-9cad-fb623cac2548"],

Cell[TextData[{
 "To find the minima, we are going to need to differentiate this function \
over ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "66cc56bb-ffd6-4b7a-908a-42de30b5cf84"],
 " and set it equal to 0. However, taking the derivative of a square root is \
incredibly messy. To simplify the calculation, notice that the minima of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftBracketingBar]", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["r", "\[RightVector]"], "A"], "-", 
     SubscriptBox[
      OverscriptBox["r", "\[RightVector]"], "B"]}], "\[RightBracketingBar]"}],
    TraditionalForm]],ExpressionUUID->"82ff3136-9e08-4dd4-8eb3-67f5ec87642c"],
 " occurs at the same time as the minima of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["r", "\[RightVector]"], "A"], "-", 
      SubscriptBox[
       OverscriptBox["r", "\[RightVector]"], "B"]}], 
     "\[RightBracketingBar]"}], "2"], TraditionalForm]],ExpressionUUID->
  "4901d863-7229-4dca-b16c-c8f34996b117"],
 ", so instead we will differentiate the ",
 StyleBox["significantly",
  FontSlant->"Italic"],
 " simpler function "
}], "Text",
 CellChangeTimes->{{3.621377930332759*^9, 3.6213779519599953`*^9}, {
  3.6213779855049143`*^9, 
  3.6213780794142857`*^9}},ExpressionUUID->"02eef46a-6b08-4ddc-9122-\
b2afdef8a322"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["r", "\[RightVector]"], "A"], "-", 
      SubscriptBox[
       OverscriptBox["r", "\[RightVector]"], "B"]}], 
     "\[RightBracketingBar]"}], "2"], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v", " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "A"], "]"}], "+", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "-", "d"}], "}"}],
      "2"], "+", 
    SuperscriptBox[
     RowBox[{"{", 
      RowBox[{"v", " ", "t", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "A"], "]"}], "-", 
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "}"}], "2"]}]}], 
  TraditionalForm]],ExpressionUUID->"15c224bc-7f38-4d96-ab6d-28bcd430af76"]], \
"TextNumbered",
 CellChangeTimes->{{3.621377740148881*^9, 3.62137774363308*^9}, {
  3.621377850477191*^9, 3.6213778808529286`*^9}, {3.6213779149658794`*^9, 
  3.621377919288127*^9}, {3.6213780867567053`*^9, 3.62137811673742*^9}, {
  3.621378659048439*^9, 
  3.621378660727535*^9}},ExpressionUUID->"cb42de84-e7b6-42e6-a6d1-\
5af9d93bc432"],

Cell[TextData[{
 "Differentiating with respect to ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "16c82c8f-b79b-47ae-8da1-70b4309ddaac"],
 ", "
}], "Text",
 CellChangeTimes->{{3.6213781052497635`*^9, 3.621378111242106*^9}, {
   3.6213781777669115`*^9, 3.6213781811351037`*^9}, 
   3.621378262556761*^9},ExpressionUUID->"9116cc79-f941-42e7-ab22-\
5b9f076c88bc"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         FractionBox[
          RowBox[{"\[DifferentialD]", 
           SuperscriptBox[
            RowBox[{"\[LeftBracketingBar]", 
             RowBox[{
              SubscriptBox[
               OverscriptBox["r", "\[RightVector]"], "A"], "-", 
              SubscriptBox[
               OverscriptBox["r", "\[RightVector]"], "B"]}], 
             "\[RightBracketingBar]"}], "2"]}], 
          RowBox[{"\[DifferentialD]", "t"}]], "=", 
         RowBox[{"2", "\[AlignmentMarker] ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "A"], "]"}], "+", 
               RowBox[{"Sin", "[", 
                SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "-", "d"}], 
           "}"}], 
          RowBox[{"{", 
           RowBox[{"v", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}], "+", 
              RowBox[{"Sin", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "}"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{
          RowBox[{"+", " ", "2"}], 
          RowBox[{"{", 
           RowBox[{"v", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sin", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}], "-", 
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "}"}], 
          RowBox[{"{", 
           RowBox[{"v", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sin", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}], "-", 
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "}"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b86aa802-cb4e-48d6-8ef0-3f8ced808761"]], \
"TextNumbered",
 CellChangeTimes->{{3.621378701607873*^9, 3.621378701607873*^9}, {
  3.6213787366758785`*^9, 
  3.621378779918352*^9}},ExpressionUUID->"f220b15e-f219-4376-85a1-\
4191f1857c90"],

Cell[TextData[{
 "Simplifying and setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "=", 
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox[
       RowBox[{"\[LeftBracketingBar]", 
        RowBox[{
         SubscriptBox[
          OverscriptBox["r", "\[RightVector]"], "A"], "-", 
         SubscriptBox[
          OverscriptBox["r", "\[RightVector]"], "B"]}], 
        "\[RightBracketingBar]"}], "2"]}], 
     RowBox[{"\[DifferentialD]", "t"}]]}], TraditionalForm]],ExpressionUUID->
  "33a8d155-b0b9-4f0a-96dd-b34c792bb523"],
 ", "
}], "Text",
 CellChangeTimes->{{3.621378247580904*^9, 
  3.6213782585155296`*^9}},ExpressionUUID->"3cf5f855-3466-4145-bbda-\
0cc808a0e7e6"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"0", "=", 
         RowBox[{
          RowBox[{
           SuperscriptBox["v", "2"], " ", "t", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}], "+", 
              RowBox[{"Sin", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["v", "2"], " ", "t", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sin", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}], "-", 
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"v", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "A"], "]"}], "+", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"2", 
           SuperscriptBox["v", "2"], " ", "t"}], "-", 
          RowBox[{"v", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "A"], "]"}], "+", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"9c59eea1-d76a-48da-b968-6cf16594f324"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213783512988367`*^9, 3.621378377722348*^9}, {
  3.6213784601500626`*^9, 3.6213784623201866`*^9}, {3.6213784993103027`*^9, 
  3.6213784993103027`*^9}, {3.6213786446376143`*^9, 
  3.621378649416888*^9}},ExpressionUUID->"02ab02fa-3fc8-4bb1-ae75-\
648034dd0321"],

Cell["which we can solve for the time of minimum distance, ", "Text",
 CellChangeTimes->{{3.621378381356556*^9, 
  3.6213783978044963`*^9}},ExpressionUUID->"e87ba3ad-bd50-41c7-859a-\
395f812ac5d2"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["t", 
    RowBox[{"min", " ", "distance"}]], "=", 
   RowBox[{
    FractionBox["d", 
     RowBox[{"2", "v"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "A"], "]"}], "+", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"40f4feb7-9722-457c-8c7a-a48640c8934f"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213783868488703`*^9, 3.62137842251991*^9}, {
  3.6213785024234805`*^9, 3.6213785024234805`*^9}, {3.6213786132308183`*^9, 
  3.6213786135128345`*^9}},ExpressionUUID->"b4be7776-89e5-4457-b38f-\
dbe846c60e27"],

Cell[TextData[{
 "To find the minimum distance, we substitute this time back into Equation (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "tag16"], TraditionalForm]],ExpressionUUID->
  "40aedd91-0b3e-42d0-8c70-024a79da5809"],
 ") to obtain "
}], "Text",
 CellChangeTimes->{{3.621378510085919*^9, 3.6213785419597416`*^9}, {
   3.6843783512981577`*^9, 3.6843783536578074`*^9}, 
   3.72006457686999*^9},ExpressionUUID->"6217a968-25fe-489d-b6e2-\
eba01a0fd2ac"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox["r", 
          RowBox[{"min", " ", "distance"}]], "=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"v", " ", 
               SubscriptBox["t", 
                RowBox[{"min", " ", "distance"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "A"], "]"}], "+", 
                 RowBox[{"Sin", "[", 
                  SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "-", "d"}],
              "}"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"{", 
             RowBox[{"v", " ", 
              SubscriptBox["t", 
               RowBox[{"min", " ", "distance"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "A"], "]"}], "-", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}]}], "}"}], 
            "2"]}]]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               FractionBox["d", "2"], 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", 
                   SubscriptBox["\[Theta]", "A"]}], "]"}]}], ")"}]}], " ", 
              "-", "d"}], "}"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"{", 
             RowBox[{
              FractionBox["d", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", 
                SubscriptBox["\[Theta]", "A"]}], "]"}]}], "}"}], "2"]}]]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["d", "2"], 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"2", 
                 SubscriptBox["\[Theta]", "A"]}], "]"}], "-", "1"}], ")"}], 
             "2"], "+", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"2", 
               SubscriptBox["\[Theta]", "A"]}], "]"}], "2"]}]]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["d", "2"], 
          SqrtBox[
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", 
                SubscriptBox["\[Theta]", "A"]}], "]"}]}], ")"}]}]]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["d", 
           SqrtBox["2"]], 
          SqrtBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}], "-", 
              RowBox[{"Sin", "[", 
               SubscriptBox["\[Theta]", "A"], "]"}]}], ")"}], "2"]]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["d", 
           SqrtBox["2"]], 
          RowBox[{"\[LeftBracketingBar]", 
           RowBox[{
            RowBox[{"Cos", "[", 
             SubscriptBox["\[Theta]", "A"], "]"}], "-", 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "A"], "]"}]}], 
           "\[RightBracketingBar]"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"5cc3481d-6502-43a5-ae3f-7002fe26ccbd"]], \
"TextNumbered",
 CellChangeTimes->{{3.6213785740225754`*^9, 3.6213786094546022`*^9}, {
  3.6213788042107415`*^9, 3.621378813480272*^9}, {3.621378865740261*^9, 
  3.6213788779679604`*^9}, {3.621378908285694*^9, 3.621378953719293*^9}, {
  3.6213789947306385`*^9, 3.621379087175926*^9}, {3.6213791504895477`*^9, 
  3.62137922676291*^9}},ExpressionUUID->"5271765d-fe26-4fdc-99f5-\
63d2c1dab97d"],

Cell[CellGroupData[{

Cell[TextData[{
 "That\[CloseCurlyQuote]s a pretty neat formula! Note that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{"min", " ", "distance"}]], TraditionalForm]],ExpressionUUID->
  "beaa1059-1dec-4166-a09e-5c3fc0f0c876"],
 " does not occur halfway through the flights of either cupcake A or cupcake \
B (",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", 
    RowBox[{
     FractionBox["v", "g"], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "A"], "]"}]}]}], TraditionalForm]],
  ExpressionUUID->"9fbcd13a-d3a5-4d69-ba7e-23158e205292"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", 
    RowBox[{
     FractionBox["v", "g"], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "B"], "]"}]}]}], TraditionalForm]],
  ExpressionUUID->"619bacdb-46c6-4727-89a7-9725816c74ae"],
 ", respectively) except for the special cases ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "A"], "=", "0"}], ",", 
    FractionBox["\[Pi]", "4"], ",", 
    RowBox[{"and", " ", 
     FractionBox["\[Pi]", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "e1ce670e-1e78-4a3b-a5fc-a6786eb78863"],
 ". "
}], "Text",
 CellChangeTimes->{{3.621379271180451*^9, 3.621379275604704*^9}, {
   3.6213794875708275`*^9, 3.621379564910251*^9}, {3.6213797545771*^9, 
   3.62137989882335*^9}, 3.684378532453912*^9, {3.7205014590897074`*^9, 
   3.7205014784425592`*^9}},ExpressionUUID->"0a362beb-a082-4bd5-8086-\
23c591c51fb8"],

Cell[TextData[{
 "The two cases ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "A"], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"c2aa0dcb-f339-4bea-b3b5-46fc5c64b32b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "A"], "=", 
    FractionBox["\[Pi]", "2"]}], TraditionalForm]],ExpressionUUID->
  "ed165cee-c890-443f-92df-8e964ce61083"],
 " are trivial since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ee8020df-b770-4028-be1f-daf66b06c689"],
 " and the two clowns start off at the same spot, so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"min", " ", "distance"}]], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "20b7c403-ba17-41ce-95b9-ab9563d77d9d"],
 ". For ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "A"], "\[TildeTilde]", 
    FractionBox["\[Pi]", "4"]}], TraditionalForm]],ExpressionUUID->
  "026c1459-7b36-40ca-b97b-7cdb6cb1f9dc"],
 ", both clowns take roughly the same path (and if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "A"], "=", 
    FractionBox["\[Pi]", "4"]}], TraditionalForm]],ExpressionUUID->
  "d6e7c38a-9ec9-464b-b600-1425712bdc26"],
 " exactly, then both clowns collide in midair), so we expect ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"min", " ", "distance"}]], "\[TildeTilde]", "0"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b779fe14-25a6-453c-a60a-0b0b92155da3"],
 ", as is indeed seen by the formula above. For any other trajectory, the \
point of closest approach between the two clowns will not be when either \
cupcake is at the peak of its flight. Here is a diagram of the trajectories \
of the flying cupcakes (shown in purple), with the points of closest approach \
shown in green."
}], "Text",
 CellChangeTimes->{{3.621379271180451*^9, 3.621379275604704*^9}, {
  3.6213794875708275`*^9, 3.621379564910251*^9}, {3.6213797545771*^9, 
  3.62137989882335*^9}, {3.684378532453912*^9, 3.6843785430965424`*^9}, {
  3.7205019250167246`*^9, 
  3.720502044889046*^9}},ExpressionUUID->"58e98a6b-e3a6-4bb7-a05c-\
ac6c3eaceea3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", "10."}], ",", 
      RowBox[{"v", "=", "1."}], ",", "d", ",", 
      RowBox[{"s1", "=", "0.004"}], ",", 
      RowBox[{"s2", "=", "0.0012"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox["v", "2"], "g"], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]A"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"v", "*", "t", "*", 
               RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "*", "t", "*", 
                RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], "-", 
               RowBox[{
                FractionBox["1", "2"], "g", " ", 
                SuperscriptBox["t", "2"]}]}]}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"2", "*", "v"}], "g"], 
              RowBox[{"Sin", "[", "\[Theta]A", "]"}]}]}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.01"}], "d"}], ",", 
                RowBox[{"1.012", "d"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.0015"}], "-", "s1", "-", "s2", "-", 
                 "0.003"}], ",", "0.05"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
           RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "-", 
               RowBox[{"v", "*", "t", "*", 
                RowBox[{"Sin", "[", "\[Theta]A", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"v", "*", "t", "*", 
                RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], "-", 
               RowBox[{
                FractionBox["1", "2"], "g", " ", 
                SuperscriptBox["t", "2"]}]}]}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"2", "*", "v"}], "g"], 
              RowBox[{"Cos", "[", "\[Theta]A", "]"}]}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}]}], 
          "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"d", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"1.1", 
                   FractionBox[
                    SuperscriptBox["v", "2"], 
                    RowBox[{"2", " ", "g"}]]}]}], "}"}]}], "}"}], "]"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Gray", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"d", ",", 
                    RowBox[{"-", "s1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "s1"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"d", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "+", "s2"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"d", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "-", "s2"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "+", "s2"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", "s1"}], "-", "s2"}]}], "}"}]}], "}"}]}], 
                "}"}], "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"font", "[", 
                 RowBox[{"\"\<d\>\"", ",", "Italic"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"d", "/", "2"}], ",", 
                  RowBox[{
                   RowBox[{"-", "s1"}], "-", "0.004"}]}], "}"}]}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"(*", 
             RowBox[{"Purple", ",", 
              RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", "0"}], "}"}]}], "}"}], "]"}], ","}], 
             "*)"}], 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"0.2", "<", "\[Theta]A", "<", "1.2"}], ",", 
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"0.01", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], "}"}]}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"d", ",", "0"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"d", ",", "0"}], "}"}], "+", 
                    RowBox[{"0.01", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], "-", "\[Theta]A"}], "]"}]}], 
                    ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], "-", "\[Theta]A"}], "]"}]}], 
                    "}"}]}]}]}], "}"}]}], "}"}], "]"}], ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.004", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "\[Theta]A"}], "}"}]}], "]"}], ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"d", ",", "0"}], "}"}], ",", "0.004", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "+", "\[Theta]A"}], ",", 
                    "\[Pi]"}], "}"}]}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{
                  "font", "@", 
                   "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(A\)]\)\>\""}], ",", 
                  RowBox[{"Offset", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "2"}]}], "}"}], ",", 
                    RowBox[{"0.009", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]A", "/", "2"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]A", "/", "2"}], "]"}]}], "}"}]}]}], 
                   "]"}]}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{
                  "font", "@", 
                   "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(B\)]\)\>\""}], ",", 
                  RowBox[{"Offset", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"d", ",", "0"}], "}"}], "+", 
                    RowBox[{"0.007", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "2"], "+", "\[Theta]A"}], 
                    ")"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "2"], "+", "\[Theta]A"}], 
                    ")"}]}], "]"}]}], "}"}]}]}]}], "]"}]}], "]"}]}], "}"}]}], 
             "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Darker", "@", 
             RowBox[{"Darker", "@", "Purple"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"t", "\[LessEqual]", 
               RowBox[{
                FractionBox[
                 RowBox[{"2", "v"}], "g"], 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]A", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], "]"}]}]}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"v", " ", "t", " ", 
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], ",", 
                   RowBox[{
                    RowBox[{"v", " ", "t", " ", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], "g", " ", 
                    SuperscriptBox["t", "2"]}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"d", "-", 
                    RowBox[{"v", " ", "t", " ", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"v", " ", "t", " ", 
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], "g", " ", 
                    SuperscriptBox["t", "2"]}]}]}], "}"}]}], "}"}], "]"}]}], 
             "]"}], ",", "Purple", ",", 
            RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"d", ",", 
                   RowBox[{"v", " ", "t", " ", 
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}]}]}], "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"v", " ", "t", " ", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], "g", " ", 
                    SuperscriptBox["t", "2"]}]}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"d", "-", 
                    RowBox[{"v", " ", "t", " ", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}]}]}], "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"v", " ", "t", " ", 
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], "g", " ", 
                    SuperscriptBox["t", "2"]}]}]}], "]"}]}], "}"}]}], "}"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Points", " ", "in", " ", "the", " ", "trajectory", " ", "that", 
              " ", "are", " ", "closest"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"Darker", "@", 
             RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"closest", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", "d", " ", 
                   RowBox[{"Cos", "[", "\[Theta]A", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}], "+", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], ")"}]}], ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}], "+", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", "g", " ", 
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", "g"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["v", "2"]}]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}]}], ")"}]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox["v", "2"]}]]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "4"], " ", "d", " ", 
                   RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]A"}], "]"}], "-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Theta]A"}], "]"}]}], ")"}]}], ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}], "+", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", "g"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["v", "2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], "+", 
                    RowBox[{"d", " ", "g", " ", 
                    RowBox[{"Sin", "[", "\[Theta]A", "]"}]}]}], ")"}]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox["v", "2"]}]]}]}], "}"}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Point", "[", "closest", "]"}]}], ",", 
            RowBox[{"Darker", "@", 
             RowBox[{"Darker", "@", 
              RowBox[{"Darker", "@", "Green"}]}]}], ",", 
            RowBox[{"Line", "[", "closest", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}]}], "}"}], ",", "0", 
        ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "*", "v"}], "g"], 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]A", "]"}], ",", 
           RowBox[{"Cos", "[", "\[Theta]A", "]"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]A", ",", "0.59", ",", 
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"font", "@", "\"\<\[Theta]\>\""}], ",", 
            RowBox[{"font", "[", 
             RowBox[{"\"\<A\>\"", ",", "12", ",", "Italic"}], "]"}]}], 
           "]"}]}], "}"}], ",", "0.01", ",", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "0.001"}]}], "}"}], ",", 
      RowBox[{"Initialization", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"font", "[", 
          RowBox[{"text_", ",", 
           RowBox[{"size_Integer:", "14"}], ",", "opts___"}], "]"}], ":=", 
         RowBox[{"(", 
          RowBox[{"Style", "[", 
           RowBox[{"text", ",", "size", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "opts"}],
            "]"}], ")"}]}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6212796190365133`*^9, 3.6212797418955407`*^9}, {
   3.6212797749944344`*^9, 3.621279944807147*^9}, {3.621279974843865*^9, 
   3.62128003613737*^9}, {3.621280086294239*^9, 3.6212801183020697`*^9}, {
   3.6212801599554524`*^9, 3.6212802494985743`*^9}, {3.6212802928490534`*^9, 
   3.621280311268107*^9}, {3.621375586666709*^9, 3.6213756300411897`*^9}, {
   3.6213756706755133`*^9, 3.621376013886144*^9}, {3.621376121748314*^9, 
   3.6213763672403545`*^9}, {3.6213764615827513`*^9, 
   3.6213764775926666`*^9}, {3.6213765181859884`*^9, 
   3.6213765259374323`*^9}, {3.621651987432435*^9, 3.6216519892424374`*^9}, {
   3.6845496175774975`*^9, 3.6845496495351915`*^9}, 3.7200646742948327`*^9, {
   3.720498126744732*^9, 3.720498319415033*^9}, {3.720498350660823*^9, 
   3.720498407859821*^9}, {3.720498530550848*^9, 3.7204985324060297`*^9}, {
   3.7204985634989796`*^9, 3.7204985769631176`*^9}, {3.7204986966590395`*^9, 
   3.7204987059795637`*^9}, {3.720498783192732*^9, 3.72049880186685*^9}, {
   3.720498833360058*^9, 3.7204988376936927`*^9}, {3.7204988895050154`*^9, 
   3.7204989735412235`*^9}, {3.7204990112547073`*^9, 3.72049904692107*^9}, {
   3.7204991280355625`*^9, 3.7204994231048746`*^9}, {3.7205015722885695`*^9, 
   3.720501606970589*^9}, {3.7205020666930094`*^9, 3.7205021525399*^9}, {
   3.72050220992013*^9, 3.720502247457591*^9}, {3.72050291731025*^9, 
   3.720502920012988*^9}, {3.7209253103348804`*^9, 3.72092532098838*^9}, {
   3.7209253549473863`*^9, 
   3.720925413976658*^9}},ExpressionUUID->"b834874a-3ea8-4e91-b70d-\
71cf2dc4b747"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`g$$ = 10., $CellContext`v$$ = 
   1., $CellContext`d$$ = 0.09246060124080203, $CellContext`s1$$ = 
   0.004, $CellContext`s2$$ = 0.0012}, 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`t$$ = 0, $CellContext`\[Theta]A$$ = 0.59, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`t$$], 0, 
         Style["t", Italic]}, 0, 
        Dynamic[(2 ($CellContext`v$$/$CellContext`g$$)) Max[
           Sin[$CellContext`\[Theta]A$$], 
           Cos[$CellContext`\[Theta]A$$]]]}, {{
         Hold[$CellContext`\[Theta]A$$], 0.59, 
         Subscript[
          Style["\[Theta]", 14, FontFamily -> "Times"], 
          Style["A", 12, FontFamily -> "Times", Italic]]}, 0.01, 
        1.5697963267948967`}}, Typeset`size$$ = {576., {139., 149.}}, 
      Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
      False, $CellContext`t$55312$$ = 0, $CellContext`\[Theta]A$55313$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`t$$ = 0, $CellContext`\[Theta]A$$ = 
          0.59}, "ControllerVariables" :> {
          Hold[$CellContext`t$$, $CellContext`t$55312$$, 0], 
          Hold[$CellContext`\[Theta]A$$, $CellContext`\[Theta]A$55313$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> ($CellContext`d$$ = ($CellContext`v$$^2/$CellContext`g$$) 
           Sin[2 $CellContext`\[Theta]A$$]; Show[
           
           ParametricPlot[{{($CellContext`v$$ $CellContext`t$$) 
              Cos[$CellContext`\[Theta]A$$], ($CellContext`v$$ \
$CellContext`t$$) 
               Sin[$CellContext`\[Theta]A$$] - ((1/
                2) $CellContext`g$$) $CellContext`t$$^2}}, {$CellContext`t$$, 
             0, (2 ($CellContext`v$$/$CellContext`g$$)) 
             Sin[$CellContext`\[Theta]A$$]}, 
            PlotRange -> {{(-0.01) $CellContext`d$$, 
               1.012 $CellContext`d$$}, {-0.0015 - $CellContext`s1$$ - \
$CellContext`s2$$ - 0.003, 0.05}}, AspectRatio -> 0.5, PlotRangeClipping -> 
            False, Axes -> False], 
           
           ParametricPlot[{{$CellContext`d$$ - ($CellContext`v$$ \
$CellContext`t$$) 
              Sin[$CellContext`\[Theta]A$$], ($CellContext`v$$ \
$CellContext`t$$) 
               Cos[$CellContext`\[Theta]A$$] - ((1/
                2) $CellContext`g$$) $CellContext`t$$^2}}, {$CellContext`t$$, 
             0, (2 ($CellContext`v$$/$CellContext`g$$)) 
             Cos[$CellContext`\[Theta]A$$]}, PlotStyle -> ColorData[97][2]], 
           Graphics[{{
              
              Line[{{$CellContext`d$$, 0}, {0, 0}, {
                0, 1.1 ($CellContext`v$$^2/(2 $CellContext`g$$))}}]}, {Gray, 
              
              Line[{{{$CellContext`d$$, -$CellContext`s1$$}, {
                 0, -$CellContext`s1$$}}, {{$CellContext`d$$, \
-$CellContext`s1$$ + $CellContext`s2$$}, {$CellContext`d$$, \
-$CellContext`s1$$ - $CellContext`s2$$}}, {{
                 0, -$CellContext`s1$$ + $CellContext`s2$$}, {
                 0, -$CellContext`s1$$ - $CellContext`s2$$}}}], 
              Text[
               $CellContext`font[
               "d", Italic], {$CellContext`d$$/2, -$CellContext`s1$$ - 
                0.004}]}, 
             If[0.2 < $CellContext`\[Theta]A$$ < 1.2, {Black, 
               Arrow[{{{0, 0}, 0.01 {
                    Cos[$CellContext`\[Theta]A$$], 
                    Sin[$CellContext`\[Theta]A$$]}}, {{$CellContext`d$$, 
                   0}, {$CellContext`d$$, 0} + 
                  0.01 {-Cos[Pi/2 - $CellContext`\[Theta]A$$], 
                    Sin[Pi/2 - $CellContext`\[Theta]A$$]}}}], 
               Circle[{0, 0}, 0.004, {0, $CellContext`\[Theta]A$$}], 
               
               Circle[{$CellContext`d$$, 0}, 0.004, {
                Pi/2 + $CellContext`\[Theta]A$$, Pi}], 
               Text[
                $CellContext`font[
                "\!\(\*SubscriptBox[\(\[Theta]\), \(A\)]\)"], 
                Offset[{0, -2}, 0.009 {
                   Cos[$CellContext`\[Theta]A$$/2], 
                   Sin[$CellContext`\[Theta]A$$/2]}]], 
               Text[
                $CellContext`font[
                "\!\(\*SubscriptBox[\(\[Theta]\), \(B\)]\)"], 
                Offset[{0, 0}, {$CellContext`d$$, 0} + 0.007 {
                    Cos[(1/2) (3 (Pi/2) + $CellContext`\[Theta]A$$)], 
                    Sin[(1/2) (3 (Pi/2) + $CellContext`\[Theta]A$$)]}]]}]}], 
           Graphics[{Dashed, 
             Darker[
              Darker[Purple]], 
             
             If[$CellContext`t$$ <= (2 ($CellContext`v$$/$CellContext`g$$)) 
               Min[
                 Sin[$CellContext`\[Theta]A$$], 
                 Cos[$CellContext`\[Theta]A$$]], 
              
              Line[{{($CellContext`v$$ $CellContext`t$$) 
                 Cos[$CellContext`\[Theta]A$$], ($CellContext`v$$ \
$CellContext`t$$) 
                  Sin[$CellContext`\[Theta]A$$] - ((1/
                   2) $CellContext`g$$) $CellContext`t$$^2}, \
{$CellContext`d$$ - ($CellContext`v$$ $CellContext`t$$) 
                 Sin[$CellContext`\[Theta]A$$], ($CellContext`v$$ \
$CellContext`t$$) 
                  Cos[$CellContext`\[Theta]A$$] - ((1/
                   2) $CellContext`g$$) $CellContext`t$$^2}}]], Purple, 
             PointSize[0.02], 
             Point[{{
                
                Min[$CellContext`d$$, ($CellContext`v$$ $CellContext`t$$) 
                 Cos[$CellContext`\[Theta]A$$]], 
                Max[
                0, ($CellContext`v$$ $CellContext`t$$) 
                  Sin[$CellContext`\[Theta]A$$] - ((1/
                   2) $CellContext`g$$) $CellContext`t$$^2]}, {
                Max[
                0, $CellContext`d$$ - ($CellContext`v$$ $CellContext`t$$) 
                 Sin[$CellContext`\[Theta]A$$]], 
                Max[
                0, ($CellContext`v$$ $CellContext`t$$) 
                  Cos[$CellContext`\[Theta]A$$] - ((1/
                   2) $CellContext`g$$) $CellContext`t$$^2]}}], 
             Darker[
              Darker[
              Green]], $CellContext`closest = {{(((1/2) $CellContext`d$$) 
                  Cos[$CellContext`\[Theta]A$$]) (
                  Cos[$CellContext`\[Theta]A$$] + 
                  Sin[$CellContext`\[Theta]A$$]), -(($CellContext`d$$ (
                    Cos[$CellContext`\[Theta]A$$] + 
                    Sin[$CellContext`\[Theta]A$$])) ((($CellContext`d$$ \
$CellContext`g$$) 
                    Cos[$CellContext`\[Theta]A$$] + ($CellContext`d$$ \
$CellContext`g$$ - 4 $CellContext`v$$^2) Sin[$CellContext`\[Theta]A$$])/(
                   8 $CellContext`v$$^2)))}, {((1/4) $CellContext`d$$) (3 + 
                  Cos[2 $CellContext`\[Theta]A$$] - Sin[
                  2 $CellContext`\[Theta]A$$]), -(($CellContext`d$$ (
                    Cos[$CellContext`\[Theta]A$$] + 
                    Sin[$CellContext`\[Theta]A$$])) ((($CellContext`d$$ \
$CellContext`g$$ - 4 $CellContext`v$$^2) 
                    Cos[$CellContext`\[Theta]A$$] + ($CellContext`d$$ \
$CellContext`g$$) Sin[$CellContext`\[Theta]A$$])/(8 $CellContext`v$$^2)))}}; 
             Point[$CellContext`closest], 
             Darker[
              Darker[
               Darker[Green]]], 
             Line[$CellContext`closest]}]]), 
        "Specifications" :> {{{$CellContext`t$$, 0, 
            Style["t", Italic]}, 0, 
           Dynamic[(2 ($CellContext`v$$/$CellContext`g$$)) Max[
              Sin[$CellContext`\[Theta]A$$], 
              Cos[$CellContext`\[Theta]A$$]]]}, {{$CellContext`\[Theta]A$$, 
            0.59, 
            Subscript[
             Style["\[Theta]", 14, FontFamily -> "Times"], 
             Style["A", 12, FontFamily -> "Times", Italic]]}, 0.01, 
           1.5697963267948967`}}, "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{650., {224., 234.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>($CellContext`font[
          Pattern[$CellContext`text, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`size, 
            Blank[Integer]], 14], 
          Pattern[$CellContext`opts, 
           BlankNullSequence[]]] := 
        Style[$CellContext`text, $CellContext`size, FontFamily -> 
          "Times", $CellContext`opts]; Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.6213759374027696`*^9, 3.621375949311451*^9}, {
   3.6213759872676215`*^9, 3.6213760145871844`*^9}, {3.621376163853722*^9, 
   3.621376190939271*^9}, {3.6213762275473647`*^9, 3.621376357454795*^9}, {
   3.6213764000592318`*^9, 3.62137641313698*^9}, 3.6213764788247375`*^9, {
   3.62137652031711*^9, 3.621376526114442*^9}, 3.621376571907061*^9, {
   3.6216519893824377`*^9, 3.6216519978924494`*^9}, {3.684549618185772*^9, 
   3.684549650027749*^9}, 3.720064674650617*^9, {3.7204981237886305`*^9, 
   3.720498241479062*^9}, {3.7204982838679295`*^9, 3.720498319861862*^9}, {
   3.7204983524934597`*^9, 3.720498408140049*^9}, 3.7204985325687838`*^9, {
   3.7204985679863386`*^9, 3.7204985771791096`*^9}, {3.720498786811304*^9, 
   3.720498803220413*^9}, 3.720498839410865*^9, {3.720498892539156*^9, 
   3.720498988974468*^9}, {3.720499182792041*^9, 3.7204994388039703`*^9}, {
   3.7205015730897255`*^9, 3.720501607370533*^9}, {3.7205020491238832`*^9, 
   3.720502087468768*^9}, {3.7205021329438086`*^9, 3.7205021625198245`*^9}, {
   3.7205022263071594`*^9, 3.7205022642170143`*^9}, 3.7205029228438616`*^9, 
   3.720925323521817*^9, 3.7209253562303553`*^9, 3.720925421338193*^9, 
   3.720925493126956*^9},ExpressionUUID->"da50c8bd-9f50-4d6d-98ea-\
57bff25ca174"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Driven Oscillations", "Subsection",
 CellChangeTimes->{{3.7202983503131585`*^9, 3.720298354186201*^9}, 
   3.721155907040267*^9},ExpressionUUID->"61ac23a8-ce84-456b-bc88-\
819c515c9ae5"],

Cell[TextData[{
 StyleBox["Example",
  FontVariations->{"Underline"->True}],
 "\nTwo identical masses are attached to three identical springs as shown \
below. The system starts off at rest with all of the springs at their \
unstretched length. At time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "26dc13c5-dacf-46fa-85b6-afaee2ef8547"],
 ", the left mass is subjected to a driving force ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "d"], 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"2b859ad5-b80b-470e-a284-ffcca775c818"],
 " and the right mass to a driving force ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SubscriptBox["F", "d"], 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"1f32b8d5-fd88-4efd-a05e-627aa7b2de38"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["k", "m"], ")"}], 
     RowBox[{"1", "/", "2"}]]}], TraditionalForm]],ExpressionUUID->
  "b57b247b-a59a-464f-bab4-d0038b92de57"],
 ". Our goal will be to find the resulting displacement of the left mass ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "L"], "[", "t", "]"}], TraditionalForm]],
  ExpressionUUID->"c142265d-1b54-46ff-997b-477f736a03a5"],
 " and the right mass ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "R"], "[", "t", "]"}], TraditionalForm]],
  ExpressionUUID->"30845e37-0e12-4a38-b4a4-5e5e2303ddd3"],
 "."
}], "Text",
 CellChangeTimes->{{3.72050386796737*^9, 3.720503873405262*^9}, {
  3.720503915928213*^9, 
  3.7205039401667833`*^9}},ExpressionUUID->"bffd3829-a0ee-44f4-91b2-\
9cdaa6696e4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FaceForm", "[", "backgroundColor2", "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"p1", "+", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.5"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              RowBox[{"p1", "+", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Last", "@", "p1"}]}], "}"}], "+", 
               RowBox[{"{", 
                RowBox[{"xf", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Last", "@", "p1"}]}], "}"}], "+", 
               RowBox[{"{", 
                RowBox[{"xf", ",", 
                 RowBox[{"-", "1"}]}], "}"}], "+", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "2"}], "}"}]}]}], "]"}]}], "}"}], ",", 
          RowBox[{"Lighter", "@", "color2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FaceForm", "[", "backgroundColor1", "]"}], ",", 
            RowBox[{"EdgeForm", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Gray"}], "}"}],
              "]"}], ",", 
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"p2", "+", 
               RowBox[{"{", 
                RowBox[{"0.45", ",", "0"}], "}"}]}], ",", "0.5"}], "]"}], ",", 
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"p2", "+", 
               RowBox[{"{", 
                RowBox[{"3.65", ",", "0"}], "}"}]}], ",", "0.5"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"m\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
              RowBox[{"p2", "+", 
               RowBox[{"{", 
                RowBox[{"0.45", ",", "0"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"m\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
              RowBox[{"p2", "+", 
               RowBox[{"{", 
                RowBox[{"3.65", ",", "0"}], "}"}]}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"p1", "+", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], ",", 
                 RowBox[{"p1", "+", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"Last", "@", "p1"}]}], "}"}], "+", 
                  RowBox[{"{", 
                   RowBox[{"xf", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"Last", "@", "p1"}]}], "}"}], "+", 
                  RowBox[{"{", 
                   RowBox[{"xf", ",", "1"}], "}"}]}]}], "}"}]}], "}"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"color2", ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"k\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"{", 
                 RowBox[{"p1", ",", "p2"}], "}"}], "]"}], "+", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "0.7"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"k\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"{", 
                 RowBox[{"p1", ",", "p2"}], "}"}], "]"}], "+", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"First", "@", "p2"}], "+", "1.23"}], ",", 
                 RowBox[{"-", "0.7"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"k\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"{", 
                 RowBox[{"p1", ",", "p2"}], "}"}], "]"}], "+", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"2", 
                   RowBox[{"First", "@", "p2"}]}], "+", 
                  RowBox[{"2", " ", "1.23"}]}], ",", 
                 RowBox[{"-", "0.7"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{"drivingForceQ", ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", 
              RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", "color2", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "@", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", "t"}], "]"}]}], ">", "0.4"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{"0.45", ",", "0.8"}], "}"}]}], ",", 
                    RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.45", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}], ",", "0.8"}], "}"}]}]}], 
                    "}"}], "]"}], ",", 
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{"3.65", ",", "0.8"}], "}"}]}], ",", 
                    RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"3.65", "+", 
                    RowBox[{"2", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}]}], ",", "0.8"}], "}"}]}]}], 
                    "}"}], "]"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"font", "@", "\"\<driving force\>\""}], ",", 
                RowBox[{"Mean", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{"0.45", ",", "1.3"}], "}"}]}], ",", 
                   RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{"3.65", ",", "1.3"}], "}"}]}]}], "}"}], "]"}]}], 
               "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.3", "t"}], "+", 
               RowBox[{"0.5", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", "t"}], "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"Sin", "[", 
               RowBox[{"2", "t"}], "]"}]}], "-", "0.25"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.3", "t"}], "+", 
                RowBox[{"0.5", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", "t"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{"First", "@", "p2"}], "+", "1.23"}], ",", 
            RowBox[{
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"Sin", "[", 
               RowBox[{"2", "t"}], "]"}]}], "-", "0.25"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.3", "t"}], "+", 
                RowBox[{"0.5", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", "t"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{"2", 
              RowBox[{"First", "@", "p2"}]}], "+", 
             RowBox[{"2", " ", "1.23"}]}], ",", 
            RowBox[{
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"Sin", "[", 
               RowBox[{"2", "t"}], "]"}]}], "-", "0.25"}]}], "}"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Lighter", "@", "color2"}]}]}], "]"}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"font", "[", 
         RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}]}], "}"}], ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"drivingForceQ", ",", "False", ",", 
        RowBox[{"font", "@", "\"\<driving\>\""}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
    RowBox[{"Initialization", "\[RuleDelayed]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"r", "=", "0.5"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pt1", ",", "pt2"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"7.2", ",", "0"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t1", ",", "t2"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.1"}], ",", "12.095574287564276`"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p1", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.3", "tt"}], "+", 
              RowBox[{"0.5", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "tt"}], "]"}]}]}], ")"}]}], ",", 
           RowBox[{
            FractionBox["1", "3"], 
            RowBox[{"Sin", "[", 
             RowBox[{"2", "tt"}], "]"}]}]}], "}"}], "/.", 
         RowBox[{"tt", "\[Rule]", "t1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p2", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.3", "tt"}], "+", 
              RowBox[{"0.5", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "tt"}], "]"}]}]}], ")"}]}], ",", 
           RowBox[{
            FractionBox["1", "3"], 
            RowBox[{"Sin", "[", 
             RowBox[{"2", "tt"}], "]"}]}]}], "}"}], "/.", 
         RowBox[{"tt", "\[Rule]", "t2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xf", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0.3", "tt"}], "+", 
             RowBox[{"0.5", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "tt"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"2", 
           RowBox[{"First", "@", "p2"}]}], "+", 
          RowBox[{"2", " ", "1.23"}]}], "/.", 
         RowBox[{"tt", "\[Rule]", "t2"}]}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"Primary", " ", "colors", " ", "for", " ", "figures"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"colors", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "color1", ",", "color2", ",", "color3", ",", "color4", ",", 
           "color5", ",", "color6"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "10", "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "5", "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "6", "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "9", "]"}], ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "7", "]"}], ",", 
             "0.2"}], "]"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Secondary", " ", "colors", " ", "for", " ", "backgrounds"}], 
        " ", "*)"}], "\n", 
       RowBox[{"backgroundColors", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"backgroundColor1", ",", "backgroundColor2"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.99, 0.97432, 0.91748], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.66, 0.6495466666666667, 0.6116533333333334],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.99, 0.97432, 0.91748]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.99, 0.97432, 0.91748]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.99, 0.97432, 0.91748],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.9, 0.9, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6000000000000001, 0.6000000000000001, 0.6000000000000001],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.9, 0.9, 0.9]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.9, 0.9, 0.9]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.9, 0.9, 0.9],
            Editable->False,
            Selectable->False]}], "}"}]}]}], ";"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6875564266526318`*^9, 3.6875564743742747`*^9}, {
   3.687556545581839*^9, 3.6875566515546656`*^9}, {3.718829696664877*^9, 
   3.7188299154775867`*^9}, {3.7188299674161406`*^9, 
   3.7188299722202187`*^9}, {3.718830007116393*^9, 3.718830010535941*^9}, {
   3.7188300434950495`*^9, 3.718830119811097*^9}, {3.7188316502747145`*^9, 
   3.7188317156685*^9}, {3.7188318883445625`*^9, 3.7188319224072704`*^9}, {
   3.7188462131943645`*^9, 3.7188463799152665`*^9}, {3.7188464439691334`*^9, 
   3.718846568276882*^9}, {3.718846601650318*^9, 3.7188466871646085`*^9}, {
   3.7188467178831143`*^9, 3.718846850755378*^9}, {3.7188469110062723`*^9, 
   3.7188469967304935`*^9}, {3.7188470906084747`*^9, 
   3.7188471490334005`*^9}, {3.7188474209881287`*^9, 3.718847591790619*^9}, {
   3.718847648348106*^9, 3.718847763901962*^9}, {3.7188478326368084`*^9, 
   3.7188480447064195`*^9}, {3.7188482297371264`*^9, 
   3.7188482514897594`*^9}, {3.7188483580170507`*^9, 
   3.7188484119219513`*^9}, {3.7188484828804975`*^9, 3.718848663139924*^9}, {
   3.718848751446148*^9, 3.718848790424898*^9}, {3.7188488261918745`*^9, 
   3.7188489318919854`*^9}, {3.7188489867376575`*^9, 3.718849299894494*^9}, {
   3.718849354411028*^9, 3.7188494183273606`*^9}, {3.7188494513060503`*^9, 
   3.718849502871559*^9}, {3.7188495334326267`*^9, 3.718849598546183*^9}, {
   3.718849637195266*^9, 3.7188500207176657`*^9}, {3.7188500695342073`*^9, 
   3.7188501647523704`*^9}, {3.7188521537415433`*^9, 
   3.7188521797971325`*^9}, {3.718852219216525*^9, 3.7188522583804374`*^9}, 
   3.718852291530864*^9, {3.7188523233042145`*^9, 3.7188524148820014`*^9}, {
   3.718852461725545*^9, 3.718852481828128*^9}, {3.718852619895807*^9, 
   3.7188526550407076`*^9}, {3.7188527006009626`*^9, 3.718852763963353*^9}, {
   3.7188528031153045`*^9, 3.7188528435392203`*^9}, {3.7188541106085696`*^9, 
   3.718854110999651*^9}, {3.718854152587225*^9, 3.718854165819999*^9}, {
   3.7188543741143713`*^9, 3.718854374449748*^9}, {3.7209046325279775`*^9, 
   3.7209046914842963`*^9}, {3.7209047488075523`*^9, 3.720904811541198*^9}, {
   3.7209048534270296`*^9, 3.720904994893913*^9}, {3.7209050772626934`*^9, 
   3.720905228864564*^9}, {3.720905666615039*^9, 3.7209058599637337`*^9}, {
   3.7209061428354416`*^9, 3.72090616489265*^9}, {3.7209062459920435`*^9, 
   3.7209062466395655`*^9}, {3.720906358495289*^9, 3.7209063681694193`*^9}, {
   3.720906438492179*^9, 3.7209064691025004`*^9}, {3.720906580459501*^9, 
   3.7209068256887774`*^9}, {3.7209068599580903`*^9, 
   3.7209069791460395`*^9}, {3.7209071847093368`*^9, 
   3.7209072254562283`*^9}, {3.7209074562615557`*^9, 3.720907495536218*^9}, {
   3.7209075982249994`*^9, 3.720907693537532*^9}, {3.7209080069329853`*^9, 
   3.7209080754915056`*^9}, {3.7209241030685115`*^9, 3.720924118235468*^9}, 
   3.721096049072116*^9, 
   3.721096097900689*^9},ExpressionUUID->"71b5109f-25de-4d0b-afe9-\
07c399d4ed3f"],

Cell[BoxData[
 PanelBox[
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`drivingForceQ$$ = False, $CellContext`t$$ =
      0., Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`t$$], 0, 
        Style["t", 14, FontFamily -> "Times", Italic]}, 0, 2 Pi}, {{
        Hold[$CellContext`drivingForceQ$$], False, 
        Style["driving", 14, FontFamily -> "Times"]}, {False, True}}}, 
     Typeset`size$$ = {400., {43., 53.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     False, $CellContext`t$93005$$ = 0, $CellContext`drivingForceQ$93006$$ = 
     False}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`drivingForceQ$$ = False, $CellContext`t$$ = 
         0}, "ControllerVariables" :> {
         Hold[$CellContext`t$$, $CellContext`t$93005$$, 0], 
         Hold[$CellContext`drivingForceQ$$, \
$CellContext`drivingForceQ$93006$$, False]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[
         Graphics[{{
            FaceForm[$CellContext`backgroundColor2], 
            Rectangle[$CellContext`p1 + {-0.5, -1}, $CellContext`p1 + {0, 1}], 
            Rectangle[{0, 
               Last[$CellContext`p1]} + {$CellContext`xf, -1}, {0, 
               Last[$CellContext`p1]} + {$CellContext`xf, -1} + {0.5, 2}]}, 
           Lighter[$CellContext`color2], {
            FaceForm[$CellContext`backgroundColor1], 
            EdgeForm[{
              Thickness[0.005], Gray}], 
            Disk[$CellContext`p2 + {0.45, 0}, 0.5], 
            Disk[$CellContext`p2 + {3.65, 0}, 0.5]}, {Black, 
            Text[
             $CellContext`font[
             "\!\(\*\nStyleBox[\"m\",\nFontSlant->\"Italic\"]\)"], \
$CellContext`p2 + {0.45, 0}], 
            Text[
             $CellContext`font[
             "\!\(\*\nStyleBox[\"m\",\nFontSlant->\"Italic\"]\)"], \
$CellContext`p2 + {3.65, 0}]}, {Black, 
            Line[{{$CellContext`p1 + {0, -1}, $CellContext`p1 + {0, 1}}, {{0, 
                 Last[$CellContext`p1]} + {$CellContext`xf, -1}, {0, 
                 Last[$CellContext`p1]} + {$CellContext`xf, 
                 1}}}]}, {$CellContext`color2, 
            Text[
             $CellContext`font[
             "\!\(\*\nStyleBox[\"k\",\nFontSlant->\"Italic\"]\)"], 
             Mean[{$CellContext`p1, $CellContext`p2}] + {0, -0.7}], 
            Text[
             $CellContext`font[
             "\!\(\*\nStyleBox[\"k\",\nFontSlant->\"Italic\"]\)"], 
             Mean[{$CellContext`p1, $CellContext`p2}] + {
              First[$CellContext`p2] + 1.23, -0.7}], 
            Text[
             $CellContext`font[
             "\!\(\*\nStyleBox[\"k\",\nFontSlant->\"Italic\"]\)"], 
             Mean[{$CellContext`p1, $CellContext`p2}] + {
              2 First[$CellContext`p2] + 2 1.23, -0.7}]}, 
           If[$CellContext`drivingForceQ$$, {Thick, 
             Arrowheads[Medium], $CellContext`color2, 
             If[Abs[
                Cos[2 $CellContext`t$$]] > 0.4, {
               
               Arrow[{$CellContext`p2 + {0.45, 0.8}, $CellContext`p2 + {
                  0.45 + Cos[2 $CellContext`t$$], 0.8}}], 
               
               Arrow[{$CellContext`p2 + {3.65, 0.8}, $CellContext`p2 + {
                  3.65 + 2 Cos[2 $CellContext`t$$], 0.8}}]}], 
             Text[
              $CellContext`font["driving force"], 
              
              Mean[{$CellContext`p2 + {0.45, 1.3}, $CellContext`p2 + {3.65, 
                 1.3}}]]}]}, ImageSize -> 250], 
         ParametricPlot[{{(1/2) (0.3 $CellContext`t$$ + 
             0.5 Cos[2 $CellContext`t$$]), (1/3) Sin[2 $CellContext`t$$] - 
            0.25}, {(1/2) (0.3 $CellContext`t$$ + 
              0.5 Cos[2 $CellContext`t$$]) + First[$CellContext`p2] + 
            1.23, (1/3) Sin[2 $CellContext`t$$] - 
            0.25}, {(1/2) (0.3 $CellContext`t$$ + 
              0.5 Cos[2 $CellContext`t$$]) + 2 First[$CellContext`p2] + 
            2 1.23, (1/3) Sin[2 $CellContext`t$$] - 
            0.25}}, {$CellContext`t$$, $CellContext`t1, $CellContext`t2}, 
          PlotStyle -> Lighter[$CellContext`color2]]], 
       "Specifications" :> {{{$CellContext`t$$, 0, 
           Style["t", 14, FontFamily -> "Times", Italic]}, 0, 2 
          Pi}, {{$CellContext`drivingForceQ$$, False, 
           Style["driving", 14, FontFamily -> "Times"]}, {False, True}}}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{474., {124., 134.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>(($CellContext`r = 
        0.5; {$CellContext`pt1, $CellContext`pt2} = {{-1, 0}, {
          7.2, 0}}; {$CellContext`t1, $CellContext`t2} = {-1.1, 
         12.095574287564276`}; $CellContext`p1 = 
        ReplaceAll[{(1/2) (0.3 $CellContext`tt + 
            0.5 Cos[2 $CellContext`tt]), (1/3) 
           Sin[2 $CellContext`tt]}, $CellContext`tt -> $CellContext`t1]; \
$CellContext`p2 = 
        ReplaceAll[{(1/2) (0.3 $CellContext`tt + 
            0.5 Cos[2 $CellContext`tt]), (1/3) 
           Sin[2 $CellContext`tt]}, $CellContext`tt -> $CellContext`t2]; \
$CellContext`xf = 
        ReplaceAll[(1/2) (0.3 $CellContext`tt + 0.5 Cos[2 $CellContext`tt]) + 
          2 First[$CellContext`p2] + 
          2 1.23, $CellContext`tt -> $CellContext`t2]; $CellContext`colors = \
({$CellContext`color1, $CellContext`color2, $CellContext`color3, \
$CellContext`color4, $CellContext`color5, $CellContext`color6} = {
           ColorData[97][1], 
           ColorData[97][10], 
           ColorData[97][5], 
           ColorData[97][6], 
           ColorData[97][9], 
           Lighter[
            ColorData[97][7], 
            0.2]}); $CellContext`backgroundColors = \
({$CellContext`backgroundColor1, $CellContext`backgroundColor2} = {
           RGBColor[0.99, 0.97432, 0.91748], 
           RGBColor[0.9, 0.9, 0.9]}); Null); Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.72090575541729*^9, 3.7209057651409364`*^9}, 
   3.720905795894312*^9, {3.72090582953117*^9, 3.7209058601641445`*^9}, 
   3.7209061176880894`*^9, {3.720906155253989*^9, 3.7209061653929005`*^9}, 
   3.720906247609657*^9, {3.720906428929064*^9, 3.7209064692713037`*^9}, {
   3.7209065977775316`*^9, 3.720906640544902*^9}, {3.7209066978232307`*^9, 
   3.7209067233736653`*^9}, {3.720906757076496*^9, 3.7209068259405556`*^9}, {
   3.7209069010230837`*^9, 3.720906940371027*^9}, 3.720906979377362*^9, {
   3.7209071968686447`*^9, 3.720907225687524*^9}, {3.720907485778112*^9, 
   3.7209074958679547`*^9}, {3.720907611585307*^9, 3.720907656055729*^9}, 
   3.720907694053856*^9, {3.72090801293653*^9, 3.7209080756920576`*^9}, 
   3.7209240742063446`*^9, 3.720924119421649*^9, 3.7210960516802*^9, 
   3.7210960988652873`*^9},ExpressionUUID->"0d52d45f-5d3c-4def-9b39-\
e627b903694e"]
}, {2}]],

Cell[TextData[{
 "1. Write down the accelerations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["x", "\[DoubleDot]"], "L"], "[", "t", "]"}], 
   TraditionalForm]],ExpressionUUID->"566cca72-e809-4e0b-adc6-186102f2c3bb"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["x", "\[DoubleDot]"], "R"], "[", "t", "]"}], 
   TraditionalForm]],ExpressionUUID->"57cc80c9-d08f-4871-bef3-28af5245a0e2"],
 " of the left and right masses in terms of the forces acting upon each mass. \
(Check your answer for the special cases ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "L"], "=", 
    SubscriptBox["x", "R"]}], TraditionalForm]],ExpressionUUID->
  "8ff85f4c-ca16-4939-a811-419284467860"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "L"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "80a84e3c-ef32-44f8-aecd-28d46861e6f2"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "R"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "441c5b02-cf35-4cba-9770-aab702fa7b8d"],
 " to ensure you do not have any signs flipped)\n2. Add your two equations \
from Part 1 to find the sum of accelerations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["x", "\[DoubleDot]"], "L"], "[", "t", "]"}], "+", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["x", "\[DoubleDot]"], "R"], "[", "t", "]"}]}], 
   TraditionalForm]],ExpressionUUID->"9b5e731e-2cc3-4719-87dd-0167d4c559e1"],
 " and the difference in accelerations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["x", "\[DoubleDot]"], "L"], "[", "t", "]"}], "-", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["x", "\[DoubleDot]"], "R"], "[", "t", "]"}]}], 
   TraditionalForm]],ExpressionUUID->"1d9919be-9ac3-4c33-9fb5-fc147899564f"],
 "\n3. Suppose the solutions for the sum and difference of the displacements \
have the forms"
}], "Text",
 CellChangeTimes->{{3.7205039426507025`*^9, 3.720504037608737*^9}, {
  3.7205041173779607`*^9, 3.7205041751583767`*^9}, {3.7205049251015806`*^9, 
  3.7205049434359055`*^9}},ExpressionUUID->"049628c9-00c9-4ab9-9314-\
632c71480bf2"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["x", "L"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["x", "R"], "[", "t", "]"}]}], "=", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["x", "L"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["x", "R"], "[", "t", "]"}]}], "=", 
         RowBox[{"B", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"4f66db89-e9b0-4369-807a-bfb5e1f3ed7f"]], \
"TextNumbered",
 CellChangeTimes->{{3.72050495445815*^9, 3.720504979547121*^9}},
 CellTags->"eq2",ExpressionUUID->"c46090a8-d7d1-4a27-a8ec-412abf664de4"],

Cell[CellGroupData[{

Cell[TextData[{
 "Substitute these equations into the differential equations from Part 2 and \
determine ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "57c2c324-0f9f-45f8-b76d-65bceda96d60"],
 " and ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "95e13c9c-be90-4cd6-a35d-7dd49b486553"],
 ".\n4. Find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "L"], "[", "t", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9e4fe37f-c291-4ef3-b849-8ad3ba7a89b7"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "R"], "[", "t", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6c7ed057-d266-4d8c-94e0-802eaf1e1f2a"],
 ". Explain the motion of the left mass using force analysis"
}], "Text",
 CellChangeTimes->{{3.7205049911595755`*^9, 
  3.7205050551736236`*^9}},ExpressionUUID->"85a98f87-4b94-4d54-8bd6-\
a259c4b43aea"],

Cell[TextData[{
 StyleBox["Solution",
  FontVariations->{"Underline"->True}],
 "\n1. The equations of motion for the two masses are"
}], "Text",
 CellChangeTimes->{{3.7205042358550434`*^9, 
  3.7205042534192333`*^9}},ExpressionUUID->"6688724d-29da-48c3-9102-\
4e84c1d7808a"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["x", "\[DoubleDot]"], "L"], "[", "t", "]"}]}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "k"}], " ", 
           RowBox[{
            SubscriptBox["x", "L"], "[", "t", "]"}]}], "+", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "R"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["x", "L"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["F", "d"], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}]}]},
       {
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["x", "\[DoubleDot]"], "R"], "[", "t", "]"}]}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "k"}], " ", 
           RowBox[{
            SubscriptBox["x", "R"], "[", "t", "]"}]}], "-", 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "R"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["x", "L"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"2", 
           SubscriptBox["F", "d"], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"28ce9cb4-bd12-47f0-869a-f2201f74cc5f"]], \
"TextNumbered",
 CellChangeTimes->{{3.7205044271332846`*^9, 
  3.7205044318680525`*^9}},ExpressionUUID->"ad07b4e6-3586-4993-a4d5-\
5da703f037c8"],

Cell[CellGroupData[{

Cell[TextData[{
 "It always helps to check these equations in various limits. For example, if \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "L"], "[", "t", "]"}], "=", 
    RowBox[{
     SubscriptBox["x", "R"], "[", "t", "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "34af5aea-e594-4d76-9b0c-375c7f45a3ac"],
 ", the middle spring will not exert a force and the two masses will feel a \
leftwards force if they are displaced to the right (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"0", "<", 
     RowBox[{
      SubscriptBox["x", "L"], "[", "t", "]"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "R"], "[", "t", "]"}]}], TraditionalForm]],
  ExpressionUUID->"ca0b93e8-969d-42b9-8b48-6656ee6497fb"],
 "). If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "L"], "[", "t", "]"}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fa1a37f0-8123-4c74-96ab-115f24516eb6"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "R"], "[", "t", "]"}], ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6ba49647-51d2-4504-bbff-23463cd6074b"],
 ", the left mass will feel a spring force to the right while the right mass \
will feel two spring forces to the left. If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "R"], "[", "t", "]"}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "62ffd32a-3142-4bf1-b972-c99c9536edeb"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "L"], "[", "t", "]"}], ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "29ca05c5-c036-4115-99d3-62db4523d12a"],
 ", the left mass will feel two spring forces to the left and the right mass \
will feel a spring force to the right. You can check that all of these \
statements are supported by the equations above."
}], "Text",
 CellChangeTimes->{{3.7205043204171*^9, 3.720504366393483*^9}, {
  3.7205045473502645`*^9, 
  3.7205046811205797`*^9}},ExpressionUUID->"3648d138-7ed2-454a-9240-\
f66627107657"],

Cell["\<\
2. The sum and difference of the two accelerations is given by\
\>", "Text",
 CellChangeTimes->{{3.7205046876434603`*^9, 
  3.720504702003687*^9}},ExpressionUUID->"b8b62376-7853-4447-afda-\
52733d31dad6"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox[
            OverscriptBox["x", "\[DoubleDot]"], "L"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["x", "\[DoubleDot]"], "R"], "[", "t", "]"}]}], "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SuperscriptBox["\[Omega]", "2"], "(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "L"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["x", "R"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"3", 
           FractionBox[
            SubscriptBox["F", "d"], "m"], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox[
            OverscriptBox["x", "\[DoubleDot]"], "L"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["x", "\[DoubleDot]"], "R"], "[", "t", "]"}]}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], 
           RowBox[{
            SuperscriptBox["\[Omega]", "2"], "(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "L"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["x", "R"], "[", "t", "]"}]}], ")"}]}], "-", 
          RowBox[{
           FractionBox[
            SubscriptBox["F", "d"], "m"], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"23166ee9-8f47-46a8-be1c-480a4e99a03d"]], \
"TextNumbered",
 CellChangeTimes->{{3.7205044271332846`*^9, 3.7205044318680525`*^9}, {
  3.720504710981414*^9, 3.7205048070112286`*^9}, {3.72050484264365*^9, 
  3.72050484264365*^9}},
 CellTags->"eq3",ExpressionUUID->"99619dca-d57f-47c4-a2dc-67685e473818"],

Cell[CellGroupData[{

Cell[TextData[{
 "where we have used ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], "=", 
    FractionBox["k", "m"]}], TraditionalForm]],ExpressionUUID->
  "7b59c3d4-28ff-4280-bd05-3a0c59f42266"],
 ". Note that the top differential equation is written purely in terms of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "L"], "[", "t", "]"}], "+", 
    RowBox[{
     SubscriptBox["x", "R"], "[", "t", "]"}]}], TraditionalForm]],
  ExpressionUUID->"25266c12-16b5-4565-b641-860284b34f51"],
 " and its second derivative, while the bottom equation is written purely in \
terms of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "L"], "[", "t", "]"}], "-", 
    RowBox[{
     SubscriptBox["x", "R"], "[", "t", "]"}]}], TraditionalForm]],
  ExpressionUUID->"291d9aac-22bc-4719-88ad-9edfe2e450da"],
 " and its derivative. Thus, in terms of the sum and difference of the \
displacements, these two differential equations are uncoupled. Each equation \
has the same solution as a driven harmonic oscillator."
}], "Text",
 CellChangeTimes->{{3.7205048121191216`*^9, 3.7205049175627165`*^9}, {
  3.7205052922116165`*^9, 
  3.720505306676489*^9}},ExpressionUUID->"34d4c136-651a-4f6c-9641-\
06d3bed7916b"],

Cell[TextData[{
 "3. Substituting in the forms of Equation (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "eq2"], TraditionalForm]],ExpressionUUID->
  "111538c6-bd89-44f0-8eac-a35b1f457760"],
 ") into Equation (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "eq3"], TraditionalForm]],ExpressionUUID->
  "f989e82b-aa19-40b1-aabb-21dad5a22780"],
 "), we obtain"
}], "Text",
 CellChangeTimes->{{3.7205049187169733`*^9, 3.7205049188961477`*^9}, {
  3.72050510605355*^9, 
  3.7205051347116027`*^9}},ExpressionUUID->"92591629-241f-4b7c-b8f8-\
6100fa759723"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], 
          SuperscriptBox["\[Omega]", "2"], "A", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Omega]", "2"]}], " ", "A", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}], "+", 
          RowBox[{"3", 
           FractionBox[
            SubscriptBox["F", "d"], "m"], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], 
          SuperscriptBox["\[Omega]", "2"], "B", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], 
           SuperscriptBox["\[Omega]", "2"], " ", "B", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}], "-", 
          RowBox[{
           FractionBox[
            SubscriptBox["F", "d"], "m"], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"8b63e8e5-7502-415d-9d60-69fd76076b59"]], \
"TextNumbered",
 CellChangeTimes->{{3.7205044271332846`*^9, 3.7205044318680525`*^9}, {
  3.720504710981414*^9, 3.7205048070112286`*^9}, {3.72050484264365*^9, 
  3.72050484264365*^9}, {3.72050514273631*^9, 3.7205051785107374`*^9}},
 CellTags->"eq3",ExpressionUUID->"516fbf7f-9fc9-4089-aec5-0cb8b53395c2"],

Cell[TextData[{
 "Note that the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Cos", "[", 
    RowBox[{"2", "\[Omega]", " ", "t"}], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e8fed115-5a32-4320-92b6-aac9aec15c84"],
 " terms drop from both equations - this must always happen because ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "65160c19-798b-46f2-a8ce-eff53a5d9df4"],
 " and ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d64b6ec9-f374-497c-9d5a-de62eae2c173"],
 " cannot have time dependence. Simplify the above equations,"
}], "Text",
 CellChangeTimes->{{3.720505181212466*^9, 
  3.7205052516725516`*^9}},ExpressionUUID->"d6ad0d05-711c-479b-9350-\
778481a17099"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"A", "=", 
         RowBox[{"-", 
          FractionBox[
           SubscriptBox["F", "d"], "k"]}]}]},
       {
        RowBox[{"B", "=", 
         FractionBox[
          SubscriptBox["F", "d"], "k"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"fa5781c6-8759-475d-aa97-66c9b8266871"]], \
"TextNumbered",
 CellChangeTimes->{{3.7205044271332846`*^9, 3.7205044318680525`*^9}, {
  3.720504710981414*^9, 3.7205048070112286`*^9}, {3.72050484264365*^9, 
  3.72050484264365*^9}, {3.72050514273631*^9, 3.7205051785107374`*^9}, {
  3.720505255759547*^9, 3.720505321272083*^9}},
 CellTags->{
  "eq3", "eq4"},ExpressionUUID->"04a7980e-6c56-4916-b981-c95d99583fb6"],

Cell["4. Note that ", "Text",
 CellChangeTimes->{{3.720505344154772*^9, 
  3.720505345224996*^9}},ExpressionUUID->"86845de4-a542-4ffa-84d3-\
02b597f43204"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["x", "L"], "[", "t", "]"}], "=", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "L"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["x", "R"], "[", "t", "]"}]}], ")"}], "+", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "L"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["x", "R"], "[", "t", "]"}]}], ")"}]}], "2"]}]},
       {
        RowBox[{
         RowBox[{
          SubscriptBox["x", "R"], "[", "t", "]"}], "=", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "L"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["x", "R"], "[", "t", "]"}]}], ")"}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "L"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["x", "R"], "[", "t", "]"}]}], ")"}]}], "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"614c1a43-0d31-4c41-be83-c55acc90506b"]], \
"TextNumbered",
 CellChangeTimes->{{3.7205053786185865`*^9, 
  3.720505383487215*^9}},ExpressionUUID->"3d5d65a0-ed3a-428c-b69f-\
0d21e5fd5a90"],

Cell[TextData[{
 "Substituting in Equations (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "eq2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5cf2707f-8966-46df-9ddf-d63c8a16d16f"],
 ") and (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "eq4"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "36abad20-257c-404e-bbaf-1d564b83558f"],
 "), "
}], "Text",
 CellChangeTimes->{{3.720505389130952*^9, 
  3.720505422092386*^9}},ExpressionUUID->"05427567-bb58-4e99-be97-\
034173eb3d42"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["x", "L"], "[", "t", "]"}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               SubscriptBox["F", "d"], "k"]}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}], "+", 
            RowBox[{
             FractionBox[
              SubscriptBox["F", "d"], "k"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}], "2"], "=", 
          "0"}]}]},
       {
        RowBox[{
         RowBox[{
          SubscriptBox["x", "R"], "[", "t", "]"}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               SubscriptBox["F", "d"], "k"]}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}], "-", 
            RowBox[{
             FractionBox[
              SubscriptBox["F", "d"], "k"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}], "2"], "=", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             SubscriptBox["F", "d"], "k"]}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"945b7490-fef7-498f-b0b8-429744750950"]], \
"TextNumbered",
 CellChangeTimes->{{3.7205053786185865`*^9, 3.720505383487215*^9}, {
  3.7205054342324977`*^9, 3.720505472947106*^9}},
 CellTags->"eq5",ExpressionUUID->"8b8bbead-5089-48f5-a388-07a1cacc1154"],

Cell["The motion of the system is shown below.", "Text",
 CellChangeTimes->{{3.720920978641848*^9, 
  3.7209209844775333`*^9}},ExpressionUUID->"4944c112-6743-4240-98e6-\
0bf68d6d8214"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s1", ",", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Scale", "[", 
              RowBox[{"s2", ",", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{"d", "-", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}], "d"], ",", "1"}], "}"}], ",",
                "Left"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.1", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", "t"}], "]"}]}], ",", "0"}], "}"}]}], "]"}], ",", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Scale", "[", 
              RowBox[{"s3", ",", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{"d", "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}], "d"], ",", "1"}], "}"}], ",",
                "Right"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.1", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", "t"}], "]"}]}], ",", "0"}], "}"}]}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FaceForm", "[", "backgroundColor2", "]"}], ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"p1", "+", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.5"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], ",", 
             RowBox[{"p1", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Last", "@", "p1"}]}], "}"}], "+", 
              RowBox[{"{", 
               RowBox[{"xf", ",", 
                RowBox[{"-", "1"}]}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Last", "@", "p1"}]}], "}"}], "+", 
              RowBox[{"{", 
               RowBox[{"xf", ",", 
                RowBox[{"-", "1"}]}], "}"}], "+", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "2"}], "}"}]}]}], "]"}]}], "}"}], ",", 
         RowBox[{"Lighter", "@", "color2"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FaceForm", "[", "backgroundColor1", "]"}], ",", 
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Gray"}], "}"}], 
            "]"}], ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"p2", "+", 
              RowBox[{"{", 
               RowBox[{"0.45", ",", "0"}], "}"}]}], ",", "0.5"}], "]"}], ",", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"p2", "+", 
                RowBox[{"{", 
                 RowBox[{"3.65", ",", "0"}], "}"}]}], ",", "0.5"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", "t"}], "]"}]}], ",", "0"}], "}"}]}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"m\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
             RowBox[{"p2", "+", 
              RowBox[{"{", 
               RowBox[{"0.45", ",", "0"}], "}"}]}]}], "]"}], ",", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"font", "@", "\"\<\!\(\*
StyleBox[\"m\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
               RowBox[{"p2", "+", 
                RowBox[{"{", 
                 RowBox[{"3.65", ",", "0"}], "}"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", "t"}], "]"}]}], ",", "0"}], "}"}]}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"p1", "+", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], ",", 
                RowBox[{"p1", "+", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"Last", "@", "p1"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"xf", ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"Last", "@", "p1"}]}], "}"}], "+", 
                 RowBox[{"{", 
                  RowBox[{"xf", ",", "1"}], "}"}]}]}], "}"}]}], "}"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", "color2", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "@", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "t"}], "]"}]}], ">", "0.4"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"p2", "+", 
                   RowBox[{"{", 
                    RowBox[{"0.45", ",", "0.8"}], "}"}]}], ",", 
                  RowBox[{"p2", "+", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.45", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}], ",", "0.8"}], "}"}]}]}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"p2", "+", 
                   RowBox[{"{", 
                    RowBox[{"3.65", ",", "0.8"}], "}"}]}], ",", 
                  RowBox[{"p2", "+", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"3.65", "+", 
                    RowBox[{"2", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}]}], ",", "0.8"}], "}"}]}]}], 
                 "}"}], "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"font", "@", "\"\<driving force\>\""}], ",", 
             RowBox[{"Mean", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"p2", "+", 
                 RowBox[{"{", 
                  RowBox[{"0.45", ",", "1.3"}], "}"}]}], ",", 
                RowBox[{"p2", "+", 
                 RowBox[{"{", 
                  RowBox[{"3.65", ",", "1.3"}], "}"}]}]}], "}"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"font", "@", "\"\<spring force\>\""}], ",", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"p2", "+", 
                  RowBox[{"{", 
                   RowBox[{"0.45", ",", "1.3"}], "}"}]}], ",", 
                 RowBox[{"p2", "+", 
                  RowBox[{"{", 
                   RowBox[{"3.65", ",", "1.3"}], "}"}]}]}], "}"}], "]"}], "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "2.5"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"Lighter", "@", "color2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "@", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "t"}], "]"}]}], ">", "0.4"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"p2", "+", 
                   RowBox[{"{", 
                    RowBox[{"0.45", ",", "0.8"}], "}"}]}], ",", 
                  RowBox[{"p2", "+", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.45", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}], ",", "0.8"}], "}"}]}]}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"p2", "+", 
                   RowBox[{"{", 
                    RowBox[{"3.65", ",", "0.8"}], "}"}]}], ",", 
                  RowBox[{"p2", "+", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"3.65", "+", 
                    RowBox[{"2", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}]}], ",", "0.8"}], "}"}]}]}], 
                 "}"}], "]"}], ",", "color2", ",", 
               RowBox[{
                RowBox[{"offset", "=", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", "0.8"}]}], "}"}]}], ";", 
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{"0.45", ",", "0"}], "}"}], "+", "offset"}], ",", 
                    RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{"0.45", ",", "0"}], "}"}], "+", "offset", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}], ",", "0"}], "}"}]}]}], "}"}],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{"3.65", ",", "0"}], "}"}], "+", "offset"}], ",", 
                    RowBox[{"p2", "+", 
                    RowBox[{"{", 
                    RowBox[{"3.65", ",", "0"}], "}"}], "+", "offset", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "t"}], "]"}]}], ",", "0"}], "}"}]}]}], 
                    "}"}]}], "}"}], "]"}]}]}], "}"}]}], "]"}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.82"}], ",", "8.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.8"}], ",", "1.3"}], "}"}]}], "}"}]}]}], "]"}], 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"font", "[", 
         RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}]}], "}"}], ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"Initialization", "\[RuleDelayed]", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"font", "[", 
         RowBox[{"text_", ",", 
          RowBox[{"size_Integer:", "14"}], ",", "opts___"}], "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{"Style", "[", 
          RowBox[{"text", ",", "size", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "opts"}], 
          "]"}], ")"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Primary", " ", "colors", " ", "for", " ", "figures"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"colors", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "color1", ",", "color2", ",", "color3", ",", "color4", ",", 
           "color5", ",", "color6"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "10", "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "5", "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "6", "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "9", "]"}], ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "7", "]"}], ",", 
             "0.2"}], "]"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Secondary", " ", "colors", " ", "for", " ", "backgrounds"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"backgroundColors", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"backgroundColor1", ",", "backgroundColor2"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.99, 0.97432, 0.91748], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.66, 0.6495466666666667, 0.6116533333333334],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.99, 0.97432, 0.91748]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.99, 0.97432, 0.91748]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.99, 0.97432, 0.91748],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.9, 0.9, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6000000000000001, 0.6000000000000001, 0.6000000000000001],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.9, 0.9, 0.9]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.9, 0.9, 0.9]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.9, 0.9, 0.9],
            Editable->False,
            Selectable->False]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t1", "=", 
        RowBox[{"-", "1.1"}]}], ";", 
       RowBox[{"t2", "=", "12.095574287564276`"}], ";", 
       RowBox[{"r", "=", "0.5"}], ";", 
       RowBox[{"pt1", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}], ";", 
       RowBox[{"pt2", "=", 
        RowBox[{"{", 
         RowBox[{"7.2", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p1", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.3", "tt"}], "+", 
              RowBox[{"0.5", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "tt"}], "]"}]}]}], ")"}]}], ",", 
           RowBox[{
            FractionBox["1", "3"], 
            RowBox[{"Sin", "[", 
             RowBox[{"2", "tt"}], "]"}]}]}], "}"}], "/.", 
         RowBox[{"tt", "\[Rule]", "t1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p2", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.3", "tt"}], "+", 
              RowBox[{"0.5", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "tt"}], "]"}]}]}], ")"}]}], ",", 
           RowBox[{
            FractionBox["1", "3"], 
            RowBox[{"Sin", "[", 
             RowBox[{"2", "tt"}], "]"}]}]}], "}"}], "/.", 
         RowBox[{"tt", "\[Rule]", "t2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ParametricPlot", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"tt", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Lighter", "@", "color2"}]}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.3", "tt"}], "+", 
                RowBox[{"0.5", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", "tt"}], "]"}]}]}], ")"}]}], ",", 
             RowBox[{
              RowBox[{
               FractionBox["1", "3"], 
               RowBox[{"Sin", "[", 
                RowBox[{"2", "tt"}], "]"}]}], "-", "0.25"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.3", "tt"}], "+", 
                 RowBox[{"0.5", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", "tt"}], "]"}]}]}], ")"}]}], "+", 
              RowBox[{"First", "@", "p2"}], "+", "1.23"}], ",", 
             RowBox[{
              RowBox[{
               FractionBox["1", "3"], 
               RowBox[{"Sin", "[", 
                RowBox[{"2", "tt"}], "]"}]}], "-", "0.25"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.3", "tt"}], "+", 
                 RowBox[{"0.5", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", "tt"}], "]"}]}]}], ")"}]}], "+", 
              RowBox[{"2", 
               RowBox[{"First", "@", "p2"}]}], "+", 
              RowBox[{"2", " ", "1.23"}]}], ",", 
             RowBox[{
              RowBox[{
               FractionBox["1", "3"], 
               RowBox[{"Sin", "[", 
                RowBox[{"2", "tt"}], "]"}]}], "-", "0.25"}]}], "}"}]}], 
          "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"First", "[", 
         RowBox[{"p2", "-", "p1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xf", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0.3", "tt"}], "+", 
             RowBox[{"0.5", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "tt"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"2", 
           RowBox[{"First", "@", "p2"}]}], "+", 
          RowBox[{"2", " ", "1.23"}]}], "/.", 
         RowBox[{"tt", "\[Rule]", "t2"}]}]}], ";"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6875564266526318`*^9, 3.6875564743742747`*^9}, {
   3.687556545581839*^9, 3.6875566515546656`*^9}, {3.718829696664877*^9, 
   3.7188299154775867`*^9}, {3.7188299674161406`*^9, 
   3.7188299722202187`*^9}, {3.718830007116393*^9, 3.718830010535941*^9}, {
   3.7188300434950495`*^9, 3.718830119811097*^9}, {3.7188316502747145`*^9, 
   3.7188317156685*^9}, {3.7188318883445625`*^9, 3.7188319224072704`*^9}, {
   3.7188462131943645`*^9, 3.7188463799152665`*^9}, {3.7188464439691334`*^9, 
   3.718846568276882*^9}, {3.718846601650318*^9, 3.7188466871646085`*^9}, {
   3.7188467178831143`*^9, 3.718846850755378*^9}, {3.7188469110062723`*^9, 
   3.7188469967304935`*^9}, {3.7188470906084747`*^9, 
   3.7188471490334005`*^9}, {3.7188474209881287`*^9, 3.718847591790619*^9}, {
   3.718847648348106*^9, 3.718847763901962*^9}, {3.7188478326368084`*^9, 
   3.7188480447064195`*^9}, {3.7188482297371264`*^9, 
   3.7188482514897594`*^9}, {3.7188483580170507`*^9, 
   3.7188484119219513`*^9}, {3.7188484828804975`*^9, 3.718848663139924*^9}, {
   3.718848751446148*^9, 3.718848790424898*^9}, {3.7188488261918745`*^9, 
   3.7188489318919854`*^9}, {3.7188489867376575`*^9, 3.718849299894494*^9}, {
   3.718849354411028*^9, 3.7188494183273606`*^9}, {3.7188494513060503`*^9, 
   3.718849502871559*^9}, {3.7188495334326267`*^9, 3.718849598546183*^9}, {
   3.718849637195266*^9, 3.7188500207176657`*^9}, {3.7188500695342073`*^9, 
   3.7188501647523704`*^9}, {3.7188521537415433`*^9, 
   3.7188521797971325`*^9}, {3.718852219216525*^9, 3.7188522583804374`*^9}, 
   3.718852291530864*^9, {3.7188523233042145`*^9, 3.7188524148820014`*^9}, {
   3.718852461725545*^9, 3.718852481828128*^9}, {3.718852619895807*^9, 
   3.7188526550407076`*^9}, {3.7188527006009626`*^9, 3.718852763963353*^9}, {
   3.7188528031153045`*^9, 3.7188528435392203`*^9}, {3.7188541106085696`*^9, 
   3.718854110999651*^9}, {3.718854152587225*^9, 3.718854165819999*^9}, {
   3.7188543741143713`*^9, 3.718854374449748*^9}, {3.7209046325279775`*^9, 
   3.7209046914842963`*^9}, {3.7209047488075523`*^9, 3.720904811541198*^9}, {
   3.7209048534270296`*^9, 3.720904994893913*^9}, {3.7209050772626934`*^9, 
   3.720905228864564*^9}, {3.720905666615039*^9, 3.7209058599637337`*^9}, {
   3.7209061428354416`*^9, 3.72090616489265*^9}, {3.7209062459920435`*^9, 
   3.7209062466395655`*^9}, {3.720906358495289*^9, 3.7209063681694193`*^9}, {
   3.720906438492179*^9, 3.7209064691025004`*^9}, {3.720906580459501*^9, 
   3.7209068256887774`*^9}, {3.7209068599580903`*^9, 
   3.7209069791460395`*^9}, {3.7209071847093368`*^9, 
   3.7209072254562283`*^9}, {3.7209074562615557`*^9, 3.720907495536218*^9}, {
   3.7209075982249994`*^9, 3.720907693537532*^9}, {3.7209080069329853`*^9, 
   3.7209080754915056`*^9}, {3.720908165944592*^9, 3.720908170447852*^9}, {
   3.720908203031597*^9, 3.720908212463647*^9}, {3.7209082751426644`*^9, 
   3.720908277292318*^9}, {3.7209083313256965`*^9, 3.7209083728175836`*^9}, {
   3.720908422914586*^9, 3.7209084414712014`*^9}, {3.7209085388856993`*^9, 
   3.7209085403499784`*^9}, {3.720908586535925*^9, 3.720908620655022*^9}, {
   3.7209087752025433`*^9, 3.7209089031245584`*^9}, {3.7209089408192897`*^9, 
   3.720908996165251*^9}, {3.720909539644455*^9, 3.72090956019482*^9}, {
   3.72092048590441*^9, 3.720920630610466*^9}, {3.7209206724215765`*^9, 
   3.7209207809266806`*^9}, {3.720920854269285*^9, 3.7209208900734844`*^9}, {
   3.7209209247591753`*^9, 3.720920931813133*^9}, {3.720922966868317*^9, 
   3.720922970405442*^9}, {3.7209230106085434`*^9, 3.7209230141120996`*^9}, {
   3.7209231435461564`*^9, 3.720923297247884*^9}, 3.7209233279336658`*^9, {
   3.720923420789652*^9, 3.7209234558947353`*^9}, {3.720923541559062*^9, 
   3.720923685969489*^9}, {3.7209237325980153`*^9, 3.720923748666766*^9}, {
   3.720923811731369*^9, 3.7209238514877357`*^9}, {3.7209239003798285`*^9, 
   3.7209239164145412`*^9}},ExpressionUUID->"f93085ec-e8be-405b-802a-\
547bb663367e"],

Cell[BoxData[
 PanelBox[
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`t$$], 0, 
        Style["t", 14, FontFamily -> "Times", Italic]}, 0, 2 Pi}}, 
     Typeset`size$$ = {400., {60., 68.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     False, $CellContext`t$3898$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
       "ControllerVariables" :> {
         Hold[$CellContext`t$$, $CellContext`t$3898$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[
         Graphics[{{$CellContext`s1, 
            Translate[
             
             Scale[$CellContext`s2, {($CellContext`d - Cos[
                2 $CellContext`t$$])/$CellContext`d, 1}, Left], {
             0.1 Cos[2 $CellContext`t$$], 0}], 
            Translate[
             
             Scale[$CellContext`s3, {($CellContext`d + 
                Cos[2 $CellContext`t$$])/$CellContext`d, 1}, Right], {
             0.1 Cos[2 $CellContext`t$$], 0}]}, {
            FaceForm[$CellContext`backgroundColor2], 
            Rectangle[$CellContext`p1 + {-0.5, -1}, $CellContext`p1 + {0, 1}], 
            Rectangle[{0, 
               Last[$CellContext`p1]} + {$CellContext`xf, -1}, {0, 
               Last[$CellContext`p1]} + {$CellContext`xf, -1} + {0.5, 2}]}, 
           Lighter[$CellContext`color2], {
            FaceForm[$CellContext`backgroundColor1], 
            EdgeForm[{
              Thickness[0.005], Gray}], 
            Disk[$CellContext`p2 + {0.45, 0}, 0.5], 
            Translate[
             
             Disk[$CellContext`p2 + {3.65, 0}, 0.5], {-
              Cos[2 $CellContext`t$$], 0}]}, {Black, 
            Text[
             $CellContext`font[
             "\!\(\*\nStyleBox[\"m\",\nFontSlant->\"Italic\"]\)"], \
$CellContext`p2 + {0.45, 0}], 
            Translate[
             Text[
              $CellContext`font[
              "\!\(\*\nStyleBox[\"m\",\nFontSlant->\"Italic\"]\)"], \
$CellContext`p2 + {3.65, 0}], {-Cos[2 $CellContext`t$$], 0}]}, {Black, 
            Line[{{$CellContext`p1 + {0, -1}, $CellContext`p1 + {0, 1}}, {{0, 
                 Last[$CellContext`p1]} + {$CellContext`xf, -1}, {0, 
                 Last[$CellContext`p1]} + {$CellContext`xf, 1}}}]}, {Thick, 
            Arrowheads[Medium], $CellContext`color2, 
            If[Abs[
               Cos[2 $CellContext`t$$]] > 0.4, {
              
              Arrow[{$CellContext`p2 + {0.45, 0.8}, $CellContext`p2 + {
                 0.45 + Cos[2 $CellContext`t$$], 0.8}}], 
              
              Arrow[{$CellContext`p2 + {3.65, 0.8}, $CellContext`p2 + {
                 3.65 + 2 Cos[2 $CellContext`t$$], 0.8}}]}], 
            Text[
             $CellContext`font["driving force"], 
             
             Mean[{$CellContext`p2 + {0.45, 1.3}, $CellContext`p2 + {3.65, 
                1.3}}]], 
            Text[
             $CellContext`font["spring force"], 
             Mean[{$CellContext`p2 + {0.45, 1.3}, $CellContext`p2 + {3.65, 
                 1.3}}] + {0, -2.5}], 
            Lighter[$CellContext`color2], 
            If[Abs[
               Cos[2 $CellContext`t$$]] > 0.4, {
              
              Arrow[{$CellContext`p2 + {0.45, 0.8}, $CellContext`p2 + {
                 0.45 + Cos[2 $CellContext`t$$], 0.8}}], 
              
              Arrow[{$CellContext`p2 + {3.65, 0.8}, $CellContext`p2 + {
                 3.65 + 2 Cos[2 $CellContext`t$$], 
                  0.8}}], $CellContext`color2, $CellContext`offset = {
                0, -0.8}; 
              Arrow[{{$CellContext`p2 + {
                   0.45, 0} + $CellContext`offset, $CellContext`p2 + {
                   0.45, 0} + $CellContext`offset + {-Cos[2 $CellContext`t$$],
                     0}}, {$CellContext`p2 + {
                   3.65, 0} + $CellContext`offset, $CellContext`p2 + {
                   3.65, 0} + $CellContext`offset + {
                   2 Cos[2 $CellContext`t$$], 0}}}]}]}}, ImageSize -> 250, 
          PlotRange -> {{-0.82, 8.85}, {-1.8, 1.3}}]], 
       "Specifications" :> {{{$CellContext`t$$, 0, 
           Style["t", 14, FontFamily -> "Times", Italic]}, 0, 2 Pi}}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{474., {126., 136.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>(($CellContext`font[
          Pattern[$CellContext`text, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`size, 
            Blank[Integer]], 14], 
          Pattern[$CellContext`opts, 
           BlankNullSequence[]]] := 
        Style[$CellContext`text, $CellContext`size, FontFamily -> 
          "Times", $CellContext`opts]; $CellContext`colors = \
({$CellContext`color1, $CellContext`color2, $CellContext`color3, \
$CellContext`color4, $CellContext`color5, $CellContext`color6} = {
           ColorData[97][1], 
           ColorData[97][10], 
           ColorData[97][5], 
           ColorData[97][6], 
           ColorData[97][9], 
           Lighter[
            ColorData[97][7], 
            0.2]}); $CellContext`backgroundColors = \
({$CellContext`backgroundColor1, $CellContext`backgroundColor2} = {
           RGBColor[0.99, 0.97432, 0.91748], 
           RGBColor[0.9, 0.9, 0.9]}); $CellContext`t1 = -1.1; $CellContext`t2 = 
        12.095574287564276`; $CellContext`r = 
        0.5; $CellContext`pt1 = {-1, 0}; $CellContext`pt2 = {
         7.2, 0}; $CellContext`p1 = 
        ReplaceAll[{(1/2) (0.3 $CellContext`tt + 
            0.5 Cos[2 $CellContext`tt]), (1/3) 
           Sin[2 $CellContext`tt]}, $CellContext`tt -> $CellContext`t1]; \
$CellContext`p2 = 
        ReplaceAll[{(1/2) (0.3 $CellContext`tt + 
            0.5 Cos[2 $CellContext`tt]), (1/3) 
           Sin[2 $CellContext`tt]}, $CellContext`tt -> $CellContext`t2]; \
{$CellContext`s1, $CellContext`s2, $CellContext`s3} = Map[Part[
           
           ParametricPlot[#, {$CellContext`tt, $CellContext`t1, \
$CellContext`t2}, PlotStyle -> Lighter[$CellContext`color2]], 
           1]& , {{(1/2) (0.3 $CellContext`tt + 
             0.5 Cos[2 $CellContext`tt]), (1/3) Sin[2 $CellContext`tt] - 
            0.25}, {(1/2) (0.3 $CellContext`tt + 0.5 Cos[2 $CellContext`tt]) + 
            First[$CellContext`p2] + 1.23, (1/3) Sin[2 $CellContext`tt] - 
            0.25}, {(1/2) (0.3 $CellContext`tt + 0.5 Cos[2 $CellContext`tt]) + 
            2 First[$CellContext`p2] + 2 1.23, (1/3) Sin[2 $CellContext`tt] - 
            0.25}}]; $CellContext`d = 
        First[$CellContext`p2 - $CellContext`p1]; $CellContext`xf = 
        ReplaceAll[(1/2) (0.3 $CellContext`tt + 0.5 Cos[2 $CellContext`tt]) + 
          2 First[$CellContext`p2] + 
          2 1.23, $CellContext`tt -> $CellContext`t2]; Null); 
      Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.7209237329517407`*^9, 3.720923749213502*^9}, {
   3.7209238380757723`*^9, 3.7209238566247125`*^9}, 
   3.7209239254562654`*^9},ExpressionUUID->"bf91bc37-2fb2-41db-b77d-\
e6a6cc1e9a17"]
}, {2}]],

Cell[TextData[{
 "Apparently, the left mass is stationary! This must mean that the net forces \
on the left mass are always zero, which we can quickly verify. Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "L"], "[", "t", "]"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"50af1e52-4a31-4556-94c8-60f3df461874"],
 ", the only spring force on the left mass is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", " ", 
     RowBox[{
      SubscriptBox["x", "R"], "[", "t", "]"}]}], "=", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["F", "d"]}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "\[Omega]", " ", "t"}], "]"}]}]}], TraditionalForm]],
  ExpressionUUID->"9432119a-d5fb-40ee-9a45-fe75aad64148"],
 " according to Equation (",
 Cell[BoxData[
  FormBox[
   CounterBox["TextNumbered", "eq5"], TraditionalForm]],ExpressionUUID->
  "6079ca9d-2311-46c8-bbad-114218b8833c"],
 "). This force is exactly balanced by the driving force exerted on the left \
mass, thereby resulting in no net force and hence no net motion! \
\[EmptySquare] "
}], "Text",
 CellChangeTimes->{{3.720505490190465*^9, 3.720505502299861*^9}, {
  3.720505779524786*^9, 
  3.720505924847083*^9}},ExpressionUUID->"03946af9-1286-434f-a156-\
94dee6dc941b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Leaning Ladder", "Subsection",
 CellChangeTimes->{{3.7202983160678515`*^9, 
  3.7202983174591675`*^9}},ExpressionUUID->"57d64dea-c1a3-49dc-8184-\
728582a48bcc"],

Cell[TextData[{
 StyleBox["Example",
  FontVariations->{"Underline"->True}],
 "\nA ladder of length ",
 Cell[BoxData[
  FormBox["l", TraditionalForm]],ExpressionUUID->
  "bbd8100c-d422-4765-bd87-e398c636b83b"],
 " and uniform mass density stands on a frictionless floor and leans against \
a frictionless wall at an initial angle ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "0"], TraditionalForm]],ExpressionUUID->
  "1971755d-6ea1-49a5-bcc7-6b23a73c580f"],
 " relative to the vertical. It is released from rest, whereupon the bottom \
end slides away from the wall, and the top end slides down the wall. When \
will the ladder lose contact with the wall?"
}], "Text",
 CellChangeTimes->{{3.6239823749938602`*^9, 3.623982375633461*^9}, {
  3.6239838100205865`*^9, 3.623983818725402*^9}, {3.6239854104494114`*^9, 
  3.6239854433050694`*^9}, {3.623985906570285*^9, 3.623985930755328*^9}, {
  3.6239894507916784`*^9, 3.6239894509008784`*^9}, {3.689219596771262*^9, 
  3.689219597030915*^9}, {3.720506362253194*^9, 
  3.720506363202383*^9}},ExpressionUUID->"2c9898f3-8296-4995-9730-\
c0bfef59bf02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", "=", "0.18"}], ",", "right", ",", "middle", ",", 
      "top", ",", 
      RowBox[{"r", "=", 
       RowBox[{"1", "/", "2"}]}], ",", 
      RowBox[{"s1", "=", "0.05"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"right", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"middle", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"top", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Circle", "[", 
           RowBox[{"top", ",", "0.15", ",", 
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], ",", 
              RowBox[{
               FractionBox[
                RowBox[{"3", "\[Pi]"}], "2"], "+", "\[Theta]"}]}], "}"}]}], 
           "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "[", 
             RowBox[{"\"\<\[Theta]\>\"", ",", "13"}], "]"}], ",", 
            RowBox[{"top", "+", 
             RowBox[{"0.1", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"3", "\[Pi]"}], "2"], "+", 
                  FractionBox["\[Theta]", "2"]}], "]"}], ",", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"3", "\[Pi]"}], "2"], "+", 
                  FractionBox["\[Theta]", "2"]}], "]"}]}], "}"}]}], "+", 
             RowBox[{"{", 
              RowBox[{"0.05", ",", "0"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {GrayLevel[0.8], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  Frame->True,
                  FrameStyle->GrayLevel[0.5333333333333334],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 "GrayLevel[0.8]"],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.8]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               GrayLevel[0.8],
               Editable->False,
               Selectable->False], ",", 
              RotationBox[
               RotationBox[
                RowBox[{"Polygon", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", "r"}], ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", "r"}], ",", "0"}], "}"}]}], "}"}], "]"}],
                BoxRotation->0.,
                BoxRotationPoint->{0., -0.30000000000000004`}],
               BoxRotation->0.,
               BoxRotationPoint->{0, 0}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {GrayLevel[0.8], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  Frame->True,
                  FrameStyle->GrayLevel[0.5333333333333334],
                  FrameTicks->None,
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 "GrayLevel[0.8]"],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.8]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               GrayLevel[0.8],
               Editable->False,
               Selectable->False], ",", 
              RotationBox[
               RotationBox[
                RowBox[{"Polygon", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}]}], "}"}], "]"}],
                BoxRotation->0.,
                
                BoxRotationPoint->{-0.30000000000000004`, 
                 0.024999999999999967`}],
               BoxRotation->0.,
               BoxRotationPoint->{0, 0}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 RowBox[{
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   Frame->True,
                   FrameStyle->GrayLevel[0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                   PlotRangePadding->None], "\[InvisibleSpace]"}],
                 "GrayLevel[0]"],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               GrayLevel[0],
               Editable->False,
               Selectable->False], ",", 
              RotationBox[
               RotationBox[
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"2", "r"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", "r"}], ",", "0"}], "}"}]}], "}"}], "]"}],
                BoxRotation->0.,
                BoxRotationPoint->{0., -0.25}],
               BoxRotation->0.,
               BoxRotationPoint->{0, 0}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 RowBox[{
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   Frame->True,
                   FrameStyle->GrayLevel[0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                   PlotRangePadding->None], "\[InvisibleSpace]"}],
                 "GrayLevel[0]"],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               GrayLevel[0],
               Editable->False,
               Selectable->False], ",", "Thick", ",", 
              RotationBox[
               RotationBox[
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"right", ",", "top"}], "}"}], "]"}],
                BoxRotation->0.,
                BoxRotationPoint->{0., -0.25}],
               BoxRotation->0.,
               BoxRotationPoint->{0, 0}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"top", "+", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.08"}], ",", "0"}], "}"}]}], ",", 
                RowBox[{"top", "+", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.08"}], ",", 
                   RowBox[{"-", "0.15"}]}], "}"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"right", "+", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", "0.075"}]}], "}"}]}], ",", 
                RowBox[{"right", "+", 
                 RowBox[{"{", 
                  RowBox[{"0.13", ",", 
                   RowBox[{"-", "0.075"}]}], "}"}]}]}], "}"}]}], "}"}], "]"}],
            "}"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"font", "[", 
             RowBox[{"\"\<l\>\"", ",", "Italic"}], "]"}], ",", 
            RowBox[{"middle", "+", 
             RowBox[{"{", 
              RowBox[{"0.05", ",", "0"}], "}"}]}]}], "]"}]}], "}"}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.1"}], ",", 
            RowBox[{
             RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.1"}], ",", 
            RowBox[{
             RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.621627826201005*^9, 3.621627851923298*^9}, {
   3.6216279187473288`*^9, 3.621628029340706*^9}, {3.621628066351512*^9, 
   3.621628179909358*^9}, {3.6232699486490335`*^9, 3.623270006574935*^9}, {
   3.623270097268606*^9, 3.6232701723699017`*^9}, {3.6232702370285997`*^9, 
   3.6232704669167485`*^9}, {3.623270512834375*^9, 3.62327052393301*^9}, {
   3.6232705927619467`*^9, 3.6232706376925163`*^9}, {3.6232706817170343`*^9, 
   3.62327072394545*^9}, {3.6232707888331614`*^9, 3.6232708446263523`*^9}, {
   3.623270881093438*^9, 3.623270977757967*^9}, {3.6232710325260997`*^9, 
   3.623271101804062*^9}, {3.623271573170023*^9, 3.6232715995365305`*^9}, {
   3.6232718152938714`*^9, 3.623271820565173*^9}, {3.623272319997127*^9, 
   3.623272333833147*^9}, {3.6232795825330353`*^9, 3.623279582689045*^9}, {
   3.6843622663925805`*^9, 3.684362266564037*^9}, {3.6845511509664474`*^9, 
   3.684551156177784*^9}, {3.689296214647661*^9, 3.689296282191905*^9}, 
   3.6892965819360113`*^9, {3.689296669099826*^9, 3.6892967055635033`*^9}, {
   3.6892967604553485`*^9, 3.689296817686101*^9}, {3.689296887997246*^9, 
   3.689296926753522*^9}, {3.689296959421*^9, 3.6892969866872797`*^9}, {
   3.6892970176802783`*^9, 3.6892972979779663`*^9}, {3.6892974183548145`*^9, 
   3.689297427549079*^9}, {3.689297474843135*^9, 3.689297503133299*^9}, {
   3.689297552486029*^9, 3.6892978409279747`*^9}, {3.689297877054257*^9, 
   3.6892981840967407`*^9}, {3.6892982568998356`*^9, 3.689298427682562*^9}, {
   3.689298466838107*^9, 3.6892985181567607`*^9}, {3.6892985531555147`*^9, 
   3.6892985557445855`*^9}, 3.689298651209812*^9, {3.6892986842731752`*^9, 
   3.6892987828170815`*^9}, {3.689298869030974*^9, 3.6892988897905645`*^9}, {
   3.689298928701867*^9, 3.6892989306049767`*^9}, {3.6899242689459724`*^9, 
   3.68992427774564*^9}, {3.6899243162000976`*^9, 3.6899243217006874`*^9}, {
   3.6899243611799555`*^9, 3.6899243615862513`*^9}, 3.720064722325942*^9, 
   3.7205023377633724`*^9, {3.7205024075528483`*^9, 3.7205024616561985`*^9}, {
   3.7205024969273357`*^9, 3.7205025330883083`*^9}, {3.720502575232254*^9, 
   3.7205025830888453`*^9}, {3.720502630198827*^9, 3.7205026877767696`*^9}, {
   3.7205028799271336`*^9, 3.7205028922940364`*^9}, {3.72050297598703*^9, 
   3.7205030921783648`*^9}, {3.720503171853651*^9, 3.720503243841365*^9}, {
   3.7205032944024453`*^9, 3.720503338067479*^9}, {3.7205033843163433`*^9, 
   3.720503529428027*^9}, {3.720503565628582*^9, 
   3.7205037185640736`*^9}},ExpressionUUID->"7567159e-1fa3-4db0-b014-\
21cc376bd2f7"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`\[Theta]$$ = 0.18, $CellContext`right$$ = {
   0.17902957342582418`, 0}, $CellContext`middle$$ = {0.08951478671291209, 
   0.4919218463940607}, $CellContext`top$$ = {
   0, 0.9838436927881214}, $CellContext`r$$ = Rational[
   1, 2], $CellContext`s1$$ = 0.05}, 
   GraphicsBox[{
     CircleBox[{0, 0.9838436927881214}, 0.15, 
      NCache[{Rational[3, 2] Pi, 4.892388980384689}, {4.71238898038469, 
       4.892388980384689}]], InsetBox[
      StyleBox["\<\"\[Theta]\"\>",
       StripOnInput->False,
       FontFamily->"Times",
       FontSize->13], {0.058987854919801075, 0.884248419486922}], {
      {GrayLevel[0.8], 
       GeometricTransformationBox[
        GeometricTransformationBox[
         PolygonBox[{{-0.05, 0}, {-0.05, -0.05}, {1, -0.05}, {1, 0}}], {{{1., 
          0.}, {0., 1.}}, {0., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
      {GrayLevel[0.8], 
       GeometricTransformationBox[
        GeometricTransformationBox[
         PolygonBox[{{0, 1.1}, {0, -0.05}, {-0.05, -0.05}, {-0.05, 1.1}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
      {GrayLevel[0], 
       GeometricTransformationBox[
        GeometricTransformationBox[
         LineBox[{{0, 1}, {0, 0}, {1, 0}}], {{{1., 0.}, {0., 1.}}, {0., 
          0.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
      {GrayLevel[0], Thickness[Large], 
       GeometricTransformationBox[
        GeometricTransformationBox[
         LineBox[{{0.17902957342582418`, 0}, {0, 0.9838436927881214}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}}, 
     ArrowBox[{{{-0.08, 0.9838436927881214}, {-0.08, 0.8338436927881214}}, {{
      0.17902957342582418`, -0.075}, {0.30902957342582416`, -0.075}}}], 
     InsetBox[
      StyleBox["\<\"l\"\>",
       StripOnInput->False,
       FontFamily->"Times",
       FontSize->14,
       FontSlant->Italic], {0.1395147867129121, 0.4919218463940607}]},
    AspectRatio->1,
    ImageSize->250,
    PlotRange->{{-0.1, 1.1}, {-0.1, 1.1}}],
   DynamicModuleValues:>{}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.720503503522221*^9, 3.720503529535847*^9}, {
  3.7205035705587425`*^9, 
  3.720503718678875*^9}},ExpressionUUID->"26cc0587-9998-4cbc-a15b-\
46786d256a9d"]
}, {2}]],

Cell[TextData[{
 StyleBox["Solution 1",
  FontVariations->{"Underline"->True}],
 "\nLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", 
    FractionBox["l", "2"]}], TraditionalForm]],ExpressionUUID->
  "a7f8b323-421b-4a5b-8161-78b3645f631d"],
 ". The ladder has a moment of inertia ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "12"], "m", " ", 
     SuperscriptBox["l", "2"]}], "=", 
    RowBox[{
     FractionBox["1", "3"], "m", " ", 
     SuperscriptBox["r", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "421e84ef-8141-468d-8930-1dfc8c40ae9e"],
 " about its center, but we will use the more general ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "=", 
    RowBox[{"\[Eta]", " ", "m", " ", 
     SuperscriptBox["r", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "1fed60c5-aed2-4d28-a26f-c0f6c88c43d6"],
 ". Let \[Theta] be the angle between the wall and the ladder, which also \
equals the vertical angle from the wall to the center of mass. This symmetry \
implies that the center of the ladder (while it stays in contact with the \
wall) travels along a circle! Here is what the motion of the ladder would \
look like if its ends were forced to remain on the floor and wall (for \
example, if its ends were clamped onto frictionless rails on the floor and \
wall)."
}], "Text",
 CellChangeTimes->{{3.720298513014409*^9, 3.720298513961376*^9}, {
  3.720502288250905*^9, 3.720502301589826*^9}, {3.7205031481871257`*^9, 
  3.7205031486934023`*^9}, {3.720544759145095*^9, 
  3.720544832248763*^9}},ExpressionUUID->"cf7471fa-bd44-4edd-b0a2-\
7b4e27a5ac19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]0", "=", "0.1"}], ",", "\[Theta]", ",", "right", ",", 
      "middle", ",", "top", ",", "r", ",", 
      RowBox[{"s1", "=", "0.05"}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"1", "/", "4"}]}], ",", 
      RowBox[{"\[Eta]", "=", 
       RowBox[{"1", "/", "3"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"right", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "r", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"middle", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"top", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Circle", "[", 
              RowBox[{"top", ",", "0.06", ",", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{"3", "\[Pi]"}], "2"], ",", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"3", "\[Pi]"}], "2"], "+", "\[Theta]"}]}], "}"}]}],
               "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"font", "@", "\"\<\[Theta]\>\""}], ",", 
               RowBox[{"top", "+", 
                RowBox[{"0.1", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", "\[Pi]"}], "2"], "+", 
                    FractionBox["\[Theta]", "2"]}], "]"}], ",", 
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", "\[Pi]"}], "2"], "+", 
                    FractionBox["\[Theta]", "2"]}], "]"}]}], "}"}]}]}]}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0.8], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->GrayLevel[0.5333333333333334],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                    PlotRangePadding->None],
                    "GrayLevel[0.8]"],
                   Appearance->None,
                   BaseStyle->{},
                   BaselinePosition->Baseline,
                   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                   DefaultBaseStyle->{},
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  GrayLevel[0.8],
                  Editable->False,
                  Selectable->False], ",", 
                 RotationBox[
                  RotationBox[
                   RowBox[{"Polygon", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}], ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}], ",", "0"}], "}"}]}], 
                    "}"}], "]"}],
                   BoxRotation->0.,
                   BoxRotationPoint->{0., -0.30000000000000004`}],
                  BoxRotation->0.,
                  BoxRotationPoint->{0, 0}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0.8], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->GrayLevel[0.5333333333333334],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                    PlotRangePadding->None],
                    "GrayLevel[0.8]"],
                   Appearance->None,
                   BaseStyle->{},
                   BaselinePosition->Baseline,
                   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                   DefaultBaseStyle->{},
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  GrayLevel[0.8],
                  Editable->False,
                  Selectable->False], ",", 
                 RotationBox[
                  RotationBox[
                   RowBox[{"Polygon", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}]}], "}"}], "]"}],
                   BoxRotation->0.,
                   
                   BoxRotationPoint->{-0.30000000000000004`, 
                    0.024999999999999967`}],
                  BoxRotation->0.,
                  BoxRotationPoint->{0, 0}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                    PlotRangePadding->None], "\[InvisibleSpace]"}],
                    "GrayLevel[0]"],
                   Appearance->None,
                   BaseStyle->{},
                   BaselinePosition->Baseline,
                   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                   DefaultBaseStyle->{},
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  GrayLevel[0],
                  Editable->False,
                  Selectable->False], ",", 
                 RotationBox[
                  RotationBox[
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}], ",", "0"}], "}"}]}], 
                    "}"}], "]"}],
                   BoxRotation->0.,
                   BoxRotationPoint->{0., -0.25}],
                  BoxRotation->0.,
                  BoxRotationPoint->{0, 0}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                    PlotRangePadding->None], "\[InvisibleSpace]"}],
                    "GrayLevel[0]"],
                   Appearance->None,
                   BaseStyle->{},
                   BaselinePosition->Baseline,
                   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                   DefaultBaseStyle->{},
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  GrayLevel[0],
                  Editable->False,
                  Selectable->False], ",", "Thick", ",", 
                 RotationBox[
                  RotationBox[
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{"right", ",", "top"}], "}"}], "]"}],
                   BoxRotation->0.,
                   BoxRotationPoint->{0., -0.25}],
                  BoxRotation->0.,
                  BoxRotationPoint->{0, 0}]}], "}"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{"showCenterLine", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "0.06", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    FractionBox["\[Pi]", "2"], "-", "\[Theta]"}], ",", 
                   FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"font", "@", "\"\<\[Theta]\>\""}], ",", 
                 RowBox[{"0.1", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], "-", 
                    FractionBox["\[Theta]", "2"]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], "-", 
                    FractionBox["\[Theta]", "2"]}], "]"}]}], "}"}]}]}], "]"}],
                ",", "Dashed", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "middle"}], "}"}], 
                "]"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"font", "[", 
                  RowBox[{"\"\<r\>\"", ",", "Italic"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Mean", "[", 
                   RowBox[{"{", 
                    RowBox[{"middle", ",", "top"}], "}"}], "]"}], "+", 
                  RowBox[{"s1", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}]}], 
                "]"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"font", "[", 
                  RowBox[{"\"\<r\>\"", ",", "Italic"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Mean", "[", 
                   RowBox[{"{", 
                    RowBox[{"middle", ",", "right"}], "}"}], "]"}], "+", 
                  RowBox[{"s1", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}]}], 
                "]"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"font", "[", 
                  RowBox[{"\"\<r\>\"", ",", "Italic"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Mean", "[", 
                   RowBox[{"{", 
                    RowBox[{"middle", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], "+", 
                  RowBox[{"s1", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}]}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{"showCenterPath", ",", 
             RowBox[{"{", 
              RowBox[{"color6", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "r", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{"showVcm", ",", 
             RowBox[{
              RowBox[{"vMag", "=", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"2", "g", " ", "r"}], 
                  RowBox[{"1", "+", "\[Eta]"}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]0", "]"}], "-", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "]"}]}], 
              ";", 
              RowBox[{"{", 
               RowBox[{"color1", ",", "Thick", ",", 
                RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"r", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"r", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], "+", 
                    RowBox[{"vMag", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]}]}], 
                  "}"}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{
                  "font", "@", 
                   "\"\<\!\(\*SubscriptBox[\(v\), \(CM\)]\)\>\""}], ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"r", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], "+", 
                   RowBox[{"vMag", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "+", 
                   RowBox[{"0.06", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]}]}], 
                 "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{"showVcmX", ",", 
             RowBox[{
              RowBox[{"vMag", "=", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"2", "g", " ", "r"}], 
                  RowBox[{"1", "+", "\[Eta]"}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]0", "]"}], "-", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "]"}]}], 
              ";", 
              RowBox[{"{", 
               RowBox[{"color6", ",", "Thick", ",", 
                RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"r", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"r", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], "+", 
                    RowBox[{"vMag", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], 
                    "}"}]}]}]}], "}"}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{
                  "font", "@", 
                   "\"\<\!\(\*SubsuperscriptBox[\(v\), \(CM\), \
\((x)\)]\)\>\""}], ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"r", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
                    RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], "+", 
                   RowBox[{"vMag", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], 
                    "}"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{"0.06", ",", "0"}], "}"}]}]}], "]"}]}], "}"}]}]}],
             "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "0.025", "]"}], ",", "color1", ",", 
             RowBox[{"Point", "[", "middle", "]"}], ",", "color5", ",", 
             RowBox[{"Point", "[", "top", "]"}], ",", 
             RowBox[{"Point", "[", "right", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Gray", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{
               "font", "@", "\"\<Ladder clamped to wall and floor\>\""}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"r", "+", "0.05"}], ",", 
                 RowBox[{
                  RowBox[{"2", "r"}], "+", "0.05"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05"}], ",", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05"}], ",", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "280"}], ",", 
         RowBox[{"PlotRangePadding", "\[Rule]", "None"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0.5", ",", 
          RowBox[{"font", "[", 
           RowBox[{"\"\<\[Theta]\>\"", ",", "13"}], "]"}]}], "}"}], ",", 
        "\[Theta]0", ",", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "0.001"}]}], "}"}], ",", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"showCenterLine", ",", "True", ",", 
              RowBox[{"font", "[", 
               RowBox[{"\"\<center\>\"", ",", "13"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"Spacer", "[", "15", "]"}], ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"showCenterPath", ",", "True", ",", 
              RowBox[{"font", "[", 
               RowBox[{"\"\<center path\>\"", ",", "13"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"Spacer", "[", "15", "]"}], ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"showVcm", ",", "True", ",", 
              RowBox[{"font", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[
StyleBox[\"v\",
FontSlant->\"Italic\"], \"CM\"]\)\>\"", ",", "13"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"Spacer", "[", "15", "]"}], ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"showVcmX", ",", "True", ",", 
              RowBox[{"font", "[", 
               RowBox[{"\"\<\!\(\*SubsuperscriptBox[
StyleBox[\"v\",
FontSlant->\"Italic\"], \"CM\", 
RowBox[{\"(\", 
StyleBox[\"x\",
FontSlant->\"Italic\"], \")\"}]]\)\>\"", ",", "13"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Initialization", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"1", "/", "2"}]}], ";", 
         RowBox[{
          RowBox[{"font", "[", 
           RowBox[{"text_", ",", 
            RowBox[{"size_Integer:", "14"}], ",", "opts___"}], "]"}], ":=", 
          RowBox[{"(", 
           RowBox[{"Style", "[", 
            RowBox[{"text", ",", "size", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", 
             "opts"}], "]"}], ")"}]}]}], ")"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.621627826201005*^9, 3.621627851923298*^9}, {
   3.6216279187473288`*^9, 3.621628029340706*^9}, {3.621628066351512*^9, 
   3.621628179909358*^9}, {3.6232699486490335`*^9, 3.623270006574935*^9}, {
   3.623270097268606*^9, 3.6232701723699017`*^9}, {3.6232702370285997`*^9, 
   3.6232704669167485`*^9}, {3.623270512834375*^9, 3.62327052393301*^9}, {
   3.6232705927619467`*^9, 3.6232706376925163`*^9}, {3.6232706817170343`*^9, 
   3.62327072394545*^9}, {3.6232707888331614`*^9, 3.6232708446263523`*^9}, {
   3.623270881093438*^9, 3.623270977757967*^9}, {3.6232710325260997`*^9, 
   3.623271101804062*^9}, {3.623271573170023*^9, 3.6232715995365305`*^9}, {
   3.6232718152938714`*^9, 3.623271820565173*^9}, {3.623272319997127*^9, 
   3.623272333833147*^9}, {3.6232795825330353`*^9, 3.623279582689045*^9}, {
   3.6843622663925805`*^9, 3.684362266564037*^9}, {3.6845511509664474`*^9, 
   3.684551156177784*^9}, {3.689296214647661*^9, 3.689296282191905*^9}, 
   3.6892965819360113`*^9, {3.689296669099826*^9, 3.6892967055635033`*^9}, {
   3.6892967604553485`*^9, 3.689296817686101*^9}, {3.689296887997246*^9, 
   3.689296926753522*^9}, {3.689296959421*^9, 3.6892969866872797`*^9}, {
   3.6892970176802783`*^9, 3.6892972979779663`*^9}, {3.6892974183548145`*^9, 
   3.689297427549079*^9}, {3.689297474843135*^9, 3.689297503133299*^9}, {
   3.689297552486029*^9, 3.6892978409279747`*^9}, {3.689297877054257*^9, 
   3.6892981840967407`*^9}, {3.6892982568998356`*^9, 3.689298427682562*^9}, {
   3.689298466838107*^9, 3.6892985181567607`*^9}, {3.6892985531555147`*^9, 
   3.6892985557445855`*^9}, 3.689298651209812*^9, {3.6892986842731752`*^9, 
   3.6892987828170815`*^9}, {3.689298869030974*^9, 3.6892988897905645`*^9}, {
   3.689298928701867*^9, 3.6892989306049767`*^9}, {3.6899242689459724`*^9, 
   3.68992427774564*^9}, {3.6899243162000976`*^9, 3.6899243217006874`*^9}, {
   3.6899243611799555`*^9, 3.6899243615862513`*^9}, 3.720064722325942*^9, 
   3.7205023377633724`*^9, {3.7205024075528483`*^9, 3.7205024616561985`*^9}, {
   3.7205024969273357`*^9, 3.7205025330883083`*^9}, {3.720502575232254*^9, 
   3.7205025830888453`*^9}, {3.720502630198827*^9, 3.7205026877767696`*^9}, {
   3.7205028799271336`*^9, 3.7205028922940364`*^9}, {3.72050297598703*^9, 
   3.7205030921783648`*^9}, {3.720503249149042*^9, 3.7205032665316577`*^9}, {
   3.7205126956712656`*^9, 3.720512802769277*^9}, {3.720544778178022*^9, 
   3.720544782319575*^9}, {3.7209505784052873`*^9, 3.7209505940664415`*^9}, {
   3.7210241476241364`*^9, 3.7210241955033236`*^9}, {3.721024231281787*^9, 
   3.7210244145946846`*^9}, {3.721024487420289*^9, 3.7210244918632746`*^9}, {
   3.721024545227268*^9, 3.7210246233652654`*^9}, {3.721024672348915*^9, 
   3.7210248083236456`*^9}, {3.72102486564567*^9, 3.7210250195927086`*^9}, {
   3.721025060514281*^9, 3.721025099323572*^9}, {3.7210251384492626`*^9, 
   3.7210252043610864`*^9}, {3.7210253110764647`*^9, 
   3.7210253298142295`*^9}, {3.7210254282194605`*^9, 3.721025429258647*^9}, {
   3.72102549383697*^9, 
   3.7210255042453375`*^9}},ExpressionUUID->"5172a8bf-4587-4372-a035-\
4d3ba2bd5707"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`\[Theta]0$$ = 
   0.1, $CellContext`\[Theta]$$, $CellContext`right$$ = {
   0.479425538604203, 0}, $CellContext`middle$$ = {0.2397127693021015, 
   0.4387912809451864}, $CellContext`top$$ = {
   0, 0.8775825618903728}, $CellContext`r$$ = Rational[
   1, 2], $CellContext`s1$$ = 0.05, $CellContext`g$$ = Rational[
   1, 4], $CellContext`\[Eta]$$ = Rational[1, 3]}, 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`showCenterLine$$ = 
      True, $CellContext`showCenterPath$$ = True, $CellContext`showVcm$$ = 
      True, $CellContext`showVcmX$$ = True, $CellContext`\[Theta]$$ = 0.5, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`\[Theta]$$], 0.5, 
         Style["\[Theta]", 13, FontFamily -> "Times"]}, 0.1, 
        1.5697963267948967`}, {{
         Hold[$CellContext`showCenterLine$$], True, 
         Style["center", 13, FontFamily -> "Times"]}, {False, True}}, {{
         Hold[$CellContext`showCenterPath$$], True, 
         Style["center path", 13, FontFamily -> "Times"]}, {False, True}}, {{
         Hold[$CellContext`showVcm$$], True, 
         Style[
         "\!\(\*SubscriptBox[\n StyleBox[\"v\",\nFontSlant->\"Italic\"], \"CM\
\"]\)", 13, FontFamily -> "Times"]}, {False, True}}, {{
         Hold[$CellContext`showVcmX$$], True, 
         Style[
         "\!\(\*SubsuperscriptBox[\n StyleBox[\"v\",\nFontSlant->\"Italic\"], \
\"CM\", \n RowBox[{\"(\", \n  StyleBox[\"x\",\nFontSlant->\"Italic\"], \
\")\"}]]\)", 13, FontFamily -> "Times"]}, {False, True}}, {
        Hold[
         Row[{
           Manipulate`Place[1], 
           Spacer[15], 
           Manipulate`Place[2], 
           Spacer[15], 
           Manipulate`Place[3], 
           Spacer[15], 
           Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}}, 
      Typeset`size$$ = {448., {219., 229.}}, Typeset`update$$ = 0, 
      Typeset`initDone$$, Typeset`skipInitDone$$ = 
      False, $CellContext`\[Theta]$$$331684$$ = 
      0, $CellContext`showCenterLine$331685$$ = 
      False, $CellContext`showCenterPath$331686$$ = 
      False, $CellContext`showVcm$331687$$ = 
      False, $CellContext`showVcmX$331688$$ = False}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       2, StandardForm, 
        "Variables" :> {$CellContext`showCenterLine$$ = 
          True, $CellContext`showCenterPath$$ = True, $CellContext`showVcm$$ = 
          True, $CellContext`showVcmX$$ = True, $CellContext`\[Theta]$$ = 
          0.5}, "ControllerVariables" :> {
          Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$$$331684$$, 0], 
          
          Hold[$CellContext`showCenterLine$$, \
$CellContext`showCenterLine$331685$$, False], 
          
          Hold[$CellContext`showCenterPath$$, \
$CellContext`showCenterPath$331686$$, False], 
          Hold[$CellContext`showVcm$$, $CellContext`showVcm$331687$$, False], 
          
          Hold[$CellContext`showVcmX$$, $CellContext`showVcmX$331688$$, 
           False]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> ($CellContext`right$$ = {(2 $CellContext`r$$) 
            Sin[$CellContext`\[Theta]$$], 
            0}; $CellContext`middle$$ = {$CellContext`r$$ 
            Sin[$CellContext`\[Theta]$$], $CellContext`r$$ 
            Cos[$CellContext`\[Theta]$$]}; $CellContext`top$$ = {
           0, (2 $CellContext`r$$) Cos[$CellContext`\[Theta]$$]}; Graphics[{{
             
             Circle[$CellContext`top$$, 0.06, {
              3 (Pi/2), 3 (Pi/2) + $CellContext`\[Theta]$$}], 
             Text[
              $CellContext`font["\[Theta]"], $CellContext`top$$ + 0.1 {
                 Cos[3 (Pi/2) + $CellContext`\[Theta]$$/2], 
                 Sin[3 (Pi/2) + $CellContext`\[Theta]$$/2]}], {{
               GrayLevel[0.8], 
               Rotate[
                Rotate[
                 
                 Polygon[{{-0.05, 0}, {-0.05, -0.05}, {
                   2 $CellContext`r$$ + 0.1, -0.05}, {
                   2 $CellContext`r$$ + 0.1, 0}}], 0., {
                 0., -0.30000000000000004`}], 0., {0, 0}]}, {
               GrayLevel[0.8], 
               Rotate[
                Rotate[
                 
                 Polygon[{{0, 2 $CellContext`r$$ + 0.1}, {
                   0, -0.05}, {-0.05, -0.05}, {-0.05, 2 $CellContext`r$$ + 
                    0.1}}], 0., {-0.30000000000000004`, 
                 0.024999999999999967`}], 0., {0, 0}]}, {
               GrayLevel[0], 
               Rotate[
                Rotate[
                 
                 Line[{{0, 2 $CellContext`r$$ + 0.1}, {0, 0}, {
                   2 $CellContext`r$$ + 0.1, 0}}], 0., {0., -0.25}], 0., {0, 
                0}]}, {
               GrayLevel[0], Thick, 
               Rotate[
                Rotate[
                 Line[{$CellContext`right$$, $CellContext`top$$}], 0., {
                 0., -0.25}], 0., {0, 0}]}}}, 
            If[$CellContext`showCenterLine$$, {
              Circle[{0, 0}, 0.06, {Pi/2 - $CellContext`\[Theta]$$, Pi/2}], 
              Text[
               $CellContext`font["\[Theta]"], 0.1 {
                 Cos[Pi/2 - $CellContext`\[Theta]$$/2], 
                 Sin[Pi/2 - $CellContext`\[Theta]$$/2]}], Dashed, 
              Line[{{0, 0}, $CellContext`middle$$}], 
              Text[
               $CellContext`font["r", Italic], 
               Mean[{$CellContext`middle$$, $CellContext`top$$}] + \
$CellContext`s1$$ {
                  Cos[$CellContext`\[Theta]$$], 
                  Sin[$CellContext`\[Theta]$$]}], 
              Text[
               $CellContext`font["r", Italic], 
               Mean[{$CellContext`middle$$, $CellContext`right$$}] + \
$CellContext`s1$$ {
                  Cos[$CellContext`\[Theta]$$], 
                  Sin[$CellContext`\[Theta]$$]}], 
              Text[
               $CellContext`font["r", Italic], 
               Mean[{$CellContext`middle$$, {0, 0}}] + $CellContext`s1$$ {-
                  Cos[$CellContext`\[Theta]$$], 
                  Sin[$CellContext`\[Theta]$$]}]}, {}], 
            If[$CellContext`showCenterPath$$, {$CellContext`color6, 
              Circle[{0, 0}, $CellContext`r$$, {0, Pi/2}]}, {}], 
            
            If[$CellContext`showVcm$$, $CellContext`vMag = 
              Sqrt[((2 $CellContext`g$$) ($CellContext`r$$/(
                  1 + $CellContext`\[Eta]$$))) (Cos[$CellContext`\[Theta]0$$] - 
                 Cos[$CellContext`\[Theta]$$])]; {$CellContext`color1, Thick, 
               Arrowheads[Medium], 
               
               Arrow[{{$CellContext`r$$ 
                  Sin[$CellContext`\[Theta]$$], $CellContext`r$$ 
                  Cos[$CellContext`\[Theta]$$]}, {$CellContext`r$$ 
                   Sin[$CellContext`\[Theta]$$], $CellContext`r$$ 
                   Cos[$CellContext`\[Theta]$$]} + $CellContext`vMag {
                    Cos[$CellContext`\[Theta]$$], -
                    Sin[$CellContext`\[Theta]$$]}}], 
               Text[
                $CellContext`font[
                "\!\(\*SubscriptBox[\(v\), \(CM\)]\)"], {$CellContext`r$$ 
                  Sin[$CellContext`\[Theta]$$], $CellContext`r$$ 
                  Cos[$CellContext`\[Theta]$$]} + $CellContext`vMag {
                   Cos[$CellContext`\[Theta]$$], -
                   Sin[$CellContext`\[Theta]$$]} + 0.06 {
                   Cos[$CellContext`\[Theta]$$], -
                   Sin[$CellContext`\[Theta]$$]}]}], 
            
            If[$CellContext`showVcmX$$, $CellContext`vMag = 
              Sqrt[((2 $CellContext`g$$) ($CellContext`r$$/(
                  1 + $CellContext`\[Eta]$$))) (Cos[$CellContext`\[Theta]0$$] - 
                 Cos[$CellContext`\[Theta]$$])]; {$CellContext`color6, Thick, 
               Arrowheads[Medium], 
               
               Arrow[{{$CellContext`r$$ 
                  Sin[$CellContext`\[Theta]$$], $CellContext`r$$ 
                  Cos[$CellContext`\[Theta]$$]}, {$CellContext`r$$ 
                   Sin[$CellContext`\[Theta]$$], $CellContext`r$$ 
                   Cos[$CellContext`\[Theta]$$]} + $CellContext`vMag {
                    Cos[$CellContext`\[Theta]$$], 0}}], 
               Text[
                $CellContext`font[
                "\!\(\*SubsuperscriptBox[\(v\), \(CM\), \((x)\)]\)"], \
{$CellContext`r$$ Sin[$CellContext`\[Theta]$$], $CellContext`r$$ 
                  Cos[$CellContext`\[Theta]$$]} + $CellContext`vMag {
                   Cos[$CellContext`\[Theta]$$], 0} + {0.06, 0}]}], {
             PointSize[0.025], $CellContext`color1, 
             Point[$CellContext`middle$$], $CellContext`color5, 
             Point[$CellContext`top$$], 
             Point[$CellContext`right$$]}, {Gray, 
             Text[
              $CellContext`font[
              "Ladder clamped to wall and floor"], {$CellContext`r$$ + 0.05, 
               2 $CellContext`r$$ + 0.05}, {0, 0}]}}, 
           PlotRange -> {{-0.05, 2 $CellContext`r$$ + 0.1}, {-0.05, 
              2 $CellContext`r$$ + 0.1}}, AspectRatio -> 1, ImageSize -> 280, 
           PlotRangePadding -> None]), 
        "Specifications" :> {{{$CellContext`\[Theta]$$, 0.5, 
            Style["\[Theta]", 13, FontFamily -> "Times"]}, 0.1, 
           1.5697963267948967`}, {{$CellContext`showCenterLine$$, True, 
            Style["center", 13, FontFamily -> "Times"]}, {False, True}, 
           ControlPlacement -> 1}, {{$CellContext`showCenterPath$$, True, 
            Style["center path", 13, FontFamily -> "Times"]}, {False, True}, 
           ControlPlacement -> 2}, {{$CellContext`showVcm$$, True, 
            Style[
            "\!\(\*SubscriptBox[\n StyleBox[\"v\",\nFontSlant->\"Italic\"], \
\"CM\"]\)", 13, FontFamily -> "Times"]}, {False, True}, ControlPlacement -> 
           3}, {{$CellContext`showVcmX$$, True, 
            Style[
            "\!\(\*SubsuperscriptBox[\n StyleBox[\"v\",\n\
FontSlant->\"Italic\"], \"CM\", \n RowBox[{\"(\", \n  StyleBox[\"x\",\n\
FontSlant->\"Italic\"], \")\"}]]\)", 13, FontFamily -> "Times"]}, {
           False, True}, ControlPlacement -> 4}, 
          Row[{
            Manipulate`Place[1], 
            Spacer[15], 
            Manipulate`Place[2], 
            Spacer[15], 
            Manipulate`Place[3], 
            Spacer[15], 
            Manipulate`Place[4]}]}, "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{522., {303., 313.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>(($CellContext`r$$ = 1/2; $CellContext`font[
           Pattern[$CellContext`text, 
            Blank[]], 
           Optional[
            Pattern[$CellContext`size, 
             Blank[Integer]], 14], 
           Pattern[$CellContext`opts, 
            BlankNullSequence[]]] := 
         Style[$CellContext`text, $CellContext`size, FontFamily -> 
           "Times", $CellContext`opts]); Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.7210242645356255`*^9, 3.7210243572898226`*^9}, 
   3.7210244152752438`*^9, 3.721024628017039*^9, {3.721024675520239*^9, 
   3.721024706445307*^9}, {3.721024749158898*^9, 3.7210248103626165`*^9}, {
   3.7210249027425027`*^9, 3.721024920263155*^9}, {3.721024971919382*^9, 
   3.721024986785225*^9}, 3.721025019840008*^9, 3.721025100077075*^9, {
   3.72102513903428*^9, 3.7210252272847095`*^9}, {3.721025313811147*^9, 
   3.7210253299628487`*^9}, 3.7210254297395506`*^9, 
   3.721025504646038*^9},ExpressionUUID->"486d63c3-4df9-470e-91a2-\
6ef140db60b1"]
}, {2}]],

Cell[CellGroupData[{

Cell[TextData[{
 "Before we begin solving this problem, let's gain some insight into the \
motion of the ladder and understand why it should come away from the wall \
before it hits the ground. The forces acting on the ladder are the normal \
forces ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "w"], TraditionalForm]],ExpressionUUID->
  "864d0004-c828-40be-9b25-cd88d6628bdc"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "f"], TraditionalForm]],ExpressionUUID->
  "507dc76e-882b-4770-946c-3677e3384f6a"],
 " from the wall and floor, respectively, as well as gravity acting on the \
center of mass. "
}], "Text",
 CellChangeTimes->{{3.6239852793199778`*^9, 3.62398533717288*^9}, {
  3.623985390091173*^9, 3.6239854005947933`*^9}, {3.623985454319689*^9, 
  3.623985478998932*^9}, {3.623985515410396*^9, 3.623985538066636*^9}, {
  3.6239855872223225`*^9, 3.623985589265926*^9}, {3.6239860111220694`*^9, 
  3.623986044286129*^9}, {3.6239860755223837`*^9, 
  3.6239861042108345`*^9}},ExpressionUUID->"886de185-60e3-48dd-8928-\
049a0ec301f7"],

Cell[TextData[{
 "The motion of the center of mass (the center of the ladder) follows the \
semi-circle ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"7cab8b59-2030-453b-b1ad-6fd709a8bb7e"],
 ". The force ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "w"], TraditionalForm]],ExpressionUUID->
  "985b5df0-9bfd-4252-8cd9-78d5231938a4"],
 " will accelerate the ladder to the right, while ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "f"], TraditionalForm]],ExpressionUUID->
  "965b1490-40ee-4ff8-942e-e2a7bf1ff098"],
 " will try and rotate the ladder so that it stays on the wall. However, as \
\[Theta] approaches ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]],ExpressionUUID->
  "9b7ecd05-8cdf-47e2-970d-11bd19ff607e"],
 ", the velocity of the ladder would have to be straight down in order for it \
to stay attached to the wall and floor, and this would imply that there must \
be a force acting on it to the left (i.e. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "w"], TraditionalForm]],ExpressionUUID->
  "d18b4b0d-e131-4947-9176-03175f7d8b01"],
 " would have to be negative) to achieve this. So somewhere before this point \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "w"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "126f0f0a-c245-42a3-97ea-66d472ac2936"],
 ", and since the normal force can\[CloseCurlyQuote]t be negative (unless we \
set up some rails and force the ladder to stay attached to the wall), past \
this point the ladder will detaches from the wall. Let\[CloseCurlyQuote]s \
find out when that is."
}], "Text",
 CellChangeTimes->{{3.6239852793199778`*^9, 3.62398533717288*^9}, {
   3.623985390091173*^9, 3.6239854005947933`*^9}, {3.623985454319689*^9, 
   3.623985478998932*^9}, {3.623985515410396*^9, 3.623985538066636*^9}, {
   3.6239855872223225`*^9, 3.623985589265926*^9}, {3.6239860111220694`*^9, 
   3.623986044286129*^9}, 3.6239860755223837`*^9, {3.6239861084238415`*^9, 
   3.6239861419191008`*^9}, {3.62398623766947*^9, 3.62398627728494*^9}, {
   3.623986320174415*^9, 3.6239863209700165`*^9}, {3.62398635140867*^9, 
   3.6239864319646125`*^9}, {3.6239873861053452`*^9, 
   3.6239874171358*^9}},ExpressionUUID->"ad29f019-f7f9-467a-88ce-\
7133a419baca"],

Cell["By conservation of energy, ", "Text",
 CellChangeTimes->{{3.623987424358612*^9, 3.6239874290854206`*^9}, 
   3.623987550467841*^9},ExpressionUUID->"5868801b-4d83-4030-a2a1-\
e405e81a03f5"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"m", " ", "g", " ", "r", " ", 
    RowBox[{"Cos", "[", 
     SubscriptBox["\[Theta]", "0"], "]"}]}], "=", 
   RowBox[{
    RowBox[{"m", " ", "g", " ", "r", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], "m", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", 
        OverscriptBox["\[Theta]", "."]}], ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{"\[Eta]", " ", "m", " ", 
       SuperscriptBox["r", "2"]}], ")"}], 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "."], "2"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"4a827b5a-373b-4241-a8d8-fb83d9aecbab"]], \
"TextNumbered",
 CellChangeTimes->{{3.623984089584078*^9, 
  3.6239841431389723`*^9}},ExpressionUUID->"c08b6561-5a4d-41bf-bcf3-\
faf63449684d"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Theta]", "."], TraditionalForm]],ExpressionUUID->
  "b762c3da-6f07-4a73-998d-8d03232d082e"],
 " appears in the kinetic energy term (because it describes how the center of \
mass moves) and the same ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Theta]", "."], TraditionalForm]],ExpressionUUID->
  "d8288152-733a-49e5-bf26-31108f0303ef"],
 " appears in the rotational energy term (because \[Theta] is the angle \
between the ladder and the vertical). This allows us to solve for the \
velocity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", 
    RowBox[{"r", " ", 
     OverscriptBox["\[Theta]", "."]}]}], TraditionalForm]],ExpressionUUID->
  "119edaf8-5212-429d-93f6-55c3e2683e97"],
 " as "
}], "Text",
 CellChangeTimes->{{3.623987570858077*^9, 
  3.623987716459133*^9}},ExpressionUUID->"d945df42-5195-403e-a966-\
6a42c2dd591a"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "m", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}], 
    SuperscriptBox["v", "2"]}], "=", 
   RowBox[{"m", " ", "g", " ", "r", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "0"], "]"}], "-", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"72f0062f-a1a5-4897-b006-08d0d00d9325"]], \
"TextNumbered",
 CellChangeTimes->{{3.6239877174107347`*^9, 
  3.6239877385029716`*^9}},ExpressionUUID->"9fec84ca-3579-4889-947a-\
c7798689d5b8"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"v", "=", 
   SuperscriptBox[
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "g", " ", "r"}], 
       RowBox[{"1", "+", "\[Eta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "0"], "]"}], "-", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "}"}], 
    RowBox[{"1", "/", "2"}]]}], 
  TraditionalForm]],ExpressionUUID->"0286ea4c-a49d-4b78-b94c-807342a815aa"]], \
"TextNumbered",
 CellChangeTimes->{{3.6239877174107347`*^9, 3.623987757477605*^9}, {
  3.6239877980230765`*^9, 
  3.623987803015085*^9}},ExpressionUUID->"815daa78-0927-4aea-865f-\
e7748ef9ae93"],

Cell["The velocity has a horizontal component", "Text",
 CellChangeTimes->{{3.6239878048090887`*^9, 
  3.6239878095514965`*^9}},ExpressionUUID->"b65f4780-7dc8-414b-a0a0-\
ba312a04582d"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["v", "x"], "=", 
   RowBox[{
    RowBox[{"v", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "\[Proportional]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "0"], "]"}], "-", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"5ea3a32e-ef88-4a37-8282-a972d76a09ee"]], \
"TextNumbered",
 CellChangeTimes->{{3.6239877174107347`*^9, 3.623987757477605*^9}, {
  3.6239877980230765`*^9, 
  3.6239878297545323`*^9}},ExpressionUUID->"45bdc38f-51e5-4ab8-8b22-\
d72d67d56c63"],

Cell[TextData[{
 "We want to find out when this is maximized, since a negative slope of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "x"], TraditionalForm]],ExpressionUUID->
  "66ced8c5-1ccb-4cd8-9b5f-8d2aad3271dc"],
 " (also denoted as ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "."], TraditionalForm]],ExpressionUUID->
  "ca972539-cbce-4d6b-a3c3-1b7e2b65a9b9"],
 ") implies that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "w"], TraditionalForm]],ExpressionUUID->
  "7a5e0230-5f64-4be7-b293-df9d212c6678"],
 " points to the left. To clarify this point, here is what the motion of the \
ladder would look like if the ladder was clamped onto frictionless rails on \
the floor and wall. The dashed vertical line signifies when Che horizontal \
velocity ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "."], TraditionalForm]],ExpressionUUID->
  "95fd38f8-25f2-4c43-a329-1b70d16dadd0"],
 " reaches its maximum value, at which point ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "w"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "7eba1817-72bc-4648-a9b5-b12665077a05"],
 ". "
}], "Text",
 CellChangeTimes->{{3.623987841626153*^9, 3.6239878493325667`*^9}, {
   3.6239878844804287`*^9, 3.623987920097291*^9}, {3.623987979675796*^9, 
   3.6239880153872585`*^9}, {3.7205450944319286`*^9, 3.720545098203246*^9}, {
   3.7205451620048957`*^9, 3.720545252920356*^9}, 
   3.7209255089274683`*^9},ExpressionUUID->"c258f8dd-7c0b-490e-8504-\
01a84d9ebd6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Initial", " ", "angle", " ", "of", " ", "the", " ", "ladder", " ", "with",
     " ", "the", " ", "wall"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]0Val", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Dynamics", " ", "before", " ", "the", " ", "ladder", " ", "disconnects", 
     " ", "from", " ", "the", " ", "wall"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]0", "=", "\[Theta]0Val"}], ",", 
           RowBox[{"g", "=", "1"}], ",", 
           RowBox[{"\[Eta]", "=", 
            FractionBox["1", "3"]}], ",", 
           RowBox[{"r", "=", 
            FractionBox["1", "2"]}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
            RowBox[{"x", "[", "tt", "]"}], ",", 
            RowBox[{"y", "[", "tt", "]"}]}], "}"}], "/.", 
          RowBox[{"First", "@", 
           RowBox[{"NDSolve", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], "==", 
                FractionBox[
                 RowBox[{"g", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], 
                 RowBox[{"r", "+", 
                  RowBox[{"r", " ", "\[Eta]"}]}]]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", 
                "0"}], ",", 
               RowBox[{
                RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
                "\[Theta]0"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "''"}], "[", "tt", "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "r"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "tt", "]"}], ")"}], "2"], 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], "+", 
                 RowBox[{"r", " ", 
                  RowBox[{
                   RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"r", " ", 
                 RowBox[{"Sin", "[", "\[Theta]0", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "''"}], "[", "tt", "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "r"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "tt", "]"}], ")"}], "2"], 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], "-", 
                 RowBox[{"r", " ", 
                  RowBox[{
                   RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"r", " ", 
                 RowBox[{"Cos", "[", "\[Theta]0", "]"}]}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
               RowBox[{"x", "[", "tt", "]"}], ",", 
               RowBox[{"y", "[", "tt", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"tt", ",", "0", ",", "3.5"}], "}"}]}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Time", " ", "when", " ", "ladder", " ", "disconnects", " ", "from", " ", 
     "the", " ", "wall"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"end", "=", 
     RowBox[{"t", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "/.", 
           RowBox[{"tt", "\[Rule]", "t"}]}], "]"}], "-", 
         RowBox[{
          FractionBox["2", "3"], 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"res", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/.", 
            RowBox[{"tt", "\[Rule]", "0"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1."}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Time", " ", "when", " ", "ladder", " ", "hits", " ", "the", " ", 
     "floor"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"end2", "=", 
     RowBox[{"t", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "2"], "-", 
          RowBox[{"res", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"tt", "\[Rule]", "t"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"end", "+", "1."}]}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Plot", " ", "the", " ", "resulting", " ", "dynamics"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg1", "=", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "/@", 
        RowBox[{"Range", "@", "3"}]}], ",", 
       RowBox[{"font", "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<\[Theta][\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\""}], "}"}]}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.4"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{"res", ",", 
       RowBox[{"{", 
        RowBox[{"tt", ",", "0", ",", "end2"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"font", "[", 
          RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"font", "@", "\"\<Ladder clamped to wall and floor\>\""}]}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{"leg1", ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.25", ",", "0.73"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"end", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"end", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "end2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg2", "=", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "/@", 
        RowBox[{"Range", "@", "3"}]}], ",", 
       RowBox[{"font", "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"x\",
FontSlant->\"Italic\"], \".\"],
FontSlant->\"Italic\"]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<\!\(\*OverscriptBox[
StyleBox[\"y\",
FontSlant->\"Italic\"], \".\"]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\""}], "}"}]}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.4"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"res", ",", "tt"}], "]"}], "/.", 
         RowBox[{"tt", "\[Rule]", "t"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "end2"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"font", "[", 
          RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"font", "@", "\"\<Ladder clamped to wall and floor\>\""}]}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{"leg2", ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.25", ",", "0.75"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"end", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"end", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "end2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "2"}], "+", "0.5"}]}], "}"}]}], "}"}]}], 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"centerPlot", "@", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"plot1", ",", "plot2"}], "}"}], "}"}], ",", 
      RowBox[{"Spacings", "\[Rule]", "5"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Top"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.720506941912729*^9, 3.7205070067585893`*^9}, {
   3.720507298161392*^9, 3.7205073862080145`*^9}, {3.72050750011578*^9, 
   3.720507506864246*^9}, {3.720507565422349*^9, 3.7205075775154924`*^9}, {
   3.7205076638479953`*^9, 3.7205076648329716`*^9}, {3.720507816024358*^9, 
   3.720507967538533*^9}, 3.7205080878653965`*^9, {3.7205082606387243`*^9, 
   3.720508276886671*^9}, {3.720508459144668*^9, 3.7205084924465685`*^9}, {
   3.7205085851535363`*^9, 3.7205086151797085`*^9}, {3.720508742162691*^9, 
   3.720508749656243*^9}, {3.720508829254761*^9, 3.720508860581355*^9}, {
   3.720511662998582*^9, 3.7205118054909534`*^9}, {3.720512055609269*^9, 
   3.720512126439538*^9}, 3.720512179208992*^9, {3.7205122207594995`*^9, 
   3.7205122308187933`*^9}, {3.7205123138362646`*^9, 
   3.7205123752060723`*^9}, {3.7205124643345003`*^9, 3.7205124649017324`*^9}, 
   3.7205124983037405`*^9, {3.720512531011568*^9, 3.7205125379051867`*^9}, 
   3.720512600172121*^9, {3.720512974926083*^9, 3.7205130130459566`*^9}, {
   3.7205449461516967`*^9, 3.7205449944447937`*^9}, {3.7205452848447547`*^9, 
   3.7205453445086617`*^9}},ExpressionUUID->"55e7f470-409b-4bd1-8f20-\
0dd46a2f89c6"],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TagBox[
       GraphicsBox[{{{{}, {}, 
           TagBox[
            {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
             Opacity[1.], LineBox[CompressedData["
1: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
Dw==
              "]]},
            Annotation[#, "Charting`Private`Tag$14613#1"]& ], 
           TagBox[
            {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
             Opacity[1.], LineBox[CompressedData["
1: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
z/9dJHn2b78Wp+LTJ0SssT8IfOz/A4d/1Vg=
              "]]},
            Annotation[#, "Charting`Private`Tag$14613#2"]& ], 
           TagBox[
            {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
             Opacity[1.], LineBox[CompressedData["
1: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
H54cBho=
              "]]},
            Annotation[#, "Charting`Private`Tag$14613#3"]& ]}, {}, {}}, 
         InsetBox[
          
          TemplateBox[{
           StyleBox[
            "\"\[Theta][\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)]\"", 14, FontFamily -> "Times", StripOnInput -> False],
            StyleBox[
            "\"\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"]\\)\
[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)]\"", 14, 
             FontFamily -> "Times", StripOnInput -> False],StyleBox[
            "\"\\!\\(\\*\\nStyleBox[\\\"y\\\",\\nFontSlant->\\\"Italic\\\"]\\)\
[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)]\"", 14, 
             FontFamily -> "Times", StripOnInput -> False]},
           "LineLegend",
           DisplayFunction->(FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.4}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}],
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"Spacings", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"0.2`", ",", "0.4`"}], "}"}]}]}], "]"}]& )], 
          Scaled[{0.25, 0.73}], ImageScaled[{0.5, 0.5}],
          BaseStyle->{FontSize -> Larger},
          FormatType->StandardForm]},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{
          FormBox[
           StyleBox[
           "\"t\"", 14, FontFamily -> "Times", Italic, StripOnInput -> False],
            TraditionalForm], None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Epilog->{
          Dashing[{Small, Small}], 
          LineBox[{{1.5839675398412985`, -1}, {1.5839675398412985`, 3}}]},
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->All,
        ImageSize->250,
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox[
          "\"Ladder clamped to wall and floor\"", 14, FontFamily -> "Times", 
           StripOnInput -> False], TraditionalForm],
        PlotRange->
         NCache[{{0, 2.1127448353717044`}, {0, Rational[1, 2] Pi}}, {{
           0, 2.1127448353717044`}, {0, 1.5707963267948966`}}],
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}],
       InterpretTemplate[Legended[
         Graphics[{{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1: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
Dw==
                "]]}, "Charting`Private`Tag$14613#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1: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
z/9dJHn2b78Wp+LTJ0SssT8IfOz/A4d/1Vg=
                "]]}, "Charting`Private`Tag$14613#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwV0nc41vsbB/Cvjmwl4+coxzqK0JFomPeXPKIopcyEEieR7CQzEdmr4mRk
ZO8Q8uCx6rHKKPF8ka2ys8fv44/7uq/XH/d1ve/regvftL9yew+GYalodnfW
vb4DW4etVZJnPJOu0g3CT8n3pN+KJPDWsY/YtTwTZa1J8RpwRtxy2PWjh290
o/vMgFU3XXnX5suNXQWKtyHZXu63HrKf9Jmd2GAb2JzjeLHr1H+zJR712cPZ
SYUju/6uu09SJsYREu2Kk64gO9k142mKLqAS7ka/a/pgH33eETe4dTb46mXk
mAx52+Dgh8BgNB2ui3yYsuC7JeMJRaTnZZeQywZznt/v8wZV14iWi8iiXsW9
DrgvGFX3NOog27KFW0jG+EG+jHW+NvKWuKZbouITGEmwVz2PrFEuuscwPAAc
hsZ/aCKHkehCD4wEwoesbN9zyAI3K1/7BwfDTjy3vTqy1VzcMRXiGVCHK5rU
kAu8nCpWZELBku4NsyoyniDVbtMXDk+3LC4rIzfE+EtFxUWAeIy0viLyZP/C
/D08EjgxTQ15ZBmbjkfiMVHg9UR/Ug65PuBpVIJiLJzd6ZCVRB5vWzZ4MBYL
aVW0KHFkFp7bf10LjwPam+O0w8h6qaqZ+0aeg1txmqwQ8ih5/b1vcDwwudRM
cCEzMd55fEMuAdjYZ5I5kKUuftFUJBKAPG1OYkd2HijpWpJ5BfFh+3UZkPeu
2U5Z9yVBWH2g7Qo2CDzJdgavVZNBcLTFexH5DUW0MiIuGZo5znvNIlNZor3t
8BSgM2ZWnkDmemnPIhbzGvQlb9T1IKe9FReKV0yHgTzD0XzkF/uWruc9T4e5
vUXyWcih1uSXtYvpkD8f45qK7MqnzzWRkwGiClsZz5G1PB8zyPFnwmqfyncv
5Bl14mfbZjac5q6p00T+/irr6LBhDnT73QlXRf6y7Gy1VJoDGuyh6grItZms
QwftckHBTu62JHI0m3yXNS0POrV7vdmQ+ac/DGBmhXC36irfxx0C4uKkPVhC
C6HUrMe0DpnjbCwfd1UhpD18F1SBvPc/c30x3iJ4q5/xPAN5RmelQ6ejCCTV
h5/5ItcViVLioQQmI6ldJ5Ct3L2z5ITKYKW6pstvmwCVwUh1mQtlkHweProh
85LSBo+5lgH7Da4cW+QWjg88Yq1lMD2bK6mPfDST04/vQTlI/LwvLo78szfd
eLujAshz4ftatghwlGtlbfGugv3cB71XNgk4H09kNGRXQc68ePUU8t/YvGpd
TxVc8NIa6UfupvI8qJSsBv3Yslky8slbZqO5X6qh0hejC0RejVyojpSuAfrz
pD8OIJPd2Mrz7GuBFOvowr2B8qtl8NT614J4ntpZeuRqNtz588taUPYs2Vhc
J6AixUlmhVILvzjtpLqQi6nfcvA/6+Ao40pIBHKGYFZyV20dUAsZNRmRQ5pJ
wWsHKFAkKBI1ukoAS9TgJKsYBWTysvM/IQdddz8noESBwYIHb2uQA+Zz6c9a
UcDjUJ/vC2SfQ9zeIZUUUNgw4LmA7GT/3UnwVgOQdcpFc1cIMOb1NiWVNoKf
kF6H6TIBMrOvFoSojRC7omuogczUXB24OdwIHlc1mv9BLnNdLyrZ3wTvFBgM
dn4TwNnrwiBytwnsVsyUk5CpMbYF28LNkPA2VvjbEgFKnMZ0FeEt4BDeK6a0
SIAA+8l0ibtUUJon/1k4S0CaanaFtw8VijUytqKRJVwFW7tjkUVbP7ohnxpk
XvSqpYK9WcNfgHypiMC7eFrhx9GJ9NYZ9N+1pwMeta3ws2JaYeQXgfrez9XG
0w5tXin62z8I0ONVrTtt3glNF2VUfkwQoHZGZbzpbifkKLX804R8wkiRVd+t
E3Qo2J4UZI6Ek9ecwzqh3kNBVx+5XUBiqrC6E1zVWJ6RxwnQOsJ1QILvE4wZ
dTqFjBEAJ8fM+T9/AlXchNg/QoCkXhBGp94FjhVWd6toBFzwHbXQPtgLRkd6
Nbs/EaBNYg1rJn+FQPrfoZMNBFiUdgXfSeyHIHYRC0opAYbvrK8oahNg8odh
eUAqujdkTDznOgRKxRPDdhEEOGdJbtCPDIN9otAsozsBYY1vlY1Pj8CYtYGt
izn6pzxiUi1zFF50xu2EqBGwLuySZss5Dvv5hjzChFHfDMikfywnwDxUXUB+
hwa/bxpfevx5Eg5NyGiU9dBAXN5E5b74NPSbyHeHZ9NgbDQ3di7+B6QVh57z
d6VBEzPTdhHDL2g+RScboEyDF2stF1iNZ6DH+mVO2B4aLNV8o1v9MAuDutIn
sqsGIFks62JNxBzMXZ7i03YcAMPcKVFh+XnYXj8uuCUyAD0JVwraZueh1IPO
apTSDx/v35PSiF8Alov1TF8s+sG/sNiUSW8R/t7ArB1+foPOXA/eu0xL8Mpm
0pRm+w1iwlYoL4uW4Nf/BFy+TvXBX/0Jopx3fsPAbHeXi04fCLIvuulzLwPH
WuivkdyvULLRrqdYvQzbKvXFOdhXYLvWNXLHcQW0r6+OEbJfgBYdbGXJvwqe
spbXc272gpOyzavM7lWoezMqkGzTA76tm00VPmvw0My5K9WuG4T/5Ha/c3Qd
jHhZutXNuyCgXW/w1tA6FPdyNdWKfAZLG40zEs82YD3pAJfRcCcwOliQFNQ3
Qc7SU4ra2Q5KcnT902ubUJnekaJVSIWpAb1b1qlb4J344cpyaAuYzLUnHTPZ
hmO4LIhMNwBparOdzLAD01quViladVCXWBCwkL8DL3x3nhQyV4GfGcm9/ASG
K+ryP12yLAazmyGZ/YEYXuBmne/4ORVKU4a7DYIw/NmFM+Wz/qnAMnyKrjsY
w0s0haimp1OhzGzYqDUUwxe1maXY/3sNbKanWN9HY7iY3PTDd5YpUGEwZJeY
hOGiIXSmCeOvgFNHTtaiHMP9fy14irDGwL8hQWa0Cgy//Zi/0M02Gt5TiWdG
lRjObBcbV9gWBf+eDxq9/B7DOY7UV7SFRwL5HBGrRsHwvf6NZLvDYWCr9nT1
7w4Mf6J1pen1EX+o96WJJndieLQ73/FPY37AW3fiMv9nDOfhle5pSfOFeqBl
cfdgeIzrSqy4uhfwKZ8w2duP8ry85Kci5wz3HgUG+g5gOKdPX+3JAgdoqBoo
2aJh+Ob3nBY/vXtwXyGQbXkIw483hOcdU7SEJveBM47fMfzpu/9F+5vcgEPv
ZG7PjGD4GcmDBn/AVbi/GhBpM4bhPkvSukWq6tB0euD9+DiGYz7XT/oZRqj8
H54cBho=
                "]]}, "Charting`Private`Tag$14613#3"]}}, {}, {}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
           GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {
             Style["t", 14, FontFamily -> "Times", Italic], None}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
             Dashing[{Small, Small}], 
             Line[{{1.5839675398412985`, -1}, {1.5839675398412985`, 3}}]}, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 250, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           Style[
            "Ladder clamped to wall and floor", 14, FontFamily -> "Times"], 
           PlotRange -> {{0, 2.1127448353717044`}, {0, Rational[1, 2] Pi}}, 
           PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           LineLegend[{
             RGBColor[0.368417, 0.506779, 0.709798], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             RGBColor[0.560181, 0.691569, 0.194885]}, {
             Style[
             "\[Theta][\!\(\*\nStyleBox[\"t\",\nFontSlant->\"Italic\"]\)]", 
              14, FontFamily -> "Times"], 
             Style[
             "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)[\!\(\*\n\
StyleBox[\"t\",\nFontSlant->\"Italic\"]\)]", 14, FontFamily -> "Times"], 
             Style[
             "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)[\!\(\*\n\
StyleBox[\"t\",\nFontSlant->\"Italic\"]\)]", 14, FontFamily -> "Times"]}, 
            LabelStyle -> {}, LegendLayout -> "Column", 
            Spacings -> {0.2, 0.4}]], 
          Scaled[{{0.25, 0.73}, {0.5, 0.5}}], Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True], 
      TagBox[
       GraphicsBox[{{{{}, {}, 
           TagBox[
            {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
             Opacity[1.], LineBox[CompressedData["
1:eJwVynk41HkAx/GvntK4toe1SWWt0ibaDtRg4vNjTXqWtMbKMU85akiFZKtV
bXJfZSvVTjx0qR0eciRHNSGGkpU1tGKmTCY5CpNrDrL2j8/z+eP9MgmKYHEW
EEJ2zu//zw9/rTu7JsSBkLDMNLqHw0cLPnOSwURv6KPzzokbYUurVzQyvNDV
rHxGSwQCpgTCYgYHpXm+VycTdiEqrInKYxzDw0wDgTTBH7NmO07kMhJR9kvC
Y1piBJ4mpVzKZlxBeN/WA4WJMch7YPZdFuMOSjdfYGxO+QPB0TH51t9VQBB+
75+7UTdQc0K7siiiFureL6+PnuHBzyBmD7NcgI/x2tb3bUrwrc6WO+aHXqDY
r7ayIbMcngaOdfSANtxr2OiyrKwKFp6pRM1ZCK3AxdOP7PhwjZUGui1/BRkZ
eieU1MKNqZXRVNMFTSHvortmPQLLhWmhuT1IjNCWLIoQwKc6hMVwewOWjdsw
q7oJrj6Lc12O9yJ+2Js1rN6MX/MtVAv7JKj+WmIo5rYgQ/DA3o/eB4okekTq
voRl5YUBJ54Ukzbp7TeH2qA0OZZ3WK8fOmX2bhtZ7SjzrmFu2P8BdMNRDbMi
ISaD/HbFtw8giC1YamzVCTNbtsMRsyE483M7mgpf4b208MpY1jCkYzsrPnh1
oVGD9qVU/ROMNda9DqF1g6t45qrlN4LbtnpceVEPJp50q8mfj8Ih+PHQk1Qx
bqzNd39yYQw0RfrNUz5v4VM4aGpiK4PMhLPKktuLzmxW8d+jMlzlTfKktyRo
PhK+fnvWZyz55tL37nffIaGkbA/NcxwFWdy4Yy/60FZ4yuAQbQIy4ziLoWkp
LmdM118rnYB+z+na9yv6YdSTbaoXOokYZ1/TVs4HGOuMn9itPwVZd8ZI7t0B
3Fe1ejIeTyF41zX1s58Goe0l7As9Og1P2WU6Z+8wxJlpwftXyjFXxZava/iI
KPuDObwOOSxaDEw0vEcQ2zLTWHVWga4D2c+Pi0dhskw/OnSdEkYW1zit5WNI
avV8u69XiZ9TBnwMM2XYf3C7jXm6Ck67ebpRoZ+xODKQaec8g+d2ZyY0fMex
zVqtZ0gxg017f29gu05gUOS5L+T2LDQdVzsGWU2CPdZ6/Qf2F1hEGuXMWE+B
OTjTWqM+h2emm4zPm0+jLrc46fO9OYzfql8WYCxHnD8zutKSUKnlRadL1ivg
H3SO15NMKO7CDv0z5kqU35R0eKcSiihi7UY3KKEp2arWkUaogk7uyQArJSr8
Jb4t5+f9aOSOH7cpob1nqxY/k1B0/qslmu5KVHn3huVeJ9TgXMFEdqQSejut
rQIrCaV7Uu7YWqXEgXOp/uIqQu3zWz7iyFeC/+JNuu9DQuWwbv/1oG6+/5Qq
9eATql5Ad8xpVqLG5c0Vp3pCsZ8WLwgTKXHYKUW++iWhOoycAr4iKjyNFZve
aCPUGN+4JG6hCgZ1lh4r2wllVvSn+jRtvkOcr99JKO+KLMFbXRUM7S3Zi3oI
tcSBH1O6WoXw08nJsSJCicUO8jVmKjQ8Et2fFROqu0MUlbVehSN2ydpTvYTS
WVpwNH6LCo3RIpuj7wjFGZiamLZVYUX1Zs5IH6HWrsr+7bDDvJcnXTz4nlDF
A6azvU7zni7i9/cT6l+TVXFeLir8B5sXX6k=
              "]]},
            Annotation[#, "Charting`Private`Tag$14675#1"]& ], 
           TagBox[
            {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
             Opacity[1.], LineBox[CompressedData["
1:eJwV1nk8Fd8bB/CrFEVkp4UkJfqqhCzlcxEJSSiqb4WyhlAqLYpEyFI/Wvha
0oaEZEkbWZP1mkkltMiaFuu9c+/Fb/prXu/XmZlz5jnneeZRdj1q5zaLwWBI
CDAYf6/Zfh8lplQ9jBjrXoddymMaDWu8NJswNMMH6eF2r2hF6AtXUbWGu1Co
IbFJM1oTzpM1RL6hG9jjMZXy0UY45lvHvGsYhOtDXu7C0TaYUrM4mWZ4CUdU
u5qWRx9AZcTlaymGSdi0pD3ydrQf7harLUs2vIfJZ9UnblwJgXvw+WztZSXg
5ZnrxXTHo/ykaOmjoxWwF1nko116A3vlzu83K6pBxC2pvbKH06G4QOee+pEG
2BcKfsv6fgf2csavNzq3IsTs1a2Rjw+gYR/FENhCgGewdyppfS6sQr+7WC9q
h3l6upWXSQGszUTi6so/wO6X3VSbTSFciohor7RPyPx2dWjV1SI4lXnYGVp3
g9X6s4tTUgIrJ6G0rSe+oFrezG7801Mcz9bgCfZ8xe2MqOAThs8RV1O8ee/G
HkQb3H0+c+4ltEoTBkyyvkPqtNWE5XQ5uMpBd30k+6AmGrrSmPkahY7lZpqH
+/Hm7D+pHQGVmHDdu+Ni2wCiR05T/VVVUNPfZ+SvNoSvB1qy/ObUoPd7btKf
5B/w4lvv5XrUonae8PTjuT/xQFvs3+z6Otyk3liJ7P2Fp+Gnmd1y9Rh/1SHA
qf+NE5fK1pVfeouMVdk2rxL+4Ni4RZlzVwOccgdXKOuPoCSydkeGZhPepdjl
N/0egfu20dLG5Ga89fdbY548ipyGlPGHQy0ILyjcL2w/hmNtV98nPGhFa+4Z
uSPC4/DRF1SssmUhMY5ddevxOJ4Gltru62dh6aeUFZJeEwg/k+CmcaENSgvG
Tu6WnsQ7zbFzqrMIdJx1FZmUncR+7YyyuYIEEodZaUkKk1jh6yXcP4eAcGNB
Dak4ibFG3qe78wiMRvtJ2a+ehOD9ZFMZCQLVwkN5O4wmkfBe1OWNEgEvwa+9
Fp6TsIwXSQzcROAJr9ne8MUkdNpNdHMCCcgvEBeTLp/EI4aBme9xAiGKO94M
v55ExxG7Gc0TBCyMWzal1U1io46ef14wge6IFlUBYhJpvCaV1AsE5ku2smsH
J2G8NKhOL46AsxorxU6OjXrhRBmXLAK1+hK7NRax0axNWrGzCWhY7VwouJSN
IatQ4SsPCUz6ssKLl7Nx7oPfwsd5BGKesHzlNdloMPDVHywiUGLUhu4tbATs
r/i28DUB0V1Ej1cgG2qZxUPaHwgIaXU3SQSxUTcW+Cz0I4FZ4oOlZSfZsEn6
rNjUQYB6Mx0z7xz9vOfp2we7CPRtUtfOjmSjf4fv0WPfCFSsCA0f+I+NsYeL
DHcNEzg+rqnqUcdGUqG7DXeawFGWvrj4W3p8VvV9OQYJ77wtVEkjG2EyUoEb
BEi4eO5tmtvGRl6I7n732SRsOi8F3e+k12On5VEmREKturOmd4SNVxX/OEgt
JNH1v2j3w0s44DcUlcQpkQiXdD9ppsSBo3U0GbOMhPpV48srl3PwMFZzIkKZ
xIk4TvbAKg4Cz3zQO6lCYmGU+0+fDRycea+SjlUkTEJMjgdZcpAm/DreT5PE
AH/ppd3bOTgx96aK1VoS8WeopI22HKhXLshUXUei81RBKbWLg2WLfzqR60kE
HVPknXPh4Nvb3nB5HRJZntzQiFMczOOkXDIwpL+n/901jzMcLB4eF5+gPeH2
+I5FCAeM6lafR5vo+Q951swP5+C0du8NOSMSn/a3C8fHc2B8RfIyi0kirPOx
gv81DkRPLj5z2piOx75Y9Z1JHJzkb9BWNiFx3GmLtVQKBzPLzUc9TEmI2RfG
37jPgQbrfwEdZiSKWLEZp7I52NVf4xlgTmKvrdfjPbkcKL+wVZi7lcSD7cuI
xYUcSK4QyFCzIMG0iJPNeMlBx/5LsnaWJI5t9k7NIjlol/U00LEhURC5sNvp
PQcSV+Jj02kPs0oU53VwcE5iqEloB4nD7rMzvD5zkGRbvbCNtkP8f5nqQxwQ
NUWntu8kkfDRpKdjmAO5UGXxB7QbVQZVYn5zIBxUHTlN2+ypzr0f4xzU71Va
9MCOhO7X5ge5MxysfOSf2m1PIlAjaODfWRS0z1QqrXIgkRe0ePWCORQKgpKC
fWmvmu+Z4zufQkOHTd4Y7cMOYj+WLqDgmXkmYsMuEhlpRRrN4hR8bEvWBdCW
3yDwSFOGQrj0p4le2g7nHvzslqOQ6DNXbOluer112zXjF1GYvbZydCftef8m
5/9WotAe4L6kmLb5feaf9OX0ehRiDvTQDvvTt85WlcLAqace4o4kuOEbCgvU
KSjmpNU709Zt+Tjq/A+F1Mg4pQjagQoXNkiso+CqM6GbTTvv0Mrjr7Uo8DJ8
xN7S/vGosShAh16PdNzdAdpqnMAJZT0KHN1RtqAT/X0mCrptBvS4yHohJdoZ
V8pPhG2mcHz0a6su7c52t1ItJgWTrBR7a9ryyqKcbyYULM3HYw/SdjhSqPc/
MwqnTEJD/GknFDsFm1pQ2HX0vcp52k0z02VjlhTE+NFnY2jPt7zHvbOdgu/x
tZFJtM0TrQwdbCl0VjiapNIO6x45I2hPwX3l9dxM2q/Ubr4o2kWh2Pxs9T3a
3ECjqcNOFKSWpVy+T1v35ffNMvsoeC+4yL5LO1AoJqRmP4UttVXit2nn71xf
HuRM4e2B4ZZk2sMp72dUD1Go3Rqje422Wt85Zrsbhds2miaRf+OxbkVohCcF
t1TXkeC/8Tj99rXuEQplz4pMvP/Go9p/Vr8vvT9RBdpOf+MhLmd6w5/CR8uv
NaZ/47Hn5cWtxyjIJrPG1/yNx51D1ewgCjX+IhVStBt/zpuTdYrC4xXyKzn0
fgjrFZg5naFg7HlBtYN2aCO/9ukFCiIbLw5dp12wuiZq30UK9aGz/AJpd0fE
Wk9foqD7XS7VirahsWKbaQwFx1cBnEn6/Hin9SX2xVJoVfmhXE/7Ji/PMSqB
wvmzh0du0p4oRldzEoVq92dn19NeISWcEXCTwn+adTpc+vza+be6SqdQMNyt
HV9BO1/dZWBPBoWpoqil5rS90sPGvufQ53dz0AVtOj9u8i1LIh9RGDwlIjNE
51ftHqlg9QIKWYuEkUpbRfru9NFiCkqGIdv5dD52Xa6ZxyunsO+E9ZpUOl9F
+2IbUysp3GEKbQFtA9Pd8cwaen/WFPZ225K4MdUnHfGWzg8v2deytHcGCi+T
eEdhgX5JviddPy60tH578p5C4IFrvya30+d/za17uzsohJiyHobRFulfrfHf
ZwqzKrNTrlmTqNlnpbtqiMLkdUm1RLo+jT+VouqH6XiZOawXo71ctvO5z28K
LXB4dGkbifOtPsaF4xSiBUrYPnR90zeLs948Q0F51lTuEroeembuFv8iwIVl
+1qVMLpeXp9RbAsT5KLGz43Ru4XEWFm+45t5XHzZMT6YSdfXR5osV3tpLnKc
rG1n6PqsLC8d7LWai/Lvkor6dH3nyj5yNVvDhcwS/cuHDEiQMubWymu5OHa3
py5an8RlqVNKH7W5eJmyvKJlI4lfYp01FkwuEjtKDmzQJvFszl1JNUcuTsiL
3D+4hkSi4Gb+7L1clHnbhe3WIOE7u733879cBHIcZSzVSSwTEC674crFvtN6
TqvUSETyjxwU8uPij87+xc/o/53D2IbcvnAutok2vTNaREJztDGpMpKLqUFC
i6FAQmjE7XxaNJf+P3SvfCVHz//rht3uBC766iYa1srQ7x/icWpSuOilWlmD
4iR+fqkyu1fIRZWt9rxSQRIRzfafD33hwj3ml3DWD7ofuVnKEevhomm1uLnM
EAG3Q4sln/VyEf7ynt35AQJbON+2LPzBhfbDdGJbL91vLA/MeTHBRczKAfOn
3XT/FJQQJCPCg2dETAjVSiBoSZNInQ4PN5Y2Cws8IfC9b51qoB4P9y//GhJ8
TMDhcaLRUkMeNExz3ObkE9Ay/zfgGJOHXq35ivwcAn+O/mhXsuJhpZqMd0Um
AZ+qeZmnnHmYKLf8mXmVwGFvcz31GB4231JIqfKh528/fUosjoepgmp1FW8C
t0zyn44m8HAp9/jpEA8CzYvk9Z9f5+HDek9bNVcCeg2D+taZPJS+P5Zo4Uhg
wZpYQ78yHuwcPvuVMen+6ydhVNjPQ5cjY431QgKte4TPXx/iwbkfukoLCPyo
2VR++icPHqsCS37S/eiytHswHeMh5kuO+LnZBKJtTjLJaR7eBEf0HZ5sw4H8
RSaTMny0iJevd/zUBqEAFzODLXyUu/a5l9xug/SfUiGJrXxcUTE8OCetDcuO
ir3t38bHnx5W/o7kNhj4PrdJ2kGPz9y3bb/WBj8vGac/e/m4I3Jk58OLbSBd
6r3vB/DRPNzvGHi4DZl26xMk0/kIlzUVdlvehnxWpN3gbT4CvdTKFim24YVt
t3TFXT4qZ8mdbVBowzubmFu+OXx4kFlrFSXaIGzVm/mmmI/beQrSl2dYOGp6
qzikkY+r14JZRz6xsElb4NMQxUfdRV8P13gWPocsb0rg85Ht4lf+NpqFsHrT
ct0ZPrp2O8dqRrBQdyDiTpjgFCRPfrg4cJYFuygRn0XiU3jS+CJL1ZsFj26Z
qW0rpiAq2L2lypSFa5fVlbJtpvBjz6rH58daMdhpf8jjzhRUEq8o3tjSCt16
s7Pm96fg+PVl+U6jVoQXb0xSzZ5Cbw4ROlevFcviFtf15E0hR+rXwQMarXBC
j7rzsymUVu3ZWifRitrbgaNOrCks8M1pYz9rQab71VDLmSlY3SpprfzSjH1/
mtP/2TcN3Vnf3qwTaoJRVszAp/3TuMFXEE3lNGK5s8X6aOdpLPGXXTo92Iih
lteVfW7T0Pqo/V9aYyNO5Rf1pvtP47fLlRdOVxtx3S9ZQzJiGnI7NzvkyTei
dditdLJgGjPjcbpVig0wG+Q3l8+dwfWkrH9aherxOi0/YjRvBjnbGiJrXKoR
dtAsuFSLwbw632h0ycgLHHS9kvUpksGsNrVXtNYpQNHtr6RjFIMpm6vPNB7J
x/yvugJkNH3/vtye+yfzUXLw657GWAazbmzTjwcX8yC6X1fk5f8YzC8fF2+8
cDMXTx2/+KalM5hVgqsfhhdnQXK79gaXUgZTv8Wts+ZFBjyvRB3sespgfue9
0OQaZOBlQ3fMnmcMpoQJ9+a7gHR4WkZ93/mSwTTTVBoW8ExF+dbuJJMqBpMt
Nldrls0t+Jhc5qi0MJgVVFx1MuMqKkO7VmS0MphHgt3M5AbjIfdaa+eSNgbz
456RksGWWFSiK1v6HYPpF3E03zk5CgqbtfbN+cRgHhYSnr6+PBR+ZyMjQzsZ
zBPuxdX82SGoft75ZKqLwTzLtld4VBEMf4NI0ckvDOZoj0he4YYA1AZ36gV+
YzAtBCy0FpJeWFy23u1XD4Mp+sqtMWSTC/w5EVe9exnMP9Yv6lyNd6J2Y+fL
vj4Gk1ExHc6fm2T0fzXViZY=
              "]]},
            Annotation[#, "Charting`Private`Tag$14675#2"]& ], 
           TagBox[
            {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
             Opacity[1.], LineBox[CompressedData["
1:eJwVj3s01HkYxr90GRraU0uSFBsb0RYrxcT7S406izrRRDTJZcglSbVWdVZa
t0Fy3VW2iUXHlJKomdR4Qy6VqIY2GRnGJTNFKtcYa/94zueP53POcx5D32Ou
HFVCiMtc/ic/rH3JjHGgPTEQNNepG1Z9MBMxRxlM2DjUpn3GYrbKRq12sp7B
glUgPu1p8R0eHqsTlzI4wH1wLPqkxWo8cbSBKmScgkplo9TfYgPOmOyK5DHi
QLNoQKRhCVgTn5iRy8gGacnBxHyrPVh418TgMqMItl3QVObbe2NAVDTfyuAe
5FWj68VD4YiRGoKbxx6BqKXqs0Pib+ipE81mVtQB3zFV97bfOVylualoXcgz
ULeP2HiTHoduOtuqNx9+AWVpN/rI31w0c+MSlR1iuDW+Q0OlPRWdYnp9nFe8
BlGoVDholoHOTHpqA74BE+2I82GKLPSpECcF8TpAd3r8yuIfctDjfqArw/kd
PJ4p2Kbjm4tOHjTezl+lsDXW2+jfNh6e5Jt9my/rhoDSQx0up/Ixte6unedm
GRhdS3aScQvQUpD23qG4FwrEI0q26jWcMjxVGLq0H1of/QmZN4vxjjsyf/If
AP2GHoOMIzdw1Ndzzx+v3oNDzks3Lv8Wmth42YebyKGl0PSRIynDvt6S7E+X
FRBqXKFlobyD9epqyrKFH4F8LHfs/vEu5kw2OtE9hwBz+p9nsQX4teqtysST
YWjcd337cpVKzFvL312V9glsV6cHh9x7iB4lg0aGNiMg0F0wj8ZDbMt1LX0+
PAKprMGmDdxqfBoeZu54+TPwhN9X2rnUYuztO2w1ty/gxz9YcJVThy9KzuiE
qH0FQ0mATsO1BsxKHa+9VPYV3FM+NJ0ceYL6HblGS4NGwdpZO7CrqAlXa36J
3K81BikcQxe6fwuWf2t2Yzwcg3p2U3GJ8UvUYIllQRHjkGZ81npR+yvszEwK
8F85AeFs3X88UlvxhF3wleLWCXhO7zfXTn6NMU3T9cJzk+DkYps/Ev8GDZdr
RQWZToFEdVx1/19vMb7ZrctPOgUbWVti00cl6B/suGVd8jeIJmk2vF1dSDvu
w7TdMQ09aqorlo1KcauVSod8chry6QKtSaceHJS4+QUWzIDskjBOPUuGXp+a
r673UsK5tcXpkuleZA5ON+PCWTBWL5Xo7O7Hal5p/OdbszC5KXuWljWA572Z
UQJLQg3YNl58NvgevX1TijsSCJXXYZ3ls0yOFfndre5cQl1K0KsM0ZPjom5r
ldYkQtGSaqQnDOR4z7v7QNMFQg3vrjH6fZ0cNdjWdFEmoUrEHOvT9nIUukuP
8q4SiiXfM6YZIMelLlY/+wgINUZTJl8sl+ORFK53p5BQ81nLTfcJ5Sh69i75
QOXcvlNL0DLRXP8Lt3eviFBlieynmfVyxJ3vsh1qCXVd30hwvF2OoQ6JE2ta
CBVDgxSBUo41MZ1GeS8IJeXkTu6bp0Cdasu9K18RKla3oH2YpsAa6ORrtRHK
9A2zT3+JAnXtLL0WdBCKUzMk9lyjwLCzCQkxEkKtZwqjZWsV+PiBpHymk1A3
9NhxQeYKDLdN0BiTEmrq7Nv0o5sUWB8l2RLRQ6jF5nEZChsF6t234AzJ5v5G
lkoD7Of8ifj04D5C5Qi3R3U5zPmbJaL+fkLxm8wPsHYq8D91Znrn
              "]]},
            Annotation[#, "Charting`Private`Tag$14675#3"]& ]}, {}, {}}, 
         InsetBox[
          
          TemplateBox[{
           StyleBox[
            "\"\\!\\(\\*OverscriptBox[\\(\[Theta]\\), \
\\(.\\)]\\)[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)]\"\
", 14, FontFamily -> "Times", StripOnInput -> False],StyleBox[
            "\"\\!\\(\\*\\nStyleBox[OverscriptBox[\\n  \
StyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"], \\\".\\\"],\\nFontSlant->\\\
\"Italic\\\"]\\)[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\
\\)]\"", 14, FontFamily -> "Times", StripOnInput -> False],StyleBox[
            "\"\\!\\(\\*OverscriptBox[\\n StyleBox[\\\"y\\\",\\nFontSlant->\\\
\"Italic\\\"], \
\\\".\\\"]\\)[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)]\
\"", 14, FontFamily -> "Times", StripOnInput -> False]},
           "LineLegend",
           DisplayFunction->(FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.4}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}],
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"Spacings", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"0.2`", ",", "0.4`"}], "}"}]}]}], "]"}]& )], 
          Scaled[{0.25, 0.75}], ImageScaled[{0.5, 0.5}],
          BaseStyle->{FontSize -> Larger},
          FormatType->StandardForm]},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{
          FormBox[
           StyleBox[
           "\"t\"", 14, FontFamily -> "Times", Italic, StripOnInput -> False],
            TraditionalForm], None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Epilog->{
          Dashing[{Small, Small}], 
          LineBox[{{1.5839675398412985`, -1}, {1.5839675398412985`, 3}}]},
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->All,
        ImageSize->250,
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox[
          "\"Ladder clamped to wall and floor\"", 14, FontFamily -> "Times", 
           StripOnInput -> False], TraditionalForm],
        PlotRange->{{0, 2.1127448353717044`}, {-1, 2.0707963267948966`}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}],
       InterpretTemplate[Legended[
         Graphics[{{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwVynk41HkAx/GvntK4toe1SWWt0ibaDtRg4vNjTXqWtMbKMU85akiFZKtV
bXJfZSvVTjx0qR0eciRHNSGGkpU1tGKmTCY5CpNrDrL2j8/z+eP9MgmKYHEW
EEJ2zu//zw9/rTu7JsSBkLDMNLqHw0cLPnOSwURv6KPzzokbYUurVzQyvNDV
rHxGSwQCpgTCYgYHpXm+VycTdiEqrInKYxzDw0wDgTTBH7NmO07kMhJR9kvC
Y1piBJ4mpVzKZlxBeN/WA4WJMch7YPZdFuMOSjdfYGxO+QPB0TH51t9VQBB+
75+7UTdQc0K7siiiFureL6+PnuHBzyBmD7NcgI/x2tb3bUrwrc6WO+aHXqDY
r7ayIbMcngaOdfSANtxr2OiyrKwKFp6pRM1ZCK3AxdOP7PhwjZUGui1/BRkZ
eieU1MKNqZXRVNMFTSHvortmPQLLhWmhuT1IjNCWLIoQwKc6hMVwewOWjdsw
q7oJrj6Lc12O9yJ+2Js1rN6MX/MtVAv7JKj+WmIo5rYgQ/DA3o/eB4okekTq
voRl5YUBJ54Ukzbp7TeH2qA0OZZ3WK8fOmX2bhtZ7SjzrmFu2P8BdMNRDbMi
ISaD/HbFtw8giC1YamzVCTNbtsMRsyE483M7mgpf4b208MpY1jCkYzsrPnh1
oVGD9qVU/ROMNda9DqF1g6t45qrlN4LbtnpceVEPJp50q8mfj8Ih+PHQk1Qx
bqzNd39yYQw0RfrNUz5v4VM4aGpiK4PMhLPKktuLzmxW8d+jMlzlTfKktyRo
PhK+fnvWZyz55tL37nffIaGkbA/NcxwFWdy4Yy/60FZ4yuAQbQIy4ziLoWkp
LmdM118rnYB+z+na9yv6YdSTbaoXOokYZ1/TVs4HGOuMn9itPwVZd8ZI7t0B
3Fe1ejIeTyF41zX1s58Goe0l7As9Og1P2WU6Z+8wxJlpwftXyjFXxZava/iI
KPuDObwOOSxaDEw0vEcQ2zLTWHVWga4D2c+Pi0dhskw/OnSdEkYW1zit5WNI
avV8u69XiZ9TBnwMM2XYf3C7jXm6Ck67ebpRoZ+xODKQaec8g+d2ZyY0fMex
zVqtZ0gxg017f29gu05gUOS5L+T2LDQdVzsGWU2CPdZ6/Qf2F1hEGuXMWE+B
OTjTWqM+h2emm4zPm0+jLrc46fO9OYzfql8WYCxHnD8zutKSUKnlRadL1ivg
H3SO15NMKO7CDv0z5kqU35R0eKcSiihi7UY3KKEp2arWkUaogk7uyQArJSr8
Jb4t5+f9aOSOH7cpob1nqxY/k1B0/qslmu5KVHn3huVeJ9TgXMFEdqQSejut
rQIrCaV7Uu7YWqXEgXOp/uIqQu3zWz7iyFeC/+JNuu9DQuWwbv/1oG6+/5Qq
9eATql5Ad8xpVqLG5c0Vp3pCsZ8WLwgTKXHYKUW++iWhOoycAr4iKjyNFZve
aCPUGN+4JG6hCgZ1lh4r2wllVvSn+jRtvkOcr99JKO+KLMFbXRUM7S3Zi3oI
tcSBH1O6WoXw08nJsSJCicUO8jVmKjQ8Et2fFROqu0MUlbVehSN2ydpTvYTS
WVpwNH6LCo3RIpuj7wjFGZiamLZVYUX1Zs5IH6HWrsr+7bDDvJcnXTz4nlDF
A6azvU7zni7i9/cT6l+TVXFeLir8B5sXX6k=
                "]]}, "Charting`Private`Tag$14675#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1: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
vj4Gk1ExHc6fm2T0fzXViZY=
                "]]}, "Charting`Private`Tag$14675#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJwVj3s01HkYxr90GRraU0uSFBsb0RYrxcT7S406izrRRDTJZcglSbVWdVZa
t0Fy3VW2iUXHlJKomdR4Qy6VqIY2GRnGJTNFKtcYa/94zueP53POcx5D32Ou
HFVCiMtc/ic/rH3JjHGgPTEQNNepG1Z9MBMxRxlM2DjUpn3GYrbKRq12sp7B
glUgPu1p8R0eHqsTlzI4wH1wLPqkxWo8cbSBKmScgkplo9TfYgPOmOyK5DHi
QLNoQKRhCVgTn5iRy8gGacnBxHyrPVh418TgMqMItl3QVObbe2NAVDTfyuAe
5FWj68VD4YiRGoKbxx6BqKXqs0Pib+ipE81mVtQB3zFV97bfOVylualoXcgz
ULeP2HiTHoduOtuqNx9+AWVpN/rI31w0c+MSlR1iuDW+Q0OlPRWdYnp9nFe8
BlGoVDholoHOTHpqA74BE+2I82GKLPSpECcF8TpAd3r8yuIfctDjfqArw/kd
PJ4p2Kbjm4tOHjTezl+lsDXW2+jfNh6e5Jt9my/rhoDSQx0up/Ixte6unedm
GRhdS3aScQvQUpD23qG4FwrEI0q26jWcMjxVGLq0H1of/QmZN4vxjjsyf/If
AP2GHoOMIzdw1Ndzzx+v3oNDzks3Lv8Wmth42YebyKGl0PSRIynDvt6S7E+X
FRBqXKFlobyD9epqyrKFH4F8LHfs/vEu5kw2OtE9hwBz+p9nsQX4teqtysST
YWjcd337cpVKzFvL312V9glsV6cHh9x7iB4lg0aGNiMg0F0wj8ZDbMt1LX0+
PAKprMGmDdxqfBoeZu54+TPwhN9X2rnUYuztO2w1ty/gxz9YcJVThy9KzuiE
qH0FQ0mATsO1BsxKHa+9VPYV3FM+NJ0ceYL6HblGS4NGwdpZO7CrqAlXa36J
3K81BikcQxe6fwuWf2t2Yzwcg3p2U3GJ8UvUYIllQRHjkGZ81npR+yvszEwK
8F85AeFs3X88UlvxhF3wleLWCXhO7zfXTn6NMU3T9cJzk+DkYps/Ev8GDZdr
RQWZToFEdVx1/19vMb7ZrctPOgUbWVti00cl6B/suGVd8jeIJmk2vF1dSDvu
w7TdMQ09aqorlo1KcauVSod8chry6QKtSaceHJS4+QUWzIDskjBOPUuGXp+a
r673UsK5tcXpkuleZA5ON+PCWTBWL5Xo7O7Hal5p/OdbszC5KXuWljWA572Z
UQJLQg3YNl58NvgevX1TijsSCJXXYZ3ls0yOFfndre5cQl1K0KsM0ZPjom5r
ldYkQtGSaqQnDOR4z7v7QNMFQg3vrjH6fZ0cNdjWdFEmoUrEHOvT9nIUukuP
8q4SiiXfM6YZIMelLlY/+wgINUZTJl8sl+ORFK53p5BQ81nLTfcJ5Sh69i75
QOXcvlNL0DLRXP8Lt3eviFBlieynmfVyxJ3vsh1qCXVd30hwvF2OoQ6JE2ta
CBVDgxSBUo41MZ1GeS8IJeXkTu6bp0Cdasu9K18RKla3oH2YpsAa6ORrtRHK
9A2zT3+JAnXtLL0WdBCKUzMk9lyjwLCzCQkxEkKtZwqjZWsV+PiBpHymk1A3
9NhxQeYKDLdN0BiTEmrq7Nv0o5sUWB8l2RLRQ6jF5nEZChsF6t234AzJ5v5G
lkoD7Of8ifj04D5C5Qi3R3U5zPmbJaL+fkLxm8wPsHYq8D91Znrn
                "]]}, "Charting`Private`Tag$14675#3"]}}, {}, {}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
           GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {
             Style["t", 14, FontFamily -> "Times", Italic], None}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
             Dashing[{Small, Small}], 
             Line[{{1.5839675398412985`, -1}, {1.5839675398412985`, 3}}]}, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 250, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           Style["Ladder clamped to wall and floor", 14, FontFamily -> 
             "Times"], 
           PlotRange -> {{0, 2.1127448353717044`}, {-1, 2.0707963267948966`}},
            PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           LineLegend[{
             RGBColor[0.368417, 0.506779, 0.709798], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             RGBColor[0.560181, 0.691569, 0.194885]}, {
             Style[
             "\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)[\!\(\*\nStyleBox[\"t\
\",\nFontSlant->\"Italic\"]\)]", 14, FontFamily -> "Times"], 
             Style[
             "\!\(\*\nStyleBox[OverscriptBox[\n  StyleBox[\"x\",\nFontSlant->\
\"Italic\"], \".\"],\nFontSlant->\"Italic\"]\)[\!\(\*\nStyleBox[\"t\",\n\
FontSlant->\"Italic\"]\)]", 14, FontFamily -> "Times"], 
             Style[
             "\!\(\*OverscriptBox[\n StyleBox[\"y\",\nFontSlant->\"Italic\"], \
\".\"]\)[\!\(\*\nStyleBox[\"t\",\nFontSlant->\"Italic\"]\)]", 14, FontFamily -> 
              "Times"]}, LabelStyle -> {}, LegendLayout -> "Column", 
            Spacings -> {0.2, 0.4}]], 
          Scaled[{{0.25, 0.75}, {0.5, 0.5}}], Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Rows" -> {{Top}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{5}}}],
   "Grid"],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{
  3.7205449977452855`*^9, {3.7205452884155364`*^9, 3.7205453448021326`*^9}, 
   3.7205455915619755`*^9},ExpressionUUID->"7c631d4b-8fd4-4b0a-8811-\
dfc92b03c1fc"]
}, {2}]],

Cell[TextData[{
 "Thus, our goal is to find the time at which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "x"], "=", 
    OverscriptBox["x", "."]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "18df59a9-01de-45cc-9481-a7fc6b5bc6ec"],
 " is maximized, assuming that the ladder remains clamped to the floor and \
wall, which we do by taking the time derivative ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", 
     SubscriptBox["v", "x"]}], 
    RowBox[{"\[DifferentialD]", "t"}]], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6029424f-01aa-423b-9e2b-15471ffb5fdf"],
 " and setting it equal to zero. However, a very convenient trick that nearly \
always works in such situations is to notice that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "x"], TraditionalForm]],ExpressionUUID->
  "db76d168-ad84-460e-9a3d-b9ee6463089d"],
 " is maximized when ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["v", "x", "2"], TraditionalForm]],ExpressionUUID->
  "954fd9cb-a79c-4435-89fe-e9ceaaf8dcf4"],
 " is maximized (since ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "x"], TraditionalForm]],ExpressionUUID->
  "29bef2a2-e609-4e52-9ddd-25fe4a8e4924"],
 " is never negative), but this squaring removes the nasty square roots and \
makes the computation significantly easier. We can also ignore all of the \
extraneous terms that do not involve \[Theta]. Therefore, "
}], "Text",
 CellChangeTimes->{{3.623987841626153*^9, 3.6239878493325667`*^9}, {
  3.6239878844804287`*^9, 3.623987920097291*^9}, {3.623987979675796*^9, 
  3.6239880153872585`*^9}, {3.720545600375335*^9, 
  3.7205456518727913`*^9}},ExpressionUUID->"c6ea90a7-3f6c-4742-9e46-\
e42726438b62"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         FractionBox[
          RowBox[{"\[DifferentialD]", 
           SubsuperscriptBox["v", "x", "2"]}], 
          RowBox[{"\[DifferentialD]", "\[Theta]"}]], "\[Proportional]", 
         "\[AlignmentMarker]", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "0"], "]"}], "-", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "2", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}]},
       {
        RowBox[{"=", "\[AlignmentMarker]", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
          RowBox[{"2", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "0"], "]"}]}]}]}]},
       {
        RowBox[{"=", "\[AlignmentMarker]", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "\[Theta]"}], "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"2", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "0"], "]"}]}]}], ")"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"e6ed41d6-4df2-42db-8ca7-c63106602a10"]], \
"TextNumbered",
 CellChangeTimes->{{3.623988108054422*^9, 3.623988256372883*^9}, {
  3.6239883464256415`*^9, 
  3.62398836252487*^9}},ExpressionUUID->"61107158-96a4-4186-9fd3-\
6feebe6d1e46"],

Cell[TextData[{
 "Aside from the trivial solutions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", "\[Theta]"}], "]"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"2b0c02a8-4f9b-4651-bb51-3c1b291fc4b7"],
 " when the ladder either begins flat against the floor or against the wall, \
we see that ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["v", "x", "2"], TraditionalForm]],ExpressionUUID->
  "99accfcf-7a5c-4433-af32-3b3d59e66e64"],
 " (and therefore ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "x"], TraditionalForm]],ExpressionUUID->
  "da36f9a1-caee-4c73-8634-b5e7ca54f9a4"],
 ") is maximized when "
}], "Text",
 CellChangeTimes->{{3.623988264079296*^9, 
  3.62398831141818*^9}},ExpressionUUID->"3d11a248-6fda-4f65-9f4c-\
e87955705275"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "=", 
   RowBox[{
    FractionBox["2", "3"], 
    RowBox[{"Cos", "[", 
     SubscriptBox["\[Theta]", "0"], "]"}]}]}], 
  TraditionalForm]],ExpressionUUID->"7e6a2a2e-373c-4105-ac59-fe4e6f86ce79"]], \
"TextNumbered",
 CellChangeTimes->{{3.6239851189970956`*^9, 
  3.6239851248003054`*^9}},ExpressionUUID->"21221331-caf0-4eaf-90be-\
3e2bcc799cd7"],

Cell[CellGroupData[{

Cell[TextData[{
 "If we multiply both sides of this equation by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "r"}], TraditionalForm]],ExpressionUUID->
  "87fe4ec6-74b5-4785-9ca5-45799e0abe68"],
 ", we see that the ladder falls when it reaches ",
 Cell[BoxData[
  FormBox[
   FractionBox["2", "3"], TraditionalForm]],ExpressionUUID->
  "23bce013-e619-41c8-bb78-329f749ff717"],
 " of its initial height against the wall! Also, this result is independent \
of \[Eta], which implies that for it will hold for any mass distribution, \
provided that the center of mass is still at the center of the ladder. "
}], "Text",
 CellChangeTimes->{{3.623988437111601*^9, 3.623988449997224*^9}, {
   3.6239885931042757`*^9, 3.623988621870726*^9}, {3.7205128802027006`*^9, 
   3.720512887113183*^9}, 
   3.7205129209448557`*^9},ExpressionUUID->"f80b98eb-cf2d-48c7-98b9-\
98d52b01bab8"],

Cell["\<\
The following simulation shows the actual motion of the ladder as it detaches \
from the wall.\
\>", "Text",
 CellChangeTimes->{{3.623988437111601*^9, 3.623988449997224*^9}, {
  3.6239885931042757`*^9, 3.623988621870726*^9}, {3.7205128802027006`*^9, 
  3.720512887113183*^9}, {3.7205129215258484`*^9, 
  3.7205129415157356`*^9}},ExpressionUUID->"1298e56a-b0cc-48d2-bc8c-\
735e60c6e4da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centerPlot", "@", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "end", ",", "end2", ",", "res", ",", "res2", ",", "tt", ",", "\[Theta]s",
       ",", "xs", ",", "ys", ",", "t", ",", "right", ",", "middle", ",", 
      "top", ",", 
      RowBox[{"r", "=", 
       RowBox[{"1", "/", "2"}]}], ",", 
      RowBox[{"s1", "=", "0.05"}], ",", "\[Theta]0Val", ",", "m", ",", 
      "xFinal", ",", "\[IndentingNewLine]", "vxFinal"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]s", ",", "xs", ",", "ys"}], "}"}], "=", 
        RowBox[{
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"t", "<", "end"}], ",", "res", ",", 
           RowBox[{"t", "<", "end2"}], ",", "res2", ",", "True", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "2"}], ",", 
             RowBox[{"xFinal", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t", "-", "end2"}], ")"}], " ", "vxFinal"}]}], ",", 
             "0"}], "}"}]}], "]"}], "/.", 
         RowBox[{"tt", "\[Rule]", "t"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0.8], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   Frame->True,
                   FrameStyle->GrayLevel[0.5333333333333334],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                   PlotRangePadding->None],
                  "GrayLevel[0.8]"],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                GrayLevel[0.8],
                Editable->False,
                Selectable->False], ",", 
               RotationBox[
                RotationBox[
                 RowBox[{"Polygon", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}], ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}], ",", "0"}], "}"}]}], 
                   "}"}], "]"}],
                 BoxRotation->0.,
                 BoxRotationPoint->{0., -0.30000000000000004`}],
                BoxRotation->0.,
                BoxRotationPoint->{0, 0}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0.8], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   Frame->True,
                   FrameStyle->GrayLevel[0.5333333333333334],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                   PlotRangePadding->None],
                  "GrayLevel[0.8]"],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                GrayLevel[0.8],
                Editable->False,
                Selectable->False], ",", 
               RotationBox[
                RotationBox[
                 RowBox[{"Polygon", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{"-", "0.05"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}]}], "}"}], "]"}],
                 BoxRotation->0.,
                 
                 BoxRotationPoint->{-0.30000000000000004`, 
                  0.024999999999999967`}],
                BoxRotation->0.,
                BoxRotationPoint->{0, 0}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  RowBox[{
                   GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                    PlotRangePadding->None], "\[InvisibleSpace]"}],
                  "GrayLevel[0]"],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                GrayLevel[0],
                Editable->False,
                Selectable->False], ",", 
               RotationBox[
                RotationBox[
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "0.1"}], ",", "0"}], "}"}]}], 
                   "}"}], "]"}],
                 BoxRotation->0.,
                 BoxRotationPoint->{0., -0.25}],
                BoxRotation->0.,
                BoxRotationPoint->{0, 0}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Translate", "[", 
                RowBox[{
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "r"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "r"}], "}"}]}], "}"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"xs", ",", "ys"}], "}"}]}], "]"}], ",", 
               "\[Theta]s"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"color6", ",", "Dashed", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{
                   FractionBox["4", "3"], "r", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/.", 
                    RowBox[{"tt", "\[Rule]", "0"}]}], "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   FractionBox["4", "3"], "r", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/.", 
                    RowBox[{"tt", "\[Rule]", "0"}]}], "]"}]}]}], "}"}]}], 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Gray", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"font", "@", "\"\<Ladder full motion\>\""}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"r", "+", "0.05"}], ",", 
                 RowBox[{
                  RowBox[{"2", "r"}], "+", "0.05"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05"}], ",", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05"}], ",", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "0.1"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "280"}], ",", 
         RowBox[{"PlotRangePadding", "\[Rule]", "None"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"font", "[", 
           RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}]}], "}"}], ",", "0", 
        ",", 
        RowBox[{"end2", "+", "1"}]}], "}"}], ",", 
      RowBox[{"Initialization", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"(*", " ", 
         RowBox[{"Primary", " ", "colors", " ", "for", " ", "figures"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"colors", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "color1", ",", "color2", ",", "color3", ",", "color4", ",", 
             "color5", ",", "color6"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "10", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "5", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "6", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "9", "]"}], ",", 
             RowBox[{"Lighter", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "97", "]"}], "[", "7", "]"}], ",", 
               "0.2"}], "]"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Secondar", " ", "colors", " ", "for", " ", "backgrounds"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"backgroundColors", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"backgroundColor1", ",", "backgroundColor2"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.99, 0.97432, 0.91748], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.66, 0.6495466666666667, 0.6116533333333334],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0.99, 0.97432, 0.91748]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.99, 0.97432, 0.91748]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.99, 0.97432, 0.91748],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.9, 0.9, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6000000000000001, 0.6000000000000001, 0.6000000000000001],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0.9, 0.9, 0.9]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.9, 0.9, 0.9]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.9, 0.9, 0.9],
              Editable->False,
              Selectable->False]}], "}"}]}]}], ";", 
         RowBox[{
          RowBox[{"font", "[", 
           RowBox[{"text_", ",", 
            RowBox[{"size_Integer:", "14"}], ",", "opts___"}], "]"}], ":=", 
          RowBox[{"(", 
           RowBox[{"Style", "[", 
            RowBox[{"text", ",", "size", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", 
             "opts"}], "]"}], ")"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Initial", " ", "angle", " ", "of", " ", "the", " ", "ladder", " ", 
           "with", " ", "the", " ", "wall"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"\[Theta]0Val", "=", "0.25"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Dynamics", " ", "before", " ", "the", " ", "ladder", " ", 
           "disconnects", " ", "from", " ", "the", " ", "wall"}], " ", "*)"}],
          "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]0", "=", "\[Theta]0Val"}], ",", 
              RowBox[{"g", "=", "1"}], ",", 
              RowBox[{"\[Eta]", "=", 
               FractionBox["1", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
               RowBox[{"x", "[", "tt", "]"}], ",", 
               RowBox[{"y", "[", "tt", "]"}]}], "}"}], "/.", 
             RowBox[{"First", "@", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], "==", 
                   FractionBox[
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], 
                    RowBox[{"r", "+", 
                    RowBox[{"r", " ", "\[Eta]"}]}]]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", 
                   "0"}], ",", 
                  RowBox[{
                   RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
                   "\[Theta]0"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "''"}], "[", "tt", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "r"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "tt", "]"}], ")"}], "2"], 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{
                    RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}]}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
                   RowBox[{"r", " ", 
                    RowBox[{"Sin", "[", "\[Theta]0", "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"y", "''"}], "[", "tt", "]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "r"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "tt", "]"}], ")"}], "2"], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], "-", 
                    RowBox[{"r", " ", 
                    RowBox[{
                    RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}]}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
                   RowBox[{"r", " ", 
                    RowBox[{"Cos", "[", "\[Theta]0", "]"}]}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
                  RowBox[{"x", "[", "tt", "]"}], ",", 
                  RowBox[{"y", "[", "tt", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"tt", ",", "0", ",", "3.5"}], "}"}]}], "]"}]}]}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Time", " ", "when", " ", "ladder", " ", "disconnects", " ", "from",
            " ", "the", " ", "wall"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"end", "=", 
          RowBox[{"ttt", "/.", 
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"res", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"tt", "\[Rule]", "ttt"}]}], "]"}], "-", 
              RowBox[{
               FractionBox["2", "3"], 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"res", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/.", 
                 RowBox[{"tt", "\[Rule]", "0"}]}], "]"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"ttt", ",", "1."}], "}"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Dynamics", " ", "after", " ", "the", " ", "ladder", " ", 
            "disconnects", " ", "from", " ", "the", " ", "wall"}], ",", " ", 
           RowBox[{
           "used", " ", "to", " ", "make", " ", "the", " ", "next", " ", 
            "NDSolve"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"FullSimplify", "@", 
          RowBox[{
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"Sum", " ", "of", " ", "vertical", " ", "forces"}], 
               " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Nf", "-", 
                 RowBox[{"m", " ", "g"}]}], "\[Equal]", 
                RowBox[{"m", " ", 
                 RowBox[{
                  RowBox[{"y", "''"}], "[", "tt", "]"}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Sum", " ", "of", " ", "torques"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"r", 
                 RowBox[{"(", 
                  RowBox[{"Nf", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], ")"}]}], 
                "\[Equal]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Eta]", " ", "m", " ", 
                   SuperscriptBox["r", "2"]}], ")"}], " ", 
                 RowBox[{
                  RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "Bottom", " ", "point", " ", "of", " ", "ladder", " ", 
                 "stays", " ", "connected", " ", "to", " ", "floor"}], " ", 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "r"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "tt", "]"}], ")"}], "2"], 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], "-", 
                 RowBox[{"r", " ", 
                  RowBox[{
                   RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Conservation", " ", "of", " ", "energy"}], " ", 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"m", " ", "g", " ", "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "0", "]"}], "]"}], "-", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], ")"}]}], "==", 
                RowBox[{
                 FractionBox["1", "2"], "m", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[Eta]"}], ")"}], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"r", " ", 
                    RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "tt", "]"}]}], ")"}], 
                  "2"]}]}]}], "\[IndentingNewLine]", "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Nf", ",", 
               RowBox[{
                RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], ",", 
               RowBox[{
                RowBox[{"\[Theta]", "'"}], "[", "tt", "]"}], ",", 
               RowBox[{
                RowBox[{"y", "''"}], "[", "tt", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Solve", " ", "for", " ", "the", " ", "motion", " ", "after", " ", 
           "the", " ", "ladder", " ", "disconnects", " ", "from", " ", "the", 
           " ", "wall"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"res2", "=", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]0", "=", "\[Theta]0Val"}], ",", 
              RowBox[{"g", "=", "1"}], ",", 
              RowBox[{"\[Eta]", "=", 
               FractionBox["1", "3"]}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
               RowBox[{"x", "[", "tt", "]"}], ",", 
               RowBox[{"y", "[", "tt", "]"}]}], "}"}], "/.", 
             RowBox[{"First", "@", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], "\[Equal]", 
                   FractionBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "\[Eta]", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", "\[Theta]0", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}]}], "]"}]}], ")"}], 
                    " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Eta]", "+", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}], "2"]}], 
                    ")"}]}]]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "''"}], "[", "tt", "]"}], "\[Equal]", "0"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"y", "''"}], "[", "tt", "]"}], "\[Equal]", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", "g", " ", "\[Eta]", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", "\[Theta]0", "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], ")"}]}], 
                    "-", 
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Eta]", "+", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}], "2"]}], 
                    ")"}]}]]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "end", "]"}], "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "tt"}], "]"}], "/.", 
                    RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "'"}], "[", "end", "]"}], "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "tt"}], "]"}], "/.", 
                    RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"y", "'"}], "[", "end", "]"}], "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "tt"}], "]"}], "/.", 
                    RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"\[Theta]", "[", "end", "]"}], "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/.", 
                    RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"x", "[", "end", "]"}], "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/.", 
                    RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"y", "[", "end", "]"}], "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "/.", 
                    RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}]}], 
                 "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
                  RowBox[{"x", "[", "tt", "]"}], ",", 
                  RowBox[{"y", "[", "tt", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"tt", ",", "end", ",", "5"}], "}"}]}], "]"}]}]}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Time", " ", "when", " ", "ladder", " ", "hits", " ", "the", " ", 
           "floor"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"end2", "=", 
          RowBox[{"ttt", "/.", 
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "2"], "-", 
               RowBox[{"res2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
              RowBox[{"tt", "\[Rule]", "ttt"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"ttt", ",", 
               RowBox[{"end", "+", "1."}]}], "}"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xFinal", "=", 
          RowBox[{
           RowBox[{"res2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/.", 
           RowBox[{"tt", "\[Rule]", "end2"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"vxFinal", "=", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"res2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "tt"}], "]"}], "/.", 
           RowBox[{"tt", "\[Rule]", "end2"}]}]}], ";"}], 
        "\[IndentingNewLine]", ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.621627826201005*^9, 3.621627851923298*^9}, {
   3.6216279187473288`*^9, 3.621628029340706*^9}, {3.621628066351512*^9, 
   3.621628179909358*^9}, {3.6232699486490335`*^9, 3.623270006574935*^9}, {
   3.623270097268606*^9, 3.6232701723699017`*^9}, {3.6232702370285997`*^9, 
   3.6232704669167485`*^9}, {3.623270512834375*^9, 3.62327052393301*^9}, {
   3.6232705927619467`*^9, 3.6232706376925163`*^9}, {3.6232706817170343`*^9, 
   3.62327072394545*^9}, {3.6232707888331614`*^9, 3.6232708446263523`*^9}, {
   3.623270881093438*^9, 3.623270977757967*^9}, {3.6232710325260997`*^9, 
   3.623271101804062*^9}, {3.623271573170023*^9, 3.6232715995365305`*^9}, {
   3.6232718152938714`*^9, 3.623271820565173*^9}, {3.623272319997127*^9, 
   3.623272333833147*^9}, {3.6232795825330353`*^9, 3.623279582689045*^9}, {
   3.6843622663925805`*^9, 3.684362266564037*^9}, {3.6845511509664474`*^9, 
   3.684551156177784*^9}, {3.689296214647661*^9, 3.689296282191905*^9}, 
   3.6892965819360113`*^9, {3.689296669099826*^9, 3.6892967055635033`*^9}, {
   3.6892967604553485`*^9, 3.689296817686101*^9}, {3.689296887997246*^9, 
   3.689296926753522*^9}, {3.689296959421*^9, 3.6892969866872797`*^9}, {
   3.6892970176802783`*^9, 3.6892972979779663`*^9}, {3.6892974183548145`*^9, 
   3.689297427549079*^9}, {3.689297474843135*^9, 3.689297503133299*^9}, {
   3.689297552486029*^9, 3.6892978409279747`*^9}, {3.689297877054257*^9, 
   3.6892981840967407`*^9}, {3.6892982568998356`*^9, 3.689298427682562*^9}, {
   3.689298466838107*^9, 3.6892985181567607`*^9}, {3.6892985531555147`*^9, 
   3.6892985557445855`*^9}, 3.689298651209812*^9, {3.6892986842731752`*^9, 
   3.6892987828170815`*^9}, {3.689298869030974*^9, 3.6892988897905645`*^9}, {
   3.689298928701867*^9, 3.6892989306049767`*^9}, {3.6899242689459724`*^9, 
   3.68992427774564*^9}, {3.6899243162000976`*^9, 3.6899243217006874`*^9}, {
   3.6899243611799555`*^9, 3.6899243615862513`*^9}, 3.720064722325942*^9, 
   3.7205023377633724`*^9, {3.7205024075528483`*^9, 3.7205024616561985`*^9}, {
   3.7205024969273357`*^9, 3.7205025330883083`*^9}, {3.720502575232254*^9, 
   3.7205025830888453`*^9}, {3.720502630198827*^9, 3.7205026877767696`*^9}, {
   3.7205028799271336`*^9, 3.7205028922940364`*^9}, {3.72050297598703*^9, 
   3.7205030921783648`*^9}, {3.720503249149042*^9, 3.7205032665316577`*^9}, {
   3.720507035709185*^9, 3.7205071083112984`*^9}, {3.7205071403705997`*^9, 
   3.720507142460432*^9}, 3.720508062276822*^9, {3.720508133726931*^9, 
   3.7205083268006954`*^9}, {3.720508358558629*^9, 3.720508382840169*^9}, {
   3.720508558225397*^9, 3.7205085604857388`*^9}, {3.720508677197799*^9, 
   3.72050868005435*^9}, 3.720508880857707*^9, {3.720510035979588*^9, 
   3.720510046595703*^9}, {3.7205108267072725`*^9, 3.7205108276185684`*^9}, {
   3.7205108953838406`*^9, 3.7205109517137766`*^9}, {3.7205110348668647`*^9, 
   3.720511035812657*^9}, {3.7205122739837503`*^9, 3.720512291004202*^9}, {
   3.7205446091406045`*^9, 3.720544628183956*^9}, {3.7205446635104265`*^9, 
   3.720544674827648*^9}, 3.720544714777706*^9, {3.7205454051579866`*^9, 
   3.720545472999446*^9}, {3.720921026142455*^9, 3.7209210514295635`*^9}, {
   3.72092113068266*^9, 3.720921130867645*^9}, {3.720921380852753*^9, 
   3.720921392862646*^9}, {3.7209223297376995`*^9, 3.720922418822995*^9}, 
   3.7209224651113777`*^9, {3.7209239855501037`*^9, 3.7209240535849895`*^9}, {
   3.720925236771243*^9, 
   3.72092524567791*^9}},ExpressionUUID->"ca2490fa-e0d1-4073-8070-\
88ce87163a80"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`end$$ = 
   1.5839675398412985`, $CellContext`end2$$ = 
   2.1322808904578032`, $CellContext`res$$ = {
    InterpolatingFunction[{{0., 3.5}}, {
     5, 7, 2, {101}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, CompressedData["
1:eJwBOQPG/CFib1JlAgAAAAEAAABlAAAAAAAAAAAAAACj11D/20A0P6PXUP/b
QEQ/hHK9QluIeT8KZciCTUSIP2kIGbI24pE/9Ln8hbHroT+07+yyR+aqP7qS
7u9u8LE/mq1mBrpttj9a41YzUGi/P42MIzBzMcQ/baebRr6uyD9NwhNdCSzN
P5buxTmq1NA/WdQQvLYM1T8buls+w0TZP92fpsDPfN0/0MJ4IW7a4D+xNZ5i
dPbiP5Kow6N6EuU/cxvp5IAu5z9Ujg4mh0rpPzUBNGeNZus/FnRZqJOC7T8G
4ICg5DrvP/slVMyaefA/89tnSMNV8T/rkXvE6zHyP+NHj0AUDvM/2/2ivDzq
8z/Ts7Y4Zcb0PxW3bMVVefU/V7oiUkYs9j+avdjeNt/2P9zAjmsnkvc/HsRE
+BdF+D9gx/qECPj4P6LKsBH5qvk/5c1mnuld+j+6fnZk+/H6P48vhioNhvs/
ZOCV8B4a/D85kaW2MK78Pw5CtXxCQv0/4/LEQlTW/T+5o9QIZmr+P45U5M53
/v4/YwX0lImS/z/W0xR2TwYAQPukryFaQwBAH3ZKzWSAAEBER+V4b70AQGkY
gCR6+gBAjeka0IQ3AUCyurV7j3QBQNeLUCeasQFA+1zr0qTuAUAgLoZ+rysC
QEX/ICq6aAJAadC71cSlAkCOoVaBz+ICQLNy8SzaHwNA5tf8KbJSA0AZPQgn
ioUDQEyiEyRiuANAgAcfITrrA0CzbCoeEh4EQObRNRvqUARAtZdQ9yGJBECE
XWvTWcEEQFIjhq+R+QRAIemgi8kxBUDvrrtnAWoFQL501kM5ogVAjTrxH3Ha
BUATCcsD3xoGQJnXpOdMWwZAH6Z+y7qbBkCldFivKNwGQCxDMpOWHAdAshEM
dwRdB0A44OVacp0HQL6uvz7g3QdARX2ZIk4eCEDLS3MGvF4IQFEaTeopnwhA
1+gmzpffCEBetwCyBSAJQOSF2pVzYAlAalS0eeGgCUDwIo5dT+EJQHbxZ0G9
IQpA/b9BJStiCkCDjhsJmaIKQAld9ewG4wpAjyvP0HQjC0AW+qi04mMLQJzI
gphQpAtATmRBTCjSC0AAAAAAAAAMQEpCdDs=
     "], {Developer`PackedArrayForm, CompressedData["
1:eJwt0FFEgwEAhdG/pjSllE1ZSlNKWRoxIiIixigRESki0oiIiBEjImJEjIiI
iIiIiIiIiIiIiIiIiKhDXc779cWns6MLJUEQzAZ/C1FOmCpqqCNKA400E6eN
DrroJkkvKfroZ4BBhhgmTYYRxhhngkmmmPn/Msc8WRZZYpkVVsmxRp51Nthk
iwLb7FBklz32OeCQI4454ZQzzrngkiuuueGWO+554JEnnnnhlTfe+eCTL775
oVTgMiqopJpaItQTo4kWWmmnkwQ9/AKzHC6H
      "], CompressedData["
1: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
      "]}, {Automatic}][$CellContext`tt$$], 
    InterpolatingFunction[{{0., 3.5}}, {
     5, 7, 2, {101}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, CompressedData["
1:eJwBOQPG/CFib1JlAgAAAAEAAABlAAAAAAAAAAAAAACj11D/20A0P6PXUP/b
QEQ/hHK9QluIeT8KZciCTUSIP2kIGbI24pE/9Ln8hbHroT+07+yyR+aqP7qS
7u9u8LE/mq1mBrpttj9a41YzUGi/P42MIzBzMcQ/baebRr6uyD9NwhNdCSzN
P5buxTmq1NA/WdQQvLYM1T8buls+w0TZP92fpsDPfN0/0MJ4IW7a4D+xNZ5i
dPbiP5Kow6N6EuU/cxvp5IAu5z9Ujg4mh0rpPzUBNGeNZus/FnRZqJOC7T8G
4ICg5DrvP/slVMyaefA/89tnSMNV8T/rkXvE6zHyP+NHj0AUDvM/2/2ivDzq
8z/Ts7Y4Zcb0PxW3bMVVefU/V7oiUkYs9j+avdjeNt/2P9zAjmsnkvc/HsRE
+BdF+D9gx/qECPj4P6LKsBH5qvk/5c1mnuld+j+6fnZk+/H6P48vhioNhvs/
ZOCV8B4a/D85kaW2MK78Pw5CtXxCQv0/4/LEQlTW/T+5o9QIZmr+P45U5M53
/v4/YwX0lImS/z/W0xR2TwYAQPukryFaQwBAH3ZKzWSAAEBER+V4b70AQGkY
gCR6+gBAjeka0IQ3AUCyurV7j3QBQNeLUCeasQFA+1zr0qTuAUAgLoZ+rysC
QEX/ICq6aAJAadC71cSlAkCOoVaBz+ICQLNy8SzaHwNA5tf8KbJSA0AZPQgn
ioUDQEyiEyRiuANAgAcfITrrA0CzbCoeEh4EQObRNRvqUARAtZdQ9yGJBECE
XWvTWcEEQFIjhq+R+QRAIemgi8kxBUDvrrtnAWoFQL501kM5ogVAjTrxH3Ha
BUATCcsD3xoGQJnXpOdMWwZAH6Z+y7qbBkCldFivKNwGQCxDMpOWHAdAshEM
dwRdB0A44OVacp0HQL6uvz7g3QdARX2ZIk4eCEDLS3MGvF4IQFEaTeopnwhA
1+gmzpffCEBetwCyBSAJQOSF2pVzYAlAalS0eeGgCUDwIo5dT+EJQHbxZ0G9
IQpA/b9BJStiCkCDjhsJmaIKQAld9ewG4wpAjyvP0HQjC0AW+qi04mMLQJzI
gphQpAtATmRBTCjSC0AAAAAAAAAMQEpCdDs=
     "], {Developer`PackedArrayForm, CompressedData["
1:eJwt0FFEgwEAhdG/pjSllE1ZSlNKWRoxIiIixigRESki0oiIiBEjImJEjIiI
iIiIiIiIiIiIiIiIiKhDXc779cWns6MLJUEQzAZ/C1FOmCpqqCNKA400E6eN
DrroJkkvKfroZ4BBhhgmTYYRxhhngkmmmPn/Msc8WRZZYpkVVsmxRp51Nthk
iwLb7FBklz32OeCQI4454ZQzzrngkiuuueGWO+554JEnnnnhlTfe+eCTL775
oVTgMiqopJpaItQTo4kWWmmnkwQ9/AKzHC6H
      "], CompressedData["
1:eJwt1Wk41YkXB/D7S6TBkKRBtvgnpCTLTXRuKTGVEU2ZSpZETIUWkRKRslSW
EJJUIowtimLOtV7bvRfXvt3sjO1y7cKY5/mfF+fF5833ec55znPkbZ3NLhMk
EmnPWruzhdswnoJA+n/dOkI+u5uHBnAlW2Zizem/bj9hIC8EtlH1j/7z58J7
s//zr/PDfgby0rATn7D/80N9pHzlVISIoCVu1AUzIH/6q8p0zZv+pHcWr3l6
+Dq+9zdt4IPtQ5OUNU+O5t/+LQ3B9ZrAgR35jjA/H+d4YD0NBOJ753ZkI5Sf
0JOapHnAtlhfc/sNNCinSsnt+4ZwW/C8ROs5X4jJPV2RLkiDjUL3nb/TEMgP
rFa9WQEw/6CwY7MYDQ5KEyLqLQg8Ro29BkohkKrgZPlCmgYSZkOGXQQVzn9s
JjYkRcKYXmfdd20a2PAUHp6WoUKjh4yS8J44cA37J++hBQ3GLnTF2hlQ4UDB
aHvz9wRAyN1l+3BtPr7W9/ScqSBp/JEco54I+RYPlqxyaGClE5QQ9JYKLN2R
qInHyfDPDzvu6XEa3MtPqXDZWgQ5yqR69mA6+C+/MJVzqQCav7nok6QiAHL/
q8LP2WCcpyCXI1AJ0dEev3uZF0NYY2RbgvBnmOgNciv6uxJMA1fvSG4rATOX
yTcPffKhbPmuooJ/FdzluPXtX1cKFmrJh6p+LgQlzX6VN5bVYBqbw6jmK4Pi
Ct4t8Reo8IwRMBQHNRDitYVTpVIOhZn8m/opxaCw6ckrVKQDJz7quJYzDWyD
hHNkNEthXjCJ48zDAJ0TFneIxgpo21xyzFOrHGJNFO+fYjKAT9qkWsSyCtLG
xc31DSrALl7UM9ydCYdtI11iP1cDoTrCIzNXCaPTRk7q7UzYdaLQM1uJDrfu
LC7yZVRDQYqrsgRfLdzgD9byyGRAs5jjT70OdLDKXbB6vcSEDEWHra47a2FP
dyimSTPBzRua3CKZ0JolH2u6vg5Sz2TvTbhcC9czOMJnyhmQEpFl/XSkDuTv
HNGU1KoD/230QQFXOgRKaB1J7qyHy/p8jscW6mCskf70qHs1wKyz3+RHFjwU
tJARf1oP/SaZCV9PVsIJqWYp+3sNMPxUcEZ5Mwu4T/RFvYPKYSvPG5E/TjeC
zYXKCe5jFgiKWaUzJEtgZMWlcEq9CexkUr2tB1nQ2fxqn2R5IehsutGgsqkZ
FO93/KDvagA9FXKV5ItPcCvXbqmI2wyGKyer15s3QKj45uCwd3Egmushe6C5
BZQvWJ/SON0AmaxoITo9FiteyiU25LcCf7Jk3aByA0j042XrvC+4SH7dvP9m
G8RepBQIdbPg1FaVF2YVJdhhWBt4QrkdYraOW150ZYFShP0+SKpBI1pgfkhb
O7jsa/Q611QPomHawccOs/CDUWWb1aMOSNb/46q5QD00JNalPM5pwfGWX64N
KnXCrHXPgodAHeQnesoNpXVhhuFG+Z3UTuBo693qe8cESstnlbKIHvzoZFM/
c7wLxn/XZLZ8qgGXm86CleIDaEkO8Jmv6ILofieuv34lsLuvvD3UNIyDxHvf
dE02/LHuorsBuQxESnMNahhjeDFRfyHaiw0uz8Qr49yKIElAuls9joNhNsRv
DvlsyNdYlv0W8RU6/9fwimU9hTenrSc8e9mw8r5KjmKXBUVLXzZ92j2NQikD
vJpLbPAeMRJOMY8DXT22rNu6WfxgqeU6sMKGYN90phwzGInMmI0rTXNotn7j
1eFRNlx789rcjJGOuyyT9C99WEBjV4XRqBI21MHhv7t/LsCN3V9q5xyXcFh0
U+5Zn7VcQQ1OU2kpShf1V5tKLqNy/WnxN4psMN49Iq4/UI2tv2Tbnc1YwbuS
OkeJtC4AP3GOYHYdHtyf579XhEQtC72tu0u8CyYzlzNtYxqR0Ld+vDubRN19
3om7aNMJkVbkXzQ+tGLGpDAxRyaoxwtOjrk/64CD29xUnRmdyFunGNAWT1BF
Ms4nj8S0gw/nyA4P3m60FyHUjvQQ1L/db/BQvrSBbNlBoVB6D468/FoRs0hQ
w/ZFz/YXtIJD+aJ8eGQflvPmzJhNE9QSstGH/tQWILem2Z+zHEADZYE2GzpB
NTeLveLi1wwf3TaPhsoMoZe6fs7PfgR1x9DNiR7DJhiTGckvXNura0BA17qt
BHX/7pq5cm4DGArrnTr6cAQzo7zaLB6RqHrGTN1ou7W7K8nQ6jw2hg3Hy/lt
bqzi7BBPrFphHbQfNJcKmR5HG3H9DF7vZYzvNufwrzAhXM+ut+AQB2vuiRdU
ay3h7Jgeo+RsDcxcKL7NmeOgGYVQS4qaRwXLzLVfVAHaiV80kmMm0cdxSOZM
6gzWzvy1bTWuFC49uy7UojSF6LRT57T7FLq8jJXhhFMheFnTKj1uCt+JTfrd
Fx7HPhVxB+u/vkBTEsOEn4+Lqb5FeYJZ/RhMbVbnCqXB5MXm/o7jXBS1v6Yj
0N2KxasuZwMlQiFIOLNy/BoX/fQdrqsmIdaEvo1p5Y9EtX3M1YQ/ufhbY0RT
8KVSqP815fsP73TcM9C3hTjKxStCcy/DZDrgrkFA16mePFRcyqkoWJzCbJ77
UU/KBiDX2+ncBtUijPbcrrrj2RTmHCVpL4pNwJlJmq1rWRnKaljFKRBT+Guv
ha3SNS4EsmWDAshVGF50V0n+zCRK7V8va7I0C0O6hzWk7zOwjZ/Bs/ycgzGH
HkRK7FwEppTuMSvDOqyvuBrfc2kC8220XaKHf4B8+PTlUXUW1oXI9c55jaER
/4LDKHkVZK/2rnQtNeD4hE5YkPsIPi+mz20PIFHaSyedziY2YSEt+4qYxTDG
57GFnXQJyi2tDNVx1RZU1Libtao4iIZXy9YdzSIok0jMZz1rxdGvnjP+A324
96fblcMTBGV4uNZIgd6GPuVypKB3PajM8ot8tUBQjPezitUG2zEkc7Pwbdvv
uKHS/9G9eoKSaLPaJ9vZgVqerw/pm3Vg9Jm3aiYPCMr153ccEjI6caUpgvtg
oRm7fQLLDXkJCkkjIzfZqguLXtqbVpWwkK0hur3NkUQZzesbch7vQjFnUa33
rkz0fW3nIXl5FSL46187WrJRQP+JYHMhDSfn7A/HVS7DSbns4f5oNqb027dq
+xXjojEjxOD5D7D4KePlNxobK6v5X1nwf0NO7+JXwWNL8C/neelr
      "]}, {Automatic}][$CellContext`tt$$], 
    InterpolatingFunction[{{0., 3.5}}, {
     5, 7, 2, {101}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, CompressedData["
1:eJwBOQPG/CFib1JlAgAAAAEAAABlAAAAAAAAAAAAAACj11D/20A0P6PXUP/b
QEQ/hHK9QluIeT8KZciCTUSIP2kIGbI24pE/9Ln8hbHroT+07+yyR+aqP7qS
7u9u8LE/mq1mBrpttj9a41YzUGi/P42MIzBzMcQ/baebRr6uyD9NwhNdCSzN
P5buxTmq1NA/WdQQvLYM1T8buls+w0TZP92fpsDPfN0/0MJ4IW7a4D+xNZ5i
dPbiP5Kow6N6EuU/cxvp5IAu5z9Ujg4mh0rpPzUBNGeNZus/FnRZqJOC7T8G
4ICg5DrvP/slVMyaefA/89tnSMNV8T/rkXvE6zHyP+NHj0AUDvM/2/2ivDzq
8z/Ts7Y4Zcb0PxW3bMVVefU/V7oiUkYs9j+avdjeNt/2P9zAjmsnkvc/HsRE
+BdF+D9gx/qECPj4P6LKsBH5qvk/5c1mnuld+j+6fnZk+/H6P48vhioNhvs/
ZOCV8B4a/D85kaW2MK78Pw5CtXxCQv0/4/LEQlTW/T+5o9QIZmr+P45U5M53
/v4/YwX0lImS/z/W0xR2TwYAQPukryFaQwBAH3ZKzWSAAEBER+V4b70AQGkY
gCR6+gBAjeka0IQ3AUCyurV7j3QBQNeLUCeasQFA+1zr0qTuAUAgLoZ+rysC
QEX/ICq6aAJAadC71cSlAkCOoVaBz+ICQLNy8SzaHwNA5tf8KbJSA0AZPQgn
ioUDQEyiEyRiuANAgAcfITrrA0CzbCoeEh4EQObRNRvqUARAtZdQ9yGJBECE
XWvTWcEEQFIjhq+R+QRAIemgi8kxBUDvrrtnAWoFQL501kM5ogVAjTrxH3Ha
BUATCcsD3xoGQJnXpOdMWwZAH6Z+y7qbBkCldFivKNwGQCxDMpOWHAdAshEM
dwRdB0A44OVacp0HQL6uvz7g3QdARX2ZIk4eCEDLS3MGvF4IQFEaTeopnwhA
1+gmzpffCEBetwCyBSAJQOSF2pVzYAlAalS0eeGgCUDwIo5dT+EJQHbxZ0G9
IQpA/b9BJStiCkCDjhsJmaIKQAld9ewG4wpAjyvP0HQjC0AW+qi04mMLQJzI
gphQpAtATmRBTCjSC0AAAAAAAAAMQEpCdDs=
     "], {Developer`PackedArrayForm, CompressedData["
1:eJwt0FFEgwEAhdG/pjSllE1ZSlNKWRoxIiIixigRESki0oiIiBEjImJEjIiI
iIiIiIiIiIiIiIiIiKhDXc779cWns6MLJUEQzAZ/C1FOmCpqqCNKA400E6eN
DrroJkkvKfroZ4BBhhgmTYYRxhhngkmmmPn/Msc8WRZZYpkVVsmxRp51Nthk
iwLb7FBklz32OeCQI4454ZQzzrngkiuuueGWO+554JEnnnnhlTfe+eCTL775
oVTgMiqopJpaItQTo4kWWmmnkwQ9/AKzHC6H
      "], CompressedData["
1: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
      "]}, {Automatic}][$CellContext`tt$$]}, $CellContext`res2$$ = {
    InterpolatingFunction[{{1.5839675398412985`, 5.}}, {
     5, 7, 2, {150}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, CompressedData["
1:eJwdiHk01AkAx8fM/H6/OV3jyGbtROmyVEo56vcVpXJ3YLu2HB2LxbPiJVlk
o92osYmyeSq0U2GppBzDsB2O2WltUtI8tre9MLV6jHHNevt57/PH57MgNGZ7
BJPBYOjNmT8n986LEHWwlvaVpXj0hGhpSYe1vewrLR11a/h+SZSW3vzTPY+M
VC0tjvq+K1yipS2yBUx/mZY2KitY46zW0jz5wqM2lpM0U1VVJNw2SeeGSCZ2
FE3Snyvjd15ST9LSrbuqVJii17Y4CRbnTdGtLvOORL+dosWrAoob0qbp5KVZ
z4VWM3SPWCbc/2CGdpw34VkRNEvnGKw4MTs6S78nj9T45epoG51/gsKUAeXk
0DlNGAMnx0/f+qKaAbtRm8deDD28HGkajPHTg++C8qCaHD3IduY8Ge/Sg2NW
gpuLARNlD/dWpvgzYfHBw7o5lwl1R9JgfAsTcunt67ZjTBRmDUT0LmbhkTw+
RxTIwvgsu9b3OAuLXPLfnL7GQqv4qvRUGwthVEVC2j8sMNV1OMllo6S7jZ+8
nI0Ga2K6YzMbL2I9h61C2fjUmNEXm8KGvlDe0VLAxrI9zAaTO2x4ZC9ixz1l
Y1/tFu9OFRuJbyMlSzVsnBfl9mYKCUjdq8UDNgRaY/46vMGFgMKs91K2D4He
hr7O7v0EBsNVDHEcATX/b8fIDALPhg9MXJAQqO18XS8rIVBUsTttqIpAWm7P
JjMZgUOxO3nuCgLegcquyH4CK1b55eWPEDARtQc3TxPQfvKyHOaT6O9uVZnN
JyG/617qvozEjfzGo1HOJM4mutpf3EIiLuT+aHMwiSDnNbXDh0i4fladbH6M
hHjKHhszSRB9N9nRP5N4X7/kycVrJLp+KT3bUk2i5qT19pFmEgVfF5vNU5JI
geWrjSoSoQsKi6M/kPBimoUXzJKwG5QskQspGLYajIxYUjgg3brO1p5C5bmM
jP00Bd2xhq78AAp++zQWioMUrnisjKDiKYwsjayiT1FYb1g6lXiBwqpXhZej
KygsKctxDXtEwSou41WIioLILSnZT0uBS0XP9zTmQKc8+NB5OQdjRUF7HDw5
GJ/etC48jAPN3jWmhekcTNQvHO0s4UBraaJgNnMwdYJ1a62Kg+m+0awoHQcz
bgMRJVZcPP+9dLOhFxdVAUcXp8Zwkf3SjqO+yEVo+Md3e2VcuKlrnrS/48I0
KVHqYsSDWs/1x1+defiwO2QoNZaHf2sSvIPKeRgV5N206+fhU0QVn2XKx1hj
Z2SvNx/j5kPtlel8aGI5dj/U8eEbTKyQEQJcXc9cPRkogMZGt3b1FQF8eNOu
376f+x8n6BtOQmiej3kMpAvh0zDqZakQouA33flFK/UxWCros8/Th/0lC9t1
Y/o4nmMb6x5sgLZ0xwfb6gyQ5SpmSoWGqLhrW16xwRDdDl/61MQYYocva9e9
ckP8+U3vvro3c51Veaje3AjPSjNjmvyNsF2+J6nltBGUqpVpbU1GCJylzjzW
zPX8fkm7gzECnO9c7jpsjD+CzlxXFhvD/7sDt7t7jKE473Svx0AE/0pB00sv
Ebo6Bh69ThXh6YyDT3SjCG9nzcuc3ojA+B8T/AdEdQcA
     "], {Developer`PackedArrayForm, CompressedData["
1:eJwl0Q1HHQAAhtG7zaZsyrIpZdNVmmWzlFI2m83SNE0fszRNuVNKKZvSNGVT
yqaUsrYpSymlbJqy2SyliDEixhgxYoyIiBHrZC/nD7xPMFRfWHcgEAi8DPzf
IY4QzjEiieIkMcRxmiCJnCGZ86SQRgZZXOIK18jmBje5RQG3KeYu9yjnPpVU
U0s9D2nkEY9p5SntdPKcbnrpZ4DXDDHMKONMMs073jPHRz4zzyLLrPCVb6yy
xnd+8JN1frHBb/6wyRbb7PCXXf5x0MGHCeMoERznBNHEcop4EkjiLOe4QCrp
ZHKRy1zlOjnkkkc+RdyhhFLKCFFBFTXsB39AA00008IT2ujgGV300McLXjHI
G0YYY4Ip3jLDLB/4xBcWWGIPMCdGQw==
      "], CompressedData["
1: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
Gel1Iuz/E82ikQ==
      "]}, {Automatic}][$CellContext`tt$$], 
    InterpolatingFunction[{{1.5839675398412985`, 5.}}, {
     5, 7, 2, {150}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, CompressedData["
1:eJwdiHk01AkAx8fM/H6/OV3jyGbtROmyVEo56vcVpXJ3YLu2HB2LxbPiJVlk
o92osYmyeSq0U2GppBzDsB2O2WltUtI8tre9MLV6jHHNevt57/PH57MgNGZ7
BJPBYOjNmT8n986LEHWwlvaVpXj0hGhpSYe1vewrLR11a/h+SZSW3vzTPY+M
VC0tjvq+K1yipS2yBUx/mZY2KitY46zW0jz5wqM2lpM0U1VVJNw2SeeGSCZ2
FE3Snyvjd15ST9LSrbuqVJii17Y4CRbnTdGtLvOORL+dosWrAoob0qbp5KVZ
z4VWM3SPWCbc/2CGdpw34VkRNEvnGKw4MTs6S78nj9T45epoG51/gsKUAeXk
0DlNGAMnx0/f+qKaAbtRm8deDD28HGkajPHTg++C8qCaHD3IduY8Ge/Sg2NW
gpuLARNlD/dWpvgzYfHBw7o5lwl1R9JgfAsTcunt67ZjTBRmDUT0LmbhkTw+
RxTIwvgsu9b3OAuLXPLfnL7GQqv4qvRUGwthVEVC2j8sMNV1OMllo6S7jZ+8
nI0Ga2K6YzMbL2I9h61C2fjUmNEXm8KGvlDe0VLAxrI9zAaTO2x4ZC9ixz1l
Y1/tFu9OFRuJbyMlSzVsnBfl9mYKCUjdq8UDNgRaY/46vMGFgMKs91K2D4He
hr7O7v0EBsNVDHEcATX/b8fIDALPhg9MXJAQqO18XS8rIVBUsTttqIpAWm7P
JjMZgUOxO3nuCgLegcquyH4CK1b55eWPEDARtQc3TxPQfvKyHOaT6O9uVZnN
JyG/617qvozEjfzGo1HOJM4mutpf3EIiLuT+aHMwiSDnNbXDh0i4fladbH6M
hHjKHhszSRB9N9nRP5N4X7/kycVrJLp+KT3bUk2i5qT19pFmEgVfF5vNU5JI
geWrjSoSoQsKi6M/kPBimoUXzJKwG5QskQspGLYajIxYUjgg3brO1p5C5bmM
jP00Bd2xhq78AAp++zQWioMUrnisjKDiKYwsjayiT1FYb1g6lXiBwqpXhZej
KygsKctxDXtEwSou41WIioLILSnZT0uBS0XP9zTmQKc8+NB5OQdjRUF7HDw5
GJ/etC48jAPN3jWmhekcTNQvHO0s4UBraaJgNnMwdYJ1a62Kg+m+0awoHQcz
bgMRJVZcPP+9dLOhFxdVAUcXp8Zwkf3SjqO+yEVo+Md3e2VcuKlrnrS/48I0
KVHqYsSDWs/1x1+defiwO2QoNZaHf2sSvIPKeRgV5N206+fhU0QVn2XKx1hj
Z2SvNx/j5kPtlel8aGI5dj/U8eEbTKyQEQJcXc9cPRkogMZGt3b1FQF8eNOu
376f+x8n6BtOQmiej3kMpAvh0zDqZakQouA33flFK/UxWCros8/Th/0lC9t1
Y/o4nmMb6x5sgLZ0xwfb6gyQ5SpmSoWGqLhrW16xwRDdDl/61MQYYocva9e9
ckP8+U3vvro3c51Veaje3AjPSjNjmvyNsF2+J6nltBGUqpVpbU1GCJylzjzW
zPX8fkm7gzECnO9c7jpsjD+CzlxXFhvD/7sDt7t7jKE473Svx0AE/0pB00sv
Ebo6Bh69ThXh6YyDT3SjCG9nzcuc3ojA+B8T/AdEdQcA
     "], {Developer`PackedArrayForm, CompressedData["
1:eJwl0Q1HHQAAhtG7zaZsyrIpZdNVmmWzlFI2m83SNE0fszRNuVNKKZvSNGVT
yqaUsrYpSymlbJqy2SyliDEixhgxYoyIiBHrZC/nD7xPMFRfWHcgEAi8DPzf
IY4QzjEiieIkMcRxmiCJnCGZ86SQRgZZXOIK18jmBje5RQG3KeYu9yjnPpVU
U0s9D2nkEY9p5SntdPKcbnrpZ4DXDDHMKONMMs073jPHRz4zzyLLrPCVb6yy
xnd+8JN1frHBb/6wyRbb7PCXXf5x0MGHCeMoERznBNHEcop4EkjiLOe4QCrp
ZHKRy1zlOjnkkkc+RdyhhFLKCFFBFTXsB39AA00008IT2ujgGV300McLXjHI
G0YYY4Ip3jLDLB/4xBcWWGIPMCdGQw==
      "], CompressedData["
1:eJxt1Gs0GwYUB/AY8VbOgunReI0po56z1TZxNDG0W3Ey0qK0FGujqUc8p6bW
aM680ilzmI6RiqJ6WmReidTEWn04Gn0gqlk1nqv3UR3bh3377364H34f7pd7
/9fyBCv4pAqBQJD824Z5x2iChCcUH41wHp/xiEL4r2LcnNnDZ9A3HqnUb7LQ
K3S4Tm/z0T/1MejcvoI+kV5OVRGi6+y2PB2zjL7/t0ae1OEpeNwRd6F9HPrl
zR55YQ165k/GzY7az8AjP2Zl3UtCp45K/RPG0O3YFiZ61DHwXYYZ001N6Nuk
LUpy8jj4Iim7Yr/nBLictLO8Q5CD3yflHhqQoveSVPkFRZPgj7mSHIH9c/AH
3Lwm3SJ0KZf6lLWELuIS1UfoU+Ad3AFXDyH6dW5+ZIXpC/BKM2tRUAJ6/k2x
mbYIPdkv4pzEQIH7mticyDyBfjCp7HO3W+hnQ7TLrq2iX/Y8t/j+R3+Cd5ot
+1ax0QuFwlitRvSo4BxOqhzdbZ7GV7z7EnO0i7Zq6oXe5UL1oX+DnkM/UFJQ
in4gzUfeL0Jn0OoF51+gJ5A02d7EafDzU6e8t23Ry6/f0+kOQG/Kdn6ckYAu
pDANZ7jo/SoNQQw++sPbiiKpBH38gvmQxyS68oswLf4W+qpWua+RyStw2aXY
WoYTerupx3alL3p5HfHoZAR6uqOszYqNPpRa7M68iG4h9r/ZVomeoqXmutOC
Phjc2+onQd9Tle50SYZ+9qVry5gSvX/fgoPNW3ST9KvXzugrwZl9x+2FVuhi
7T0CFQ90Q/qo7UF/9PifS/il4ejd0wE2cha6gTOxzjYPPSZDZJVYhi6UZNR0
CtB1dd0t1HrQo75erP7yIfqt6gZyuQJdU3mi6vk6ergL2dReewa8NfNxRTIZ
Xa2fZ9LjjM7QO1SuTkVvClE3DgxFJ/wiLq04hU6fySQpsv9n/oWTzwZ/RA+3
DKxpEaBH9XjGl4rQY47YOGXK0OPX9Ncj59CZvDfdNJVZvE/Hl3kfvodeql09
qvRAF74KseOHoI/3638bnYpOqB28b1GGbp2TaylvQ/cL90yplKEz968MMNbQ
+wp6JBrkOXDj5/m97VT0027BnSeZ6GLOnnbDUnSjZ9M3bnehn3K80ZykQBd9
lyWw1JkHHx128S/wQl+wUirXE9HVUqovHq9HN/2dvnfoCbqrsc6gh+4CuH9c
X1wNBT1KmKahm4zOjCqWSYXo6ZpXf83bRv++tTeRQl0EL2GMUra46FWERb2O
B+gNDcTxJKO/8A8Ekhv3haF/cK8nn9yNPmR93ZWz6zU4MTqn5m8vdK+awwZs
FnrapHnO/BX0VvLrheiH6DNh4vAxwhLmtGpK4kxBnxx/x46TjX6UbF081oUu
i6CtOb9BD6yODeN8sgx+V57fN5aK7msusHVpQ++LvFPIWUGv3KhtFXuugLOL
s0be5KIftqWvu/+Bbidy2M0yWAVXDSV+JghFn1icOKaoRu/gtOeSp9F5ZsV1
oY5rmPf2OCkvBZ32lffs3S5082kTPXXVdfDN7CUn7wD0EaM7wZk89ObmWvat
J+g/ONRl+ezdANcrkD5aCUIvnpt1rM9C/wfXmVFq
      "]}, {Automatic}][$CellContext`tt$$], 
    InterpolatingFunction[{{1.5839675398412985`, 5.}}, {
     5, 7, 2, {150}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, CompressedData["
1:eJwdiHk01AkAx8fM/H6/OV3jyGbtROmyVEo56vcVpXJ3YLu2HB2LxbPiJVlk
o92osYmyeSq0U2GppBzDsB2O2WltUtI8tre9MLV6jHHNevt57/PH57MgNGZ7
BJPBYOjNmT8n986LEHWwlvaVpXj0hGhpSYe1vewrLR11a/h+SZSW3vzTPY+M
VC0tjvq+K1yipS2yBUx/mZY2KitY46zW0jz5wqM2lpM0U1VVJNw2SeeGSCZ2
FE3Snyvjd15ST9LSrbuqVJii17Y4CRbnTdGtLvOORL+dosWrAoob0qbp5KVZ
z4VWM3SPWCbc/2CGdpw34VkRNEvnGKw4MTs6S78nj9T45epoG51/gsKUAeXk
0DlNGAMnx0/f+qKaAbtRm8deDD28HGkajPHTg++C8qCaHD3IduY8Ge/Sg2NW
gpuLARNlD/dWpvgzYfHBw7o5lwl1R9JgfAsTcunt67ZjTBRmDUT0LmbhkTw+
RxTIwvgsu9b3OAuLXPLfnL7GQqv4qvRUGwthVEVC2j8sMNV1OMllo6S7jZ+8
nI0Ga2K6YzMbL2I9h61C2fjUmNEXm8KGvlDe0VLAxrI9zAaTO2x4ZC9ixz1l
Y1/tFu9OFRuJbyMlSzVsnBfl9mYKCUjdq8UDNgRaY/46vMGFgMKs91K2D4He
hr7O7v0EBsNVDHEcATX/b8fIDALPhg9MXJAQqO18XS8rIVBUsTttqIpAWm7P
JjMZgUOxO3nuCgLegcquyH4CK1b55eWPEDARtQc3TxPQfvKyHOaT6O9uVZnN
JyG/617qvozEjfzGo1HOJM4mutpf3EIiLuT+aHMwiSDnNbXDh0i4fladbH6M
hHjKHhszSRB9N9nRP5N4X7/kycVrJLp+KT3bUk2i5qT19pFmEgVfF5vNU5JI
geWrjSoSoQsKi6M/kPBimoUXzJKwG5QskQspGLYajIxYUjgg3brO1p5C5bmM
jP00Bd2xhq78AAp++zQWioMUrnisjKDiKYwsjayiT1FYb1g6lXiBwqpXhZej
KygsKctxDXtEwSou41WIioLILSnZT0uBS0XP9zTmQKc8+NB5OQdjRUF7HDw5
GJ/etC48jAPN3jWmhekcTNQvHO0s4UBraaJgNnMwdYJ1a62Kg+m+0awoHQcz
bgMRJVZcPP+9dLOhFxdVAUcXp8Zwkf3SjqO+yEVo+Md3e2VcuKlrnrS/48I0
KVHqYsSDWs/1x1+defiwO2QoNZaHf2sSvIPKeRgV5N206+fhU0QVn2XKx1hj
Z2SvNx/j5kPtlel8aGI5dj/U8eEbTKyQEQJcXc9cPRkogMZGt3b1FQF8eNOu
376f+x8n6BtOQmiej3kMpAvh0zDqZakQouA33flFK/UxWCros8/Th/0lC9t1
Y/o4nmMb6x5sgLZ0xwfb6gyQ5SpmSoWGqLhrW16xwRDdDl/61MQYYocva9e9
ckP8+U3vvro3c51Veaje3AjPSjNjmvyNsF2+J6nltBGUqpVpbU1GCJylzjzW
zPX8fkm7gzECnO9c7jpsjD+CzlxXFhvD/7sDt7t7jKE473Svx0AE/0pB00sv
Ebo6Bh69ThXh6YyDT3SjCG9nzcuc3ojA+B8T/AdEdQcA
     "], {Developer`PackedArrayForm, CompressedData["
1:eJwl0Q1HHQAAhtG7zaZsyrIpZdNVmmWzlFI2m83SNE0fszRNuVNKKZvSNGVT
yqaUsrYpSymlbJqy2SyliDEixhgxYoyIiBHrZC/nD7xPMFRfWHcgEAi8DPzf
IY4QzjEiieIkMcRxmiCJnCGZ86SQRgZZXOIK18jmBje5RQG3KeYu9yjnPpVU
U0s9D2nkEY9p5SntdPKcbnrpZ4DXDDHMKONMMs073jPHRz4zzyLLrPCVb6yy
xnd+8JN1frHBb/6wyRbb7PCXXf5x0MGHCeMoERznBNHEcop4EkjiLOe4QCrp
ZHKRy1zlOjnkkkc+RdyhhFLKCFFBFTXsB39AA00008IT2ujgGV300McLXjHI
G0YYY4Ip3jLDLB/4xBcWWGIPMCdGQw==
      "], CompressedData["
1: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
wIoQb5N55BhOYarcwSlcGP+hzUhk43+BrNPa
      "]}, {
     Automatic}][$CellContext`tt$$]}, $CellContext`tt$$, \
$CellContext`\[Theta]s$$ = 0.25, $CellContext`xs$$ = 
   0.12370197962726147`, $CellContext`ys$$ = 
   0.48445621085532237`, $CellContext`t$$, $CellContext`right$$, \
$CellContext`middle$$, $CellContext`top$$, $CellContext`r$$ = Rational[
   1, 2], $CellContext`s1$$ = 0.05, $CellContext`\[Theta]0Val$$ = 
   0.25, $CellContext`m$$, $CellContext`xFinal$$ = 
   0.5560079289463271, $CellContext`vxFinal$$ = 0.3179108066107007}, 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`t$$], 0, 
         Style["t", 14, FontFamily -> "Times", Italic]}, 0, 
        3.1322808904578032`}}, Typeset`size$$ = {448., {219., 229.}}, 
      Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
      False, $CellContext`t$$$22858$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`t$$, $CellContext`t$$$22858$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> ({$CellContext`\[Theta]s$$, $CellContext`xs$$, \
$CellContext`ys$$} = ReplaceAll[
            
            Which[$CellContext`t$$ < $CellContext`end$$, $CellContext`res$$, \
$CellContext`t$$ < $CellContext`end2$$, $CellContext`res2$$, True, {
             Pi/2, $CellContext`xFinal$$ + ($CellContext`t$$ - \
$CellContext`end2$$) $CellContext`vxFinal$$, 
              0}], $CellContext`tt$$ -> $CellContext`t$$]; Graphics[{{{
              GrayLevel[0.8], 
              Rotate[
               Rotate[
                
                Polygon[{{-0.05, 0}, {-0.05, -0.05}, {
                  2 $CellContext`r$$ + 0.1, -0.05}, {
                  2 $CellContext`r$$ + 0.1, 0}}], 0., {
                0., -0.30000000000000004`}], 0., {0, 0}]}, {
              GrayLevel[0.8], 
              Rotate[
               Rotate[
                
                Polygon[{{0, 2 $CellContext`r$$ + 0.1}, {
                  0, -0.05}, {-0.05, -0.05}, {-0.05, 2 $CellContext`r$$ + 
                   0.1}}], 0., {-0.30000000000000004`, 
                0.024999999999999967`}], 0., {0, 0}]}, {
              GrayLevel[0], 
              Rotate[
               Rotate[
                
                Line[{{0, 2 $CellContext`r$$ + 0.1}, {0, 0}, {
                  2 $CellContext`r$$ + 0.1, 0}}], 0., {0., -0.25}], 0., {0, 
               0}]}}, {Thick, 
             Rotate[
              Translate[
               
               Line[{{0, -$CellContext`r$$}, {
                 0, $CellContext`r$$}}], {$CellContext`xs$$, \
$CellContext`ys$$}], $CellContext`\[Theta]s$$]}, {$CellContext`color6, Dashed, 
             Line[{{0, ((4/3) $CellContext`r$$) Cos[
                  ReplaceAll[
                   Part[$CellContext`res$$, 1], $CellContext`tt$$ -> 0]]}, {
               1, ((4/3) $CellContext`r$$) Cos[
                  ReplaceAll[
                   Part[$CellContext`res$$, 1], $CellContext`tt$$ -> 
                   0]]}}]}, {Gray, 
             Text[
              $CellContext`font[
              "Ladder full motion"], {$CellContext`r$$ + 0.05, 
               2 $CellContext`r$$ + 0.05}, {0, 0}]}}, 
           PlotRange -> {{-0.05, 2 $CellContext`r$$ + 0.1}, {-0.05, 
              2 $CellContext`r$$ + 0.1}}, AspectRatio -> 1, ImageSize -> 280, 
           PlotRangePadding -> None]), 
        "Specifications" :> {{{$CellContext`t$$, 0, 
            Style["t", 14, FontFamily -> "Times", Italic]}, 0, 
           1 + $CellContext`end2$$}}, "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{522., {286., 296.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>(($CellContext`colors = ({$CellContext`color1, \
$CellContext`color2, $CellContext`color3, $CellContext`color4, \
$CellContext`color5, $CellContext`color6} = {
            ColorData[97][1], 
            ColorData[97][10], 
            ColorData[97][5], 
            ColorData[97][6], 
            ColorData[97][9], 
            Lighter[
             ColorData[97][7], 
             0.2]}); $CellContext`backgroundColors = \
({$CellContext`backgroundColor1, $CellContext`backgroundColor2} = {
            RGBColor[0.99, 0.97432, 0.91748], 
            RGBColor[0.9, 0.9, 0.9]}); $CellContext`font[
           Pattern[$CellContext`text, 
            Blank[]], 
           Optional[
            Pattern[$CellContext`size, 
             Blank[Integer]], 14], 
           Pattern[$CellContext`opts, 
            BlankNullSequence[]]] := 
         Style[$CellContext`text, $CellContext`size, FontFamily -> 
           "Times", $CellContext`opts]; $CellContext`\[Theta]0Val$$ = 
         0.25; $CellContext`res$$ = 
         With[{$CellContext`\[Theta]0$ = $CellContext`\[Theta]0Val$$, \
$CellContext`g$ = 1, $CellContext`\[Eta]$ = 1/3}, 
           ReplaceAll[{
             $CellContext`\[Theta][$CellContext`tt$$], 
             $CellContext`x[$CellContext`tt$$], 
             $CellContext`y[$CellContext`tt$$]}, 
            First[
             
             NDSolve[{
              Derivative[
                2][$CellContext`\[Theta]][$CellContext`tt$$] == \
$CellContext`g$ (Sin[
                   $CellContext`\[Theta][$CellContext`tt$$]]/($CellContext`r$$\
 + $CellContext`r$$ $CellContext`\[Eta]$)), 
               Derivative[1][$CellContext`\[Theta]][0] == 
               0, $CellContext`\[Theta][0] == $CellContext`\[Theta]0$, 
               Derivative[
                2][$CellContext`x][$CellContext`tt$$] == ((-$CellContext`r$$) 
                  Derivative[1][$CellContext`\[Theta]][$CellContext`tt$$]^2) 
                 Sin[
                   $CellContext`\[Theta][$CellContext`tt$$]] + \
($CellContext`r$$ Derivative[2][$CellContext`\[Theta]][$CellContext`tt$$]) Cos[
                   $CellContext`\[Theta][$CellContext`tt$$]], 
               Derivative[1][$CellContext`x][0] == 
               0, $CellContext`x[0] == $CellContext`r$$ 
                Sin[$CellContext`\[Theta]0$], 
               Derivative[
                2][$CellContext`y][$CellContext`tt$$] == ((-$CellContext`r$$) 
                  Derivative[1][$CellContext`\[Theta]][$CellContext`tt$$]^2) 
                 Cos[
                   $CellContext`\[Theta][$CellContext`tt$$]] - \
($CellContext`r$$ Derivative[2][$CellContext`\[Theta]][$CellContext`tt$$]) Sin[
                  $CellContext`\[Theta][$CellContext`tt$$]], 
               Derivative[1][$CellContext`y][0] == 
               0, $CellContext`y[0] == $CellContext`r$$ 
                Cos[$CellContext`\[Theta]0$]}, {
               $CellContext`\[Theta][$CellContext`tt$$], 
               $CellContext`x[$CellContext`tt$$], 
               $CellContext`y[$CellContext`tt$$]}, {$CellContext`tt$$, 0, 
               3.5}]]]]; $CellContext`end$$ = ReplaceAll[$CellContext`ttt, 
           FindRoot[Cos[
              ReplaceAll[
               
               Part[$CellContext`res$$, 
                1], $CellContext`tt$$ -> $CellContext`ttt]] - (2/3) Cos[
              ReplaceAll[
               Part[$CellContext`res$$, 1], $CellContext`tt$$ -> 
               0]], {$CellContext`ttt, 1.}]]; FullSimplify[
          Part[
           
           Solve[{$CellContext`Nf - $CellContext`m$$ $CellContext`g == \
$CellContext`m$$ 
              Derivative[
               2][$CellContext`y][$CellContext`tt$$], $CellContext`r$$ \
($CellContext`Nf Sin[
                 $CellContext`\[Theta][$CellContext`tt$$]]) == \
(($CellContext`\[Eta] $CellContext`m$$) $CellContext`r$$^2) 
              Derivative[2][$CellContext`\[Theta]][$CellContext`tt$$], 
             Derivative[
              2][$CellContext`y][$CellContext`t$$] == ((-$CellContext`r$$) 
                Derivative[1][$CellContext`\[Theta]][$CellContext`tt$$]^2) Cos[
                 $CellContext`\[Theta][$CellContext`tt$$]] - \
($CellContext`r$$ Derivative[2][$CellContext`\[Theta]][$CellContext`tt$$]) Sin[
                $CellContext`\[Theta][$CellContext`tt$$]], (($CellContext`m$$ \
$CellContext`g) $CellContext`r$$) (Cos[
                 $CellContext`\[Theta][0]] - Cos[
                $CellContext`\[Theta][$CellContext`tt$$]]) == (((1/
                 2) $CellContext`m$$) (
                1 + $CellContext`\[Eta])) ($CellContext`r$$ 
                Derivative[
                 1][$CellContext`\[Theta]][$CellContext`tt$$])^2}, \
{$CellContext`Nf, 
             Derivative[2][$CellContext`\[Theta]][$CellContext`tt$$], 
             Derivative[1][$CellContext`\[Theta]][$CellContext`tt$$], 
             Derivative[2][$CellContext`y][$CellContext`tt$$]}], 
           2]]; $CellContext`res2$$ = 
         With[{$CellContext`\[Theta]0$ = $CellContext`\[Theta]0Val$$, \
$CellContext`g$ = 1, $CellContext`\[Eta]$ = 1/3}, 
           ReplaceAll[{
             $CellContext`\[Theta][$CellContext`tt$$], 
             $CellContext`x[$CellContext`tt$$], 
             $CellContext`y[$CellContext`tt$$]}, 
            First[
             
             NDSolve[{
              Derivative[
                2][$CellContext`\[Theta]][$CellContext`tt$$] == \
($CellContext`g$ (2 + $CellContext`\[Eta]$ - (2 Cos[$CellContext`\[Theta]0$]) 
                  Cos[
                    $CellContext`\[Theta][$CellContext`tt$$]] + 
                  Cos[2 $CellContext`\[Theta][$CellContext`tt$$]])) (Sin[
                   $CellContext`\[Theta][$CellContext`tt$$]]/(($CellContext`r$\
$ (1 + $CellContext`\[Eta]$)) ($CellContext`\[Eta]$ + Sin[
                    $CellContext`\[Theta][$CellContext`tt$$]]^2))), 
               Derivative[2][$CellContext`x][$CellContext`tt$$] == 0, 
               Derivative[
                2][$CellContext`y][$CellContext`tt$$] == ((((
                    2 $CellContext`g$) $CellContext`\[Eta]$) Cos[
                    $CellContext`\[Theta][$CellContext`tt$$]]) (-
                    Cos[$CellContext`\[Theta]0$] + Cos[
                    $CellContext`\[Theta][$CellContext`tt$$]]) - \
($CellContext`g$ (1 + $CellContext`\[Eta]$)) Sin[
                    $CellContext`\[Theta][$CellContext`tt$$]]^2)/((
                 1 + $CellContext`\[Eta]$) ($CellContext`\[Eta]$ + Sin[
                    $CellContext`\[Theta][$CellContext`tt$$]]^2)), 
               Derivative[1][$CellContext`\[Theta]][$CellContext`end$$] == 
               ReplaceAll[
                 D[
                  
                  Part[$CellContext`res$$, 
                   1], $CellContext`tt$$], $CellContext`tt$$ -> \
$CellContext`end$$], Derivative[1][$CellContext`x][$CellContext`end$$] == 
               ReplaceAll[
                 D[
                  
                  Part[$CellContext`res$$, 
                   
                   2], $CellContext`tt$$], $CellContext`tt$$ -> \
$CellContext`end$$], Derivative[1][$CellContext`y][$CellContext`end$$] == 
               ReplaceAll[
                 D[
                  
                  Part[$CellContext`res$$, 
                   3], $CellContext`tt$$], $CellContext`tt$$ -> \
$CellContext`end$$], $CellContext`\[Theta][$CellContext`end$$] == ReplaceAll[
                 
                 Part[$CellContext`res$$, 
                  1], $CellContext`tt$$ -> $CellContext`end$$], \
$CellContext`x[$CellContext`end$$] == ReplaceAll[
                 
                 Part[$CellContext`res$$, 
                  2], $CellContext`tt$$ -> $CellContext`end$$], \
$CellContext`y[$CellContext`end$$] == ReplaceAll[
                 
                 Part[$CellContext`res$$, 
                  3], $CellContext`tt$$ -> $CellContext`end$$]}, {
               $CellContext`\[Theta][$CellContext`tt$$], 
               $CellContext`x[$CellContext`tt$$], 
               $CellContext`y[$CellContext`tt$$]}, {$CellContext`tt$$, \
$CellContext`end$$, 5}]]]]; $CellContext`end2$$ = ReplaceAll[$CellContext`ttt, 
           FindRoot[
            ReplaceAll[
            Pi/2 - Part[$CellContext`res2$$, 
              1], $CellContext`tt$$ -> $CellContext`ttt], {$CellContext`ttt, \
$CellContext`end$$ + 1.}]]; $CellContext`xFinal$$ = ReplaceAll[
           
           Part[$CellContext`res2$$, 
            2], $CellContext`tt$$ -> $CellContext`end2$$]; \
$CellContext`vxFinal$$ = ReplaceAll[
           D[
            
            Part[$CellContext`res2$$, 
             2], $CellContext`tt$$], $CellContext`tt$$ -> \
$CellContext`end2$$]; Null); Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{}],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{3.7209249067796435`*^9, 
  3.7209252465953913`*^9},ExpressionUUID->"5b34dad9-d03a-4e3b-a5a8-\
3580de79b8c3"]
}, {2}]],

Cell[TextData[{
 "Note that the detachment of the ladder from the wall is very subtle. It is \
easier to see this change by looking at the plots of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "."], "[", "t", "]"}], TraditionalForm]],
  ExpressionUUID->"f92f6f5c-b819-435c-96f6-f1108ceba3f2"],
 " over time. When the ladder detaches, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["x", "."], "[", "t", "]"}], "=", "constant"}], 
   TraditionalForm]],ExpressionUUID->"fa51544c-6120-4cbf-bad7-a165753ee4c2"],
 " because there are no longer any horizontal forces on the ladder."
}], "Text",
 CellChangeTimes->{{3.720512889475423*^9, 3.7205129150690393`*^9}, {
  3.720512950140974*^9, 
  3.7205129694354906`*^9}},ExpressionUUID->"169c2385-892a-448a-b70d-\
bd3548c0d019"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Initial", " ", "angle", " ", "of", " ", "the", " ", "ladder", " ", "with",
     " ", "the", " ", "wall"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]0Val", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Dynamics", " ", "before", " ", "the", " ", "ladder", " ", "disconnects", 
     " ", "from", " ", "the", " ", "wall"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]0", "=", "\[Theta]0Val"}], ",", 
           RowBox[{"g", "=", "1"}], ",", 
           RowBox[{"\[Eta]", "=", 
            FractionBox["1", "3"]}], ",", 
           RowBox[{"r", "=", 
            FractionBox["1", "2"]}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
            RowBox[{"x", "[", "tt", "]"}], ",", 
            RowBox[{"y", "[", "tt", "]"}]}], "}"}], "/.", 
          RowBox[{"First", "@", 
           RowBox[{"NDSolve", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], "==", 
                FractionBox[
                 RowBox[{"g", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], 
                 RowBox[{"r", "+", 
                  RowBox[{"r", " ", "\[Eta]"}]}]]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", 
                "0"}], ",", 
               RowBox[{
                RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
                "\[Theta]0"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "''"}], "[", "tt", "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "r"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "tt", "]"}], ")"}], "2"], 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], "+", 
                 RowBox[{"r", " ", 
                  RowBox[{
                   RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"r", " ", 
                 RowBox[{"Sin", "[", "\[Theta]0", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "''"}], "[", "tt", "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "r"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Theta]", "'"}], "[", "tt", "]"}], ")"}], "2"], 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], "-", 
                 RowBox[{"r", " ", 
                  RowBox[{
                   RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"r", " ", 
                 RowBox[{"Cos", "[", "\[Theta]0", "]"}]}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
               RowBox[{"x", "[", "tt", "]"}], ",", 
               RowBox[{"y", "[", "tt", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"tt", ",", "0", ",", "3.5"}], "}"}]}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Time", " ", "when", " ", "ladder", " ", "disconnects", " ", "from", " ", 
     "the", " ", "wall"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"end", "=", 
     RowBox[{"t", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "/.", 
           RowBox[{"tt", "\[Rule]", "t"}]}], "]"}], "-", 
         RowBox[{
          FractionBox["2", "3"], 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"res", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/.", 
            RowBox[{"tt", "\[Rule]", "0"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1."}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Dynamics", " ", "after", " ", "the", " ", "ladder", " ", "disconnects", 
      " ", "from", " ", "the", " ", "wall"}], ",", " ", 
     RowBox[{
     "used", " ", "to", " ", "make", " ", "the", " ", "next", " ", 
      "NDSolve"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "t"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FullSimplify", "@", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"Sum", " ", "of", " ", "vertical", " ", "forces"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Nf", "-", 
              RowBox[{"m", " ", "g"}]}], "\[Equal]", 
             RowBox[{"m", " ", 
              RowBox[{
               RowBox[{"y", "''"}], "[", "t", "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"Sum", " ", "of", " ", "torques"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"r", 
              RowBox[{"(", 
               RowBox[{"Nf", "*", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ")"}]}], 
             "\[Equal]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Eta]", " ", "m", " ", 
                SuperscriptBox["r", "2"]}], ")"}], " ", 
              RowBox[{
               RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Bottom", " ", "point", " ", "of", " ", "ladder", " ", "stays", 
              " ", "connected", " ", "to", " ", "floor"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "r"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ")"}], "2"], 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
              RowBox[{"r", " ", 
               RowBox[{
                RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"Conservation", " ", "of", " ", "energy"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"m", " ", "g", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "0", "]"}], "]"}], "-", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ")"}]}], "==", 
             RowBox[{
              FractionBox["1", "2"], "m", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Eta]"}], ")"}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"r", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], ")"}], 
               "2"]}]}]}], "\[IndentingNewLine]", "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Nf", ",", 
            RowBox[{
             RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{"y", "''"}], "[", "t", "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Solve", " ", "for", " ", "the", " ", "motion", " ", "after", " ", "the", 
     " ", "ladder", " ", "disconnects", " ", "from", " ", "the", " ", 
     "wall"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"res2", "=", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]0", "=", "\[Theta]0Val"}], ",", 
           RowBox[{"g", "=", "1"}], ",", 
           RowBox[{"\[Eta]", "=", 
            FractionBox["1", "3"]}], ",", 
           RowBox[{"r", "=", 
            FractionBox["1", "2"]}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
            RowBox[{"x", "[", "tt", "]"}], ",", 
            RowBox[{"y", "[", "tt", "]"}]}], "}"}], "/.", 
          RowBox[{"First", "@", 
           RowBox[{"NDSolve", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"\[Theta]", "''"}], "[", "tt", "]"}], "\[Equal]", 
                FractionBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "\[Eta]", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", "\[Theta]0", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}]}], "]"}]}], ")"}], 
                  " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], 
                 RowBox[{"r", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Eta]", "+", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}], "2"]}], 
                   ")"}]}]]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "''"}], "[", "tt", "]"}], "\[Equal]", "0"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "''"}], "[", "tt", "]"}], "\[Equal]", 
                FractionBox[
                 RowBox[{
                  RowBox[{"2", " ", "g", " ", "\[Eta]", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", "\[Theta]0", "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}]}], ")"}]}], 
                  "-", 
                  RowBox[{"g", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}], "2"]}]}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Eta]", "+", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", "tt", "]"}], "]"}], "2"]}], 
                   ")"}]}]]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Theta]", "'"}], "[", "end", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "tt"}], "]"}], "/.", 
                  RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "end", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "tt"}], "]"}], "/.", 
                  RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "'"}], "[", "end", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "tt"}], "]"}], "/.", 
                  RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"\[Theta]", "[", "end", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "/.", 
                  RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"x", "[", "end", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "/.", 
                  RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"y", "[", "end", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"res", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "/.", 
                  RowBox[{"tt", "\[Rule]", "end"}]}], ")"}]}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Theta]", "[", "tt", "]"}], ",", 
               RowBox[{"x", "[", "tt", "]"}], ",", 
               RowBox[{"y", "[", "tt", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"tt", ",", "end", ",", "5"}], "}"}]}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Time", " ", "when", " ", "ladder", " ", "hits", " ", "the", " ", 
     "floor"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"end2", "=", 
     RowBox[{"t", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "2"], "-", 
          RowBox[{"res2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"tt", "\[Rule]", "t"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"end", "+", "1."}]}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Plot", " ", "the", " ", "resulting", " ", "dynamics"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg1", "=", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "/@", 
        RowBox[{"Range", "@", "3"}]}], ",", 
       RowBox[{"font", "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<\[Theta][\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\""}], "}"}]}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.4"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot1", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{"res", ",", 
         RowBox[{"{", 
          RowBox[{"tt", ",", "0", ",", "end"}], "}"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"font", "[", 
            RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"font", "@", "\"\<Ladder full motion\>\""}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"leg1", ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.25", ",", "0.73"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "]"}]}],
          ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"end", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"end", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "end2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{"res2", ",", 
         RowBox[{"{", 
          RowBox[{"tt", ",", "end", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg2", "=", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "/@", 
        RowBox[{"Range", "@", "3"}]}], ",", 
       RowBox[{"font", "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"x\",
FontSlant->\"Italic\"], \".\"],
FontSlant->\"Italic\"]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<\!\(\*OverscriptBox[
StyleBox[\"y\",
FontSlant->\"Italic\"], \".\"]\)[\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)]\>\""}], "}"}]}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.4"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot2", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"res", ",", "tt"}], "]"}], "/.", 
           RowBox[{"tt", "\[Rule]", "t"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "end"}], "}"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"font", "[", 
            RowBox[{"\"\<t\>\"", ",", "Italic"}], "]"}], "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"font", "@", "\"\<Ladder full motion\>\""}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"leg2", ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.25", ",", "0.75"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "]"}]}],
          ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"end", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"end", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "end2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], "+", "0.5"}]}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"res2", ",", "tt"}], "]"}], "/.", 
           RowBox[{"tt", "\[Rule]", "t"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "end", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"centerPlot", "@", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"plot1", ",", "plot2"}], "}"}], "}"}], ",", 
      RowBox[{"Spacings", "\[Rule]", "5"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Top"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.720506941912729*^9, 3.7205070067585893`*^9}, {
   3.720507298161392*^9, 3.7205073862080145`*^9}, {3.72050750011578*^9, 
   3.720507506864246*^9}, {3.720507565422349*^9, 3.7205075775154924`*^9}, {
   3.7205076638479953`*^9, 3.7205076648329716`*^9}, {3.720507816024358*^9, 
   3.720507967538533*^9}, 3.7205080878653965`*^9, {3.7205082606387243`*^9, 
   3.720508276886671*^9}, {3.720508459144668*^9, 3.7205084924465685`*^9}, {
   3.7205085851535363`*^9, 3.7205086151797085`*^9}, {3.720508742162691*^9, 
   3.720508749656243*^9}, {3.720508829254761*^9, 3.720508860581355*^9}, {
   3.720511662998582*^9, 3.7205118054909534`*^9}, {3.720512055609269*^9, 
   3.720512126439538*^9}, 3.720512179208992*^9, {3.7205122207594995`*^9, 
   3.7205122308187933`*^9}, {3.7205123138362646`*^9, 
   3.7205123752060723`*^9}, {3.7205124643345003`*^9, 3.7205124649017324`*^9}, 
   3.7205124983037405`*^9, {3.720512531011568*^9, 3.7205125379051867`*^9}, 
   3.720512600172121*^9, {3.720512974926083*^9, 3.7205130130459566`*^9}, {
   3.7205455277607193`*^9, 
   3.720545578189761*^9}},ExpressionUUID->"07a35213-370c-4a34-85ff-\
9aea11a9b829"],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TagBox[
       GraphicsBox[{{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwV1Hk41dkfB3BSRLYIaSZ7aKhQJORdskUlyzBKsoQaJlGYYVCppKxRWXP5
CRnKoIiy3Ozr154I2d1rimS5VH6n8zznOc/rj/PH5/P+nCPt5Gnhso6NjS2F
7B/nraiEs92nHHU52H4sChfq4nTHe4DgJ9tO/DDHUXSm9piBxic/8sM7xRJD
JoZtYHP4cAs7MRUWtz2w5ywm11xFOYh1gur6uSecwWb/8PV64qjiasXuYTf8
d7qDzkk8MlvlQ+t3h8GMmDw3scYvFXT3Hk/cX3Gb3ERcrToYmjTlBSFvOqcA
8cVWu93sE5dhpK9wQ4h4q3t/l+uoD2o8H5wVJaZznQpoHvZDG6dgwjZij4y3
0mqDf0FRI05Fklj0sE39w/4ABLjJysv9qM/fSsS5JxgFHC5Ke4jD7k6fGZu+
ippJMW114sE+RdWHU9eQ0tGTrU182zer9+t4CLRX/B4dJX5fPZHzbOwG/m62
lTcnVhOWD3IavYm2eUNeW+KBZxly9cOhUKs68vkCser30SX/oduws7D67E18
65hs067BMCjpep/8m1hlOs0rtv8uFLf1yUcTh8ikltv3REH3naXOqx/1aH6q
v/17NOTYupXriR8MRaqNTEcjI845oIuYuat1w/2pGDRdy1H7SHy/8Vjuyngs
Vi4vccuzU6j0mhGxcolDxPNFxj5ixtbw4LyxOJg83fiLPjHcmiwcRu/jaogr
3Zl4msOEVTP8ECsWwnZZxFv+mXaSdIiHomXBrpfEuhZhzX8OxcPRz/VME/E9
Wn2q0mACqEH+3llinYNGhjH9SZgpPbf30DoK0b76sXY9qYj8ySJ6lnhpeb2k
hgoNmfUsAx4OCpkv3L4c9KEhVkDrdzniDWq7Uo+v0XDieeh3W2K6YskXD+F0
iLhdsW4k1hZtTf1HOwODOWXVFetJPZ0qPoVXMxAc7XNumDgxJtakrCYDx6P6
vNk3UFjmtV1oNHuMW2bp/frERRxjJgznTERNGbyniHfPsRYUw7PhX2+U9o2T
5PvUrkmlPRtjBuNKO7gohHtU0DRFn2A2QWPHcWLm5A1TY9oTvOBhOT8izh4U
SHMryoFRgbSQ4UYK0s07jmUO5EIl/5paDjeFO52K7TEP8qG6WTyihpdCULGp
avOLfIi35TovEXslXYzh7M2HpfJk4k4+Cr85F5kHiP0LZ3YrpShi+Xl0nIv/
F92nVLrs+Uk/hGw69ycWYMTJ2khQkALL/Gb3+5QiRK/fVV4mTGFGPVt9a3kR
GAuWuSziYfGm+xaDRRApNl3dv4VC7QdB6zqJ5zisV1D2nDjOK7knP/U5DjQH
1T4XIfMYU9gbkvYCYrzeG+rFKJynPvTtfFyCy43r1dV/puAdJuxMry7BlaSI
pkDiQD2DmVNjJdDfb11RS3yvKPv7XdmX0DfMK7fdTqEs3lP2Y9pLaPrQfr4h
QYHf8ZtHwaNSdP8hYMOQInnMbWXTjn8FiZsSHV93UCjPMQnrLH6FfZLTwuby
FBqc/xby6H2FXAWlwsfEg91Dcimir1G4bjvPSQUKXKWZR9fiXoO3dUb8iSKF
U9f3xb6JKcetBQbdQ4nCVW5F4UyDSigLKRhrqZI8aeOSDdaVWBD/4pROHL//
f8ozbpWwluec4VGj8MxFwlDtTiVoTI6j74kHq7b8Vd5aiS2yBbtD95H582cf
6rGpgl6g2T+f9lNYZLzL4fqdjpkAxyBhkPfaHKF3IbIaLBdJnawTFDjl199x
e1SNBHs7VRkzCqnB/u0uT6txWcI8NIW4Q83Nwam1GtUKf/x6/ySFAwmHgk7z
18AL5f5hFuS+6/zL45E10NPXmwmxpkBb+01VLbIWgSK7g6vsKXSpyUmtRtRj
ceQev8Ml8v9oTXNitBkbnwrJtCSR/L2rueTukVx5B+z8WigIJiqPCkR2YKQt
7YncunYICim/6SrqgljkTSEjvXa09h9ZYSvuwZtt24o6b7RjddGYLvDsLco1
Rre7N7dj2Wk8cqn9HTaei82zkO5AgVRigSE1gEj5r5e8/Tqgs2fi3UXWIA6e
Tzb7c6ADSXUCjTrhwzAQnb0WZdQJP5pmh0/YB8wta97NLOhEqXSe3U/JI3BU
2Huob3cXBpry7l1JHgWN7VN3cE4XXCVWTLQKxrAuIcDr5wPdyBZ/bTpHH8fm
qI3mwq3daDjIu3y6agIrrjricOyBBU+W/N7uSfzWVuzwnbsXpWstbOU9U5h6
wS/ult+LvhR3Wa3OaawZ/1coZPcWDmNW9TLjDOhSX62kpPpQa9m4tWKMibBG
QYGo4T7Eud9l1rFmIHVJxIRe9g7iym846dwfoRKta8j7qJ/kENriyfUJYz+d
yTIPGMBjS9NNBnyzqLjsulLp+x6rKgkbciNmwWO6aSXGYxC5TjIZdzfN4Xx9
w6LB+SHEnG8PkY6bw/XJvZvH9IYxcd3wQIzwZ7gikk+4dRieXh/2FKd8ht1k
nUKh+we4XdH7+kJiHsmJrXzuG0ZQ1jTosSdlHgu3Tly4lD6CI0s0CXv5L3DK
uPmN12oUWvt3ZrpmfoHkWalvQ2xjcDHtvbhDdQEydQxe8eoxzBRW9tu9XIBf
yjd2vvBxjKhckriouYhL0nmB6icmwHvdIF2dvgjP3YqSFjsnkTk5vNqjtwQ6
f7mcyvdJJKcVs2Yrl1DiIFM3Qvpcs6dIs+roMhpC445oNU3DvsP3uHvDMjrO
tJ3ZUcKAVsY128dNy7COn991+hUDor7hLkMtyxDzTnwaU8lAq3h6oGXHMiyF
q6vYGkguji152v3L0L/RqTrZx8D2WVl+3v+WkSxpZNq9ysAAX3trriALh0PT
FjUOMVEy1P9uQoiFqZSOtev6TMT9OzEhJcLC53UKr9qMmTj269fvceIsGIxH
nHA3Z6IsWWFPoAwLT53SBnKcmEhUCoo6vo+FzVdM801vMuH77XZSqAYL53Oj
FtLDmLBoi82q0mQhS9z400oEEzyXn1SoH2RB7u0FtrwHTPiXdn3abshCeXd5
kng2E9bhQ6s2xiyIZny+5ZvLhJo9g+ueCQulGkcUuvKZYLCzSXGasaA8Hxka
85KJ2k4e5UPmLBjpFRnNvWYi/bGIpr8lqY9m8tqczkSQn5R+0a8sdEu6TRXU
MmF7VOnkRxsW6J0SDVuamPg/qdPISw==
               "]]},
             Annotation[#, "Charting`Private`Tag$13991#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
8xAXjDd+aNKKHEfZtFCBBdz0/63xilIbIi93PpCJWYBavGW1wL52TAUYH4wU
+YLbDqk5/AId8PAcVStN+gIOYtDuJZWjy80j6yVSiyjn3TztLNqJd81D7mpJ
i+Cu+Gps/6ITR1doUg4KS/DyruxOVumCno5SxqWMJTiJPxzretsFZ1PWNXmN
ZcgziA26dTdmi+gDZ98uY5PHWi1qqRtj6telrul+RTS9VvlDSA+2BxilalV/
hUujBienRi8yPoysMY+sIJcN5su2XiSmlJLz9BU4a+1PMXJjolatWLfqxCrO
i9m+FNjFgkOXt5lb4yrUYruyYspY0Eu7b5vevIog+4URl3csiHmHOQ+3ruKX
j/ry+pUstEmk+ll0reJeeGjPaA0Lhy+05uoPrGJramSDWjsLkvNyQtv/WUW7
Qk1f6yQLg4KdbTnfkQjnPqfzvQgbZcMD/VPCJPyzc/MnRdmIKZiakhYl4Xgl
V71cnI2TVuvfYiRIZGRMH3WSYuNd4n/V/GRJXLfwLHijxEa8sn+E2QEScZeP
3rY3ZMN7IyjhsTaJiz1GP6sfZcO8PfpllS4J3+AoYR5jNrbdyCK0DpEQhGrZ
a1M2fMp7Pksak2hKN5fhsmHDOmx4zeY4idn5KA6WLRuaDjN8USYklnzPjWaf
ZWOGk0Oa9xSJ3ZoVGVaObNR1b1MxPEPixL2BkB+c2UhNF9X1sSDhapvusenC
hv8t6Z+LrUgU8I1a9lxhw/aE8uk5GxKWZVZ6WVfZ+B+TIgaW
               "]]},
             Annotation[#, "Charting`Private`Tag$13991#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
xiPP6bDbp3xw8jCb/Ku+68Kf0vF/BHMo0Q==
               "]]},
             
             Annotation[#, 
              "Charting`Private`Tag$13991#3"]& ]}, {}, {}}, {{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwV0H00lQcABvCLsDZNH6zItqj04XQXlkV4ltnQzXyUcnxW6+NGai4tisrt
coqi2rCUEcrUcaaiuR0mQpTrJqS4qVSk937f+6r7+e71x3Oe8/vj+edx3HEg
fJcpg8EIpjPdbSsWRUu3atB+o27U5iEB816Oc2qkBpVZgnCHHgKBnA6FhvYW
16WCxQICgjsJJ82jNGhtGRhzExJ4ympocIjRoNi1hh3WT0CatGE2a5sGCbVl
m86OELC/mdpRzdZgcknzVVsxgRSv7m+2p2vQwnbz8p0lxm7vuz9VldL7zkLx
9Qgx1LdNXY+3aPDkbnKT+oIYVMa5eTdfauDjGi3jPhdj47f719bP0KKzceXb
tGUSuO8sWh3irMX6WI8yxyQJYrOtEu9s0MJpDs8rhC/BDGVv6ZH9WnytjrN/
MEOKH4dElYMFWnxfUrBPyJKiq3atmLqlxfnGZ0TGBSnG9S8s7w1qkbkzgFU+
JkVWcf9C0ZQWVfta7k+slCFusS2nw14Hgi0o1qTLMLis4mKAtw6CK5zfottl
KPgy07Jkmw4X1sWo+j6VozOuKtGPp4PEWZ9g5S5H8YL5lSeu6LClNN84EinH
tXtDDoXdOhTFeTFXc+WInHi9F4QOr80Kx6xr5AjU+2j41nrYxpwP4fbL0RDz
5niuux6EJrCGa5Cjac2TEdVmPZJv8Dz0SxSwYHyRvipdj4jPA6fsQhV473d5
kirRg1mXc706TQFWX1r48iY9DmboBHXlCshC/zIseqlHSIQo6kCPAquCrDNu
mhjQ2udScZpUoNat19vG2YA4TlxNkpMS1/Y8Ix8GGfDkbViO8Gcl1tuu5jok
GsB7/LLraJoSC+sHQn0KDPiq7eArs6tKFDxsV07VGXC4alWj4JESx5kmZywe
GyD14M211ClRz83bO04awCBcw5avUIEbst0ufr4R8t7g55mbVTg/K/uzv9cZ
0YbR+AcnVPDxVz86FWvEkh9O3verU2FX5z/5rUeNMP/kTOhSkQpCT35+d4UR
Jik543Os1Ohf+vmOhHYjGL4XXew91bA3u3Fo5J0R45WnUrwT1Bh1Kc+usKLQ
vC61/FGJGt6C4d2mTAq19d0fDnSpIYr/JdctnEIX4zDTV6vG/MTvsnQpFMzn
PT1ivYKEsHXrr/aFFGannOb5bSXRPbPz8kw+hYlN7Fv8UyRiHxy7em6YgtMl
R2Ixn0RMrSh+2QgFZ4VZ1Mdpn/W0a6ZtErRG2HOH9hZV3jsRBRZyeg42kYga
252MFxR2GCbndrWQiNQGe0teU+hoNvYmdZIIX+nwOFBCwfTsOYv/+mnPSs8b
pT00KsPvAyTC5IP+qVIKAUHVx9iDJEJvF/xbJqNQwXeaO2+IRIifWemUggJn
ZsQJ9jCJjVHv91RNUTjWICuyeUXbJ8DR6wOF4SQLj/fTXlQ1LKTtuP/ISMsY
CdZ4bLDuI4VDf2R5Jr4hsYHT5xauo+BeZunXNkE7gimeoO3bbGfz5zsSQWvz
rmTqKaS2nhYnTZIINPovqDHQfwiK6uwI2q8u9/kaKXhkMi/Jpt1uzB2gXbpz
eX6HmHZ1tH8CReH5EC/nooREQG6jgaKd6+KfnSwl8T+bzpxN
               "]]},
             Annotation[#, "Charting`Private`Tag$14049#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwVyn0wlAkAx3GhujpdUt630jRJmVy2cl77OW2xu/a8XeWwEkWsl8gkdykp
rpizJ9dp3OkiHdX0ckIR1yncbYVUat/3iUZKRLJ59u25Z//4zXc+M78V8Rnh
e01NTEx49Iy9t8YpenwnidZCVtClNDFm92Y5Z0eSKFe3CiLSxQjK6pokaQuS
3IV62j2tKSdnR5FwYC97HrZfDDG3qYkRQ+KwxUyCJkuM8TSOJTeOhH/5laPc
Q2I4NGR31e0j8e95q1tjBWIc8BZ9uTuXhPgOsYp5VoxE33+21VaRqOdaj33T
LcbHZlP3/Lsk6izGBfxJMajDZYsbCBJmtxbdLHeUIHhjumejuQYL7/QM8dkS
bNjz6/oQZw24E+se2WdLwC+0ELRyNPA56nwuuUYC8w+9VT+ka1D0KdnzZZ8E
W1/ILwwINTCpDivmaCT476rnO+qmBq61/V2BLlIM61Rz7w/Qf/H0bY8IKY5V
PHWUqzXYrN6TzcuTInaldVaXgxZ1aan2M5elGFhd81ugrxawsTv4y4AUwqV5
cyvjtCixi2nrNJOhO7ZWEHBCC6b56AOGuwwVdrYXjl/U4rMVy8oSo2W4fP8F
44xIC2HFG3/WKRkiXw8lY1SLIHxXv7hRhiCdH9myUIcG/93kwUEZmmJe5Rdv
0CHHtdHK1FKOtk3PZVPf6iAIvDJ0xFuOOSY2uetydVjc7n1OuE+OtwHVb6hK
Hd4mpFueLpeD238o3KVNB8bHd5y2djneh57TOxE6mCrNMr4flWMde+Hhhll6
2JJ/c9baKHCV2eu7xFkPRZqVZTpLgctJkumHbD0MD29USTIV+Np6fQFDoEdI
9NSgx+8KODY+C/UT6hHB6l3k8kAB4cPOD+obehTF8mbmTyuQ7zbrpzlP9FgS
b1tnvVyJxoKS5OFpPbbfzUVjsBIFIbvtd9ka0M3LF7JylDi9oPDzeh8DRjYt
F+27qIQf6+PjU3wDfELiW488VmJv9/XSjiMGvAmbONCmUaLPq6VUVGMA55qN
bamLCk9XfRGf0mmAxOdlZliECg5mf+XIRgxgrGQ11x9TQel6vrDGgkLL1OS9
1ddV8O2RJpq6USia3vLjWYkK8l0JxcxwCgUuFZW9ZgRsBV8d0x6gIE2P7WHb
E+jr2Lnf4QwF1Rruq0g3AqJ53dXzWii0LzKfcN9KgP/g6J9lUgobrIQvjkcR
iLkq37VaRtuLOX/I6J+97NuNjhvwDYimvWOqZEROYeM1xxqTGAJRg4mZUFHw
4NSn5vEJRGp4vmNDFLwKOmblxBEIX8t4EjRGAR+mXFMSaS/ILVHS9reviBXR
DpsYYGWP0/b3LnNJIhDaLLz1x3vapfnqYdohAWZV6kkKAWsXdCQkEwiOeptU
q6awNd55Bz+Vtl/gCu9PFLadEp1sM9qpVtpn9I3UO45pBLjDfJ52hkKgocFJ
SpuT1c8M11JgV2J0Rwbt7W7vXhvdMbi0mTbbs+Rino72SGGo9X4CQQaW3SU9
BY7Ho6anRr+s7t9soMDlZ4wwM2l3GoqfGX3CyvG00XXRrBSKQvCVJt4k7cDi
23rK6CeR+aFZBP4HKOR9CQ==
               "]]},
             Annotation[#, "Charting`Private`Tag$14049#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwVzns0lAkABXBS9FZJathdaiutkpTj0XDLc5BItUnoIeSxlUFRKpSzRRrq
oBcteUQpS7LfrFnJIGmYMSPRbJRCefQQmflm5ttv/7jnnt+5/1yjA0e8g6ao
qal50Pm/n6wy3DO6S4aeTRrKtLsSTGtlr4j2kWHRVP1OfqkELHbDFxlty67p
JWSJBAJu2PlpvvTel28UekeCl+5VVQZ+Mlzp0r/pUCjB6G9u89z3yTBwv5Ix
kSsBoyK6ofiQDGnXYuy2XZYgyqZ57f44GQrXHljSGytBMPOxc0GODCZeWQvU
N0vw7dGUdQm1MtiFrj40PksCKj5Dp6JXhklb9iPDTjG2bDhs9XCqHFtuGTDe
3RRj/cEsM88VcnybvBtfGiSGf/LscK6bHJHEchOpsRhTv7bmnDwsR/q1ZIHZ
cDucOqW3OzhyBCxNMeJWtONpmdUwVSmHcSTH4lhUO/oVPVr1HXJY9/S5JFi2
IzFbrC+dkINZnfC+hxQhYJkuu4FBYqRYJrHhitCxMv+GC5PE2u1EsG68CJwf
Tmld30fixNi8Lp6lCI0BBeH250j0WA9a3RkTInux3u2zhSSO5TgInSqFKK3v
NMhsJlG8KccsNkIIn4G+UAyRiJ0XsTh2lRAsha2M0FbAVJleyKttQ5Xfu4SU
9Qr4OG1IN1/ThhqLF6/GdiiQcvXm7nv5rdBUWxS3Jk6B3jHnooSZrfhon/eB
uq7AJTZDyjkhgLso1tu4RoHnw5NXKoae45NXrtKwV4FB9ayztVufY42rdnyF
uhIyE3OHo9wWlJm3MheuUCJ17mv7B3otKA3pGm9xVaKhMzJPGvMMm3XNkgzC
lRiL0XVm/NsM/YcSL1uOEll8tewoi2ZwWvhfJ8qVICap+wuznyLBVD1Ns10J
nmu1oY68CQ+TUkP7x5Voc+5/w/NoQpLn/iV79VTQqj4Sqn+3EZfnJM+6s1EF
9u+79J5NNsDW8Zvwgr8KhxVHGAe9GhDU+OBS3WkVLs4/XZBcwkebNXGpOV+F
zqzJiAtf6yFePvdAGF+F05fLf3zvVA+Gxp/HXw2qkDku8H56/glem/yRnD+b
womIBQHzBXVgCrqDp5hSKBpsmrbUoA7SvYEp5t4UvvNjtrv5PoZeuGUiGUVB
xbJiDjjXoq1u11FGJoWssG2yj1Iemmc05s0gKKzW5uk4e9XA/9mZooxuCoeW
a7081c2FX5l078pXFDSrjrZ9FtNOt17Co2288kxCoID2r2Opg1IKbz3TtFmP
ufB9GxyJHgqZMxPfzCniwkfuwRzpozC7fPfOi5FceP9i0M4aoRDoEJe4Yzrt
OXGpr2kXCpru/6POxbbPHY7RoxQW3hBmGpMEvB5xqm99ov/U6GSQIwQ87TVy
Jr5QWLY9ipkrJrDF92NIwQSFkJPmIS9yadu6GNl8p1D34bgZ8yptw4LuNtr3
ypIq8zIIuPf7e5CTFEiNof7wcwTc2CJzb5KC0TWGhjKU9k7T4QHamvtzr+8L
JOBqlVp4SkHhheHIUL0fAZbKcXGJkoJFwOjfFzxpv8kT2akonHXJtxlm0ear
UiS016n9HLXVnnbxHscwikKTXXRQ+UYCLil/KSnaP3GvzF9gQeA/IQuFnw==

               "]]},
             Annotation[#, "Charting`Private`Tag$14049#3"]& ]}, {}, {}}}, 
         InsetBox[
          
          TemplateBox[{
           StyleBox[
            "\"\[Theta][\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)]\"", 14, FontFamily -> "Times", StripOnInput -> False],
            StyleBox[
            "\"\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"]\\)\
[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)]\"", 14, 
             FontFamily -> "Times", StripOnInput -> False],StyleBox[
            "\"\\!\\(\\*\\nStyleBox[\\\"y\\\",\\nFontSlant->\\\"Italic\\\"]\\)\
[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)]\"", 14, 
             FontFamily -> "Times", StripOnInput -> False]},
           "LineLegend",
           DisplayFunction->(FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.4}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}],
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"Spacings", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"0.2`", ",", "0.4`"}], "}"}]}]}], "]"}]& )], 
          Scaled[{0.25, 0.73}], ImageScaled[{0.5, 0.5}],
          BaseStyle->{FontSize -> Larger},
          FormatType->StandardForm]},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{
          FormBox[
           StyleBox[
           "\"t\"", 14, FontFamily -> "Times", Italic, StripOnInput -> False],
            TraditionalForm], None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Epilog->{
          Dashing[{Small, Small}], 
          LineBox[{{1.5839675398412985`, -1}, {1.5839675398412985`, 3}}]},
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->All,
        ImageSize->250,
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox[
          "\"Ladder full motion\"", 14, FontFamily -> "Times", StripOnInput -> 
           False], TraditionalForm],
        PlotRange->
         NCache[{{0, 2.1322808904578032`}, {0, Rational[1, 2] Pi}}, {{
           0, 2.1322808904578032`}, {0, 1.5707963267948966`}}],
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}],
       InterpretTemplate[Legended[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
MmF7VOnkRxsW6J0SDVuamPg/qdPISw==
                 "]]}, "Charting`Private`Tag$13991#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
8xAXjDd+aNKKHEfZtFCBBdz0/63xilIbIi93PpCJWYBavGW1wL52TAUYH4wU
+YLbDqk5/AId8PAcVStN+gIOYtDuJZWjy80j6yVSiyjn3TztLNqJd81D7mpJ
i+Cu+Gps/6ITR1doUg4KS/DyruxOVumCno5SxqWMJTiJPxzretsFZ1PWNXmN
ZcgziA26dTdmi+gDZ98uY5PHWi1qqRtj6telrul+RTS9VvlDSA+2BxilalV/
hUujBienRi8yPoysMY+sIJcN5su2XiSmlJLz9BU4a+1PMXJjolatWLfqxCrO
i9m+FNjFgkOXt5lb4yrUYruyYspY0Eu7b5vevIog+4URl3csiHmHOQ+3ruKX
j/ry+pUstEmk+ll0reJeeGjPaA0Lhy+05uoPrGJramSDWjsLkvNyQtv/WUW7
Qk1f6yQLg4KdbTnfkQjnPqfzvQgbZcMD/VPCJPyzc/MnRdmIKZiakhYl4Xgl
V71cnI2TVuvfYiRIZGRMH3WSYuNd4n/V/GRJXLfwLHijxEa8sn+E2QEScZeP
3rY3ZMN7IyjhsTaJiz1GP6sfZcO8PfpllS4J3+AoYR5jNrbdyCK0DpEQhGrZ
a1M2fMp7Pksak2hKN5fhsmHDOmx4zeY4idn5KA6WLRuaDjN8USYklnzPjWaf
ZWOGk0Oa9xSJ3ZoVGVaObNR1b1MxPEPixL2BkB+c2UhNF9X1sSDhapvusenC
hv8t6Z+LrUgU8I1a9lxhw/aE8uk5GxKWZVZ6WVfZ+B+TIgaW
                 "]]}, "Charting`Private`Tag$13991#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
xiPP6bDbp3xw8jCb/Ku+68Kf0vF/BHMo0Q==
                 "]]}, "Charting`Private`Tag$13991#3"]}}, {}, {}}, {{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwV0H00lQcABvCLsDZNH6zItqj04XQXlkV4ltnQzXyUcnxW6+NGai4tisrt
coqi2rCUEcrUcaaiuR0mQpTrJqS4qVSk937f+6r7+e71x3Oe8/vj+edx3HEg
fJcpg8EIpjPdbSsWRUu3atB+o27U5iEB816Oc2qkBpVZgnCHHgKBnA6FhvYW
16WCxQICgjsJJ82jNGhtGRhzExJ4ympocIjRoNi1hh3WT0CatGE2a5sGCbVl
m86OELC/mdpRzdZgcknzVVsxgRSv7m+2p2vQwnbz8p0lxm7vuz9VldL7zkLx
9Qgx1LdNXY+3aPDkbnKT+oIYVMa5eTdfauDjGi3jPhdj47f719bP0KKzceXb
tGUSuO8sWh3irMX6WI8yxyQJYrOtEu9s0MJpDs8rhC/BDGVv6ZH9WnytjrN/
MEOKH4dElYMFWnxfUrBPyJKiq3atmLqlxfnGZ0TGBSnG9S8s7w1qkbkzgFU+
JkVWcf9C0ZQWVfta7k+slCFusS2nw14Hgi0o1qTLMLis4mKAtw6CK5zfottl
KPgy07Jkmw4X1sWo+j6VozOuKtGPp4PEWZ9g5S5H8YL5lSeu6LClNN84EinH
tXtDDoXdOhTFeTFXc+WInHi9F4QOr80Kx6xr5AjU+2j41nrYxpwP4fbL0RDz
5niuux6EJrCGa5Cjac2TEdVmPZJv8Dz0SxSwYHyRvipdj4jPA6fsQhV473d5
kirRg1mXc706TQFWX1r48iY9DmboBHXlCshC/zIseqlHSIQo6kCPAquCrDNu
mhjQ2udScZpUoNat19vG2YA4TlxNkpMS1/Y8Ix8GGfDkbViO8Gcl1tuu5jok
GsB7/LLraJoSC+sHQn0KDPiq7eArs6tKFDxsV07VGXC4alWj4JESx5kmZywe
GyD14M211ClRz83bO04awCBcw5avUIEbst0ufr4R8t7g55mbVTg/K/uzv9cZ
0YbR+AcnVPDxVz86FWvEkh9O3verU2FX5z/5rUeNMP/kTOhSkQpCT35+d4UR
Jik543Os1Ohf+vmOhHYjGL4XXew91bA3u3Fo5J0R45WnUrwT1Bh1Kc+usKLQ
vC61/FGJGt6C4d2mTAq19d0fDnSpIYr/JdctnEIX4zDTV6vG/MTvsnQpFMzn
PT1ivYKEsHXrr/aFFGannOb5bSXRPbPz8kw+hYlN7Fv8UyRiHxy7em6YgtMl
R2Ixn0RMrSh+2QgFZ4VZ1Mdpn/W0a6ZtErRG2HOH9hZV3jsRBRZyeg42kYga
252MFxR2GCbndrWQiNQGe0teU+hoNvYmdZIIX+nwOFBCwfTsOYv/+mnPSs8b
pT00KsPvAyTC5IP+qVIKAUHVx9iDJEJvF/xbJqNQwXeaO2+IRIifWemUggJn
ZsQJ9jCJjVHv91RNUTjWICuyeUXbJ8DR6wOF4SQLj/fTXlQ1LKTtuP/ISMsY
CdZ4bLDuI4VDf2R5Jr4hsYHT5xauo+BeZunXNkE7gimeoO3bbGfz5zsSQWvz
rmTqKaS2nhYnTZIINPovqDHQfwiK6uwI2q8u9/kaKXhkMi/Jpt1uzB2gXbpz
eX6HmHZ1tH8CReH5EC/nooREQG6jgaKd6+KfnSwl8T+bzpxN
                 "]]}, "Charting`Private`Tag$14049#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVyn0wlAkAx3GhujpdUt630jRJmVy2cl77OW2xu/a8XeWwEkWsl8gkdykp
rpizJ9dp3OkiHdX0ckIR1yncbYVUat/3iUZKRLJ59u25Z//4zXc+M78V8Rnh
e01NTEx49Iy9t8YpenwnidZCVtClNDFm92Y5Z0eSKFe3CiLSxQjK6pokaQuS
3IV62j2tKSdnR5FwYC97HrZfDDG3qYkRQ+KwxUyCJkuM8TSOJTeOhH/5laPc
Q2I4NGR31e0j8e95q1tjBWIc8BZ9uTuXhPgOsYp5VoxE33+21VaRqOdaj33T
LcbHZlP3/Lsk6izGBfxJMajDZYsbCBJmtxbdLHeUIHhjumejuQYL7/QM8dkS
bNjz6/oQZw24E+se2WdLwC+0ELRyNPA56nwuuUYC8w+9VT+ka1D0KdnzZZ8E
W1/ILwwINTCpDivmaCT476rnO+qmBq61/V2BLlIM61Rz7w/Qf/H0bY8IKY5V
PHWUqzXYrN6TzcuTInaldVaXgxZ1aan2M5elGFhd81ugrxawsTv4y4AUwqV5
cyvjtCixi2nrNJOhO7ZWEHBCC6b56AOGuwwVdrYXjl/U4rMVy8oSo2W4fP8F
44xIC2HFG3/WKRkiXw8lY1SLIHxXv7hRhiCdH9myUIcG/93kwUEZmmJe5Rdv
0CHHtdHK1FKOtk3PZVPf6iAIvDJ0xFuOOSY2uetydVjc7n1OuE+OtwHVb6hK
Hd4mpFueLpeD238o3KVNB8bHd5y2djneh57TOxE6mCrNMr4flWMde+Hhhll6
2JJ/c9baKHCV2eu7xFkPRZqVZTpLgctJkumHbD0MD29USTIV+Np6fQFDoEdI
9NSgx+8KODY+C/UT6hHB6l3k8kAB4cPOD+obehTF8mbmTyuQ7zbrpzlP9FgS
b1tnvVyJxoKS5OFpPbbfzUVjsBIFIbvtd9ka0M3LF7JylDi9oPDzeh8DRjYt
F+27qIQf6+PjU3wDfELiW488VmJv9/XSjiMGvAmbONCmUaLPq6VUVGMA55qN
bamLCk9XfRGf0mmAxOdlZliECg5mf+XIRgxgrGQ11x9TQel6vrDGgkLL1OS9
1ddV8O2RJpq6USia3vLjWYkK8l0JxcxwCgUuFZW9ZgRsBV8d0x6gIE2P7WHb
E+jr2Lnf4QwF1Rruq0g3AqJ53dXzWii0LzKfcN9KgP/g6J9lUgobrIQvjkcR
iLkq37VaRtuLOX/I6J+97NuNjhvwDYimvWOqZEROYeM1xxqTGAJRg4mZUFHw
4NSn5vEJRGp4vmNDFLwKOmblxBEIX8t4EjRGAR+mXFMSaS/ILVHS9reviBXR
DpsYYGWP0/b3LnNJIhDaLLz1x3vapfnqYdohAWZV6kkKAWsXdCQkEwiOeptU
q6awNd55Bz+Vtl/gCu9PFLadEp1sM9qpVtpn9I3UO45pBLjDfJ52hkKgocFJ
SpuT1c8M11JgV2J0Rwbt7W7vXhvdMbi0mTbbs+Rino72SGGo9X4CQQaW3SU9
BY7Ho6anRr+s7t9soMDlZ4wwM2l3GoqfGX3CyvG00XXRrBSKQvCVJt4k7cDi
23rK6CeR+aFZBP4HKOR9CQ==
                 "]]}, "Charting`Private`Tag$14049#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVzns0lAkABXBS9FZJathdaiutkpTj0XDLc5BItUnoIeSxlUFRKpSzRRrq
oBcteUQpS7LfrFnJIGmYMSPRbJRCefQQmflm5ttv/7jnnt+5/1yjA0e8g6ao
qal50Pm/n6wy3DO6S4aeTRrKtLsSTGtlr4j2kWHRVP1OfqkELHbDFxlty67p
JWSJBAJu2PlpvvTel28UekeCl+5VVQZ+Mlzp0r/pUCjB6G9u89z3yTBwv5Ix
kSsBoyK6ofiQDGnXYuy2XZYgyqZ57f44GQrXHljSGytBMPOxc0GODCZeWQvU
N0vw7dGUdQm1MtiFrj40PksCKj5Dp6JXhklb9iPDTjG2bDhs9XCqHFtuGTDe
3RRj/cEsM88VcnybvBtfGiSGf/LscK6bHJHEchOpsRhTv7bmnDwsR/q1ZIHZ
cDucOqW3OzhyBCxNMeJWtONpmdUwVSmHcSTH4lhUO/oVPVr1HXJY9/S5JFi2
IzFbrC+dkINZnfC+hxQhYJkuu4FBYqRYJrHhitCxMv+GC5PE2u1EsG68CJwf
Tmld30fixNi8Lp6lCI0BBeH250j0WA9a3RkTInux3u2zhSSO5TgInSqFKK3v
NMhsJlG8KccsNkIIn4G+UAyRiJ0XsTh2lRAsha2M0FbAVJleyKttQ5Xfu4SU
9Qr4OG1IN1/ThhqLF6/GdiiQcvXm7nv5rdBUWxS3Jk6B3jHnooSZrfhon/eB
uq7AJTZDyjkhgLso1tu4RoHnw5NXKoae45NXrtKwV4FB9ayztVufY42rdnyF
uhIyE3OHo9wWlJm3MheuUCJ17mv7B3otKA3pGm9xVaKhMzJPGvMMm3XNkgzC
lRiL0XVm/NsM/YcSL1uOEll8tewoi2ZwWvhfJ8qVICap+wuznyLBVD1Ns10J
nmu1oY68CQ+TUkP7x5Voc+5/w/NoQpLn/iV79VTQqj4Sqn+3EZfnJM+6s1EF
9u+79J5NNsDW8Zvwgr8KhxVHGAe9GhDU+OBS3WkVLs4/XZBcwkebNXGpOV+F
zqzJiAtf6yFePvdAGF+F05fLf3zvVA+Gxp/HXw2qkDku8H56/glem/yRnD+b
womIBQHzBXVgCrqDp5hSKBpsmrbUoA7SvYEp5t4UvvNjtrv5PoZeuGUiGUVB
xbJiDjjXoq1u11FGJoWssG2yj1Iemmc05s0gKKzW5uk4e9XA/9mZooxuCoeW
a7081c2FX5l078pXFDSrjrZ9FtNOt17Co2288kxCoID2r2Opg1IKbz3TtFmP
ufB9GxyJHgqZMxPfzCniwkfuwRzpozC7fPfOi5FceP9i0M4aoRDoEJe4Yzrt
OXGpr2kXCpru/6POxbbPHY7RoxQW3hBmGpMEvB5xqm99ov/U6GSQIwQ87TVy
Jr5QWLY9ipkrJrDF92NIwQSFkJPmIS9yadu6GNl8p1D34bgZ8yptw4LuNtr3
ypIq8zIIuPf7e5CTFEiNof7wcwTc2CJzb5KC0TWGhjKU9k7T4QHamvtzr+8L
JOBqlVp4SkHhheHIUL0fAZbKcXGJkoJFwOjfFzxpv8kT2akonHXJtxlm0ear
UiS016n9HLXVnnbxHscwikKTXXRQ+UYCLil/KSnaP3GvzF9gQeA/IQuFnw==

                 "]]}, "Charting`Private`Tag$14049#3"]}}, {}, {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
           GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {
             Style["t", 14, FontFamily -> "Times", Italic], None}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
             Dashing[{Small, Small}], 
             Line[{{1.5839675398412985`, -1}, {1.5839675398412985`, 3}}]}, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 250, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           Style["Ladder full motion", 14, FontFamily -> "Times"], 
           PlotRange -> {{0, 2.1322808904578032`}, {0, Rational[1, 2] Pi}}, 
           PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           LineLegend[{
             RGBColor[0.368417, 0.506779, 0.709798], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             RGBColor[0.560181, 0.691569, 0.194885]}, {
             Style[
             "\[Theta][\!\(\*\nStyleBox[\"t\",\nFontSlant->\"Italic\"]\)]", 
              14, FontFamily -> "Times"], 
             Style[
             "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)[\!\(\*\n\
StyleBox[\"t\",\nFontSlant->\"Italic\"]\)]", 14, FontFamily -> "Times"], 
             Style[
             "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)[\!\(\*\n\
StyleBox[\"t\",\nFontSlant->\"Italic\"]\)]", 14, FontFamily -> "Times"]}, 
            LabelStyle -> {}, LegendLayout -> "Column", 
            Spacings -> {0.2, 0.4}]], 
          Scaled[{{0.25, 0.73}, {0.5, 0.5}}], Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True], 
      TagBox[
       GraphicsBox[{{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwVkHk01AkAx2U7FoXVs2/Vy3N0jRTVyqzKt3XkWku5tpo3kSZZ1pGrZncy
26VyRbNWxRtDZEJbcrRdmIqM3PxSyDGMK78fcsyP2bXtH5/3+ffzPobHQg9y
VFVUVFw/878vJd842n7Yz1qFfzzreL2TdWCNwHqQAObrtaQpqTvwhRNahYQb
rmXOivkiSzRdEazjEUfh/msaFS5ywC6TCkkQEQrxtevOQSIfBHI9df2JWLDj
BBciRQE4byR8ziaSIWWoHy4TxeBatN11FiGE1elJ1crsOFxt3dycknYfJoHe
DEZeOk429b1j5D4CsSSS2OeVDb7a5tV59pW467+4tBH5CH6TaBOY9BL3E3zH
L5bcQ9uO9QYLia+hO8n9ysK/GF1WI8she4M1Bb18SUkpek+9XLE+tQlSowOE
dPERtG+ayrSSWpA4m1x4dO1TaOuYvmgracNef8Oukxcr0NBpO69STiBA6asu
9K3CwqyjROuvDhANYS2XlRIojg0mzTW/h2HX9hKl5CWKDW4W72/qgleV3dbS
U9XYYyZ/H0J/gIPizN1Kt9e4VaMl3ZPQi+AJnav0VilispgtUVf60M3hFUfN
1OGxYRFrbUY/GAWm3ESyHl11RamRGTL01BiUazU34oT+vLNV8QAKOeNprOkm
5Os9c5mUDCJCe2zTTtUW1O5dqThSJUeviKkRtrQVB9XvbNzZPoTDMzb5w8Zt
eLxYr/KcGEaYTlJTqWU73mUGGVu1jqAs1EPo50rAd8DztdHgKMw916SbnH+L
ag/pNxUDY5AQSzTFhR0QBMWP1dAfYc53Dy1SvIOe6YvlEjUSmNpd/MqxEzzd
uPrQFRQMJOGpD+O7kOvhomG/agLlERMWOdPdWDC/sawwcQJnfMQPNNx7UHjM
6Ha8xiQ2q8m/D/DpRcrJ5vOGgklIfusRZ63tg/zc/u9SVk9hq4umZ1RHH0LD
+8zKM6eQaV4dklfQj4BIG2WZ/ieEdJv/sjFGhid1H4LNMj+BeeiN6LndAGzn
svTZG6dhHCdqe2EyCCtLRt6JvGmwIqakFl/KwXF5G7Jh+wy8roq3VS3K8fFh
ZSfr7xmEHfEW5cwPod88TD+EOQsPuSu/Y2wYK8/ZZ1tIZjGXnr+PTY8gb6h3
gbCZQ3pZo6ZQOYoMUTk9UTmHNOcLbmqqH/HKrIRZ5aTA2WeGt/s3jIPdEu0a
VKuA0ZBMpmpNwur274dy6xQoZa6WzdqQ+Do6gdNTr8A5NdszYw4kGvSyeR4t
CnTH5/9MHCBh7VdftLtTgQBmjt9DDol1E8aaK8cViO0uzbqSSKJrVXNDoTYN
WYTH8TvdJB71dL6X69Cff8vt7vWTEDyQyw10adQNFzwtHSLxg5fyX4EejUWr
D+HVkySeZGwy4xnRILbZfCKXUbi55Wyy67c0ODkFnqxtFKL/uXwrbhcNfZ0R
cfBOCgcbr9+pYtLgO15K4zEpqEeIKyz20hDmyi1ENhS4j9uodftp/PmWk0h5
U/BO6FnwcaTxI6M2cymLwg726IpUZxpblH/Yr/GjMLpExWC5Gw3L0yFHHIIo
VLeqm+47QOOnGW4tO4xCdq4uk+tBg3drqiE6isLZGAO7Eq/PPbHtQclcCoec
triTPjS4qcZZ+bEU/gM1B37E
               "]]},
             Annotation[#, "Charting`Private`Tag$14096#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
/w==
               "]]},
             Annotation[#, "Charting`Private`Tag$14096#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwV1Pk71AkcwPHRriNHrGM3teZB04VdHdLsLD4iJMnmSGoWjRyDssnR43mo
VJRIjmqVa5SrUJGIbT5IMUSG8f0qtpwjR46I+UZs+8P7ef0Hbx1OkKP3ChqN
Zv+t/41JTPPoPHzUjObpsqPlkiaf25BqNkQAxKveYW0/ugK/s4WOLMIB4uT1
1Ss5sth2OVUrkvAA3/Uj5k2cn9BYD+sCiCCIWR1oQHA2IjfCWcOLOAMZuKFR
yWsnntfN4rsTieDDT5pbe8wGr4XtTmETWcDb9Uu1iZ8rxnVsEibdeAhN9DWa
beF+6NfW92ZzbiVMsONSOiyD8ezKTWp5VjXA/8ozv25zGgNfJVhwr9ZD2BHv
s6s+R6FoG0N7IaERFnm+5w49iMYe1ogMDLyC23rVS2k2MdgbXC/LSG6DJSlR
YP/MZVS5ZTCgfLUdGlUz3IxiE1BF1eC56LEIBM0s6/Tma9jabfmFVkEAp9zh
e8emZFyY21On/KALdH8WHgh/k4oSztDVeeFbeCRXvpdjfBNLtW+VWrf1QOGX
ONXF+DQ0MRS/PUG9gy2VY97LZul4u0G5ySS+F474fjyzRjULw7OZ7aGX+8C0
K18jfSobq3SK2WvT+2EqYlzNOCkHe5qLk0PSB8AkUp9hsfUu+tC/7GWVDoKV
uRrXQT0PCzSf2U3XDcFGZi9t+YcCFJgqSo7UiiFYfFq5TvkeOsrnb9jeOQz3
BetmBj2LsGq5hcYnPgBjjVLUnbISfJMRsI7VMQI0liwpk/wQPQedG3WHRkFN
PpSR8fURvnRqWo2DY1ApbZa8zC3D1IArYw3UOOzbnORwQLUcNQ2ey9StnICb
6kJea/sTjNSIbQmSnYSQei25+ymVmOtkp2ClNAUM60sT6plVuLAlTbooYQrc
GV2JoYX/YBFH9+4VhWmY9hro+rWVj0l+wvM6qdPgFr1HdmVeDYqjrX9LUvsE
lS90VF4M1mLQyT7DioxP4HcxNL/h4HP0DbFYfEKfgV0FecnZjfVY3fwu0DBj
Bpye0af2271Ey/lsuvuGWRCZTfIYCo3I2rk5zydvFsgOoxgtgQC97cgT67d+
BjmvQ6bcV804XlbTzX76GfjOYbN6H1qwf8tf9BPMOTgp7d+3afk1KkZb5eyo
mwPXXL534HYh5g33LhAW87A/M+6m8rF2TOdVUFM185DV2VZtm9WBLwwfM2tt
JSCoMm1gynWie3uYfYBAAsd362WuCCCQdfecW26zBJ6Wh1w8fJLAH8Pivd+3
SCCQbSMoCyewVTMn0qldAqJtzj7+Fwg0O9pS/Hu3BBInL8wOZxCoNbVuleJH
CcR4WTgyhAT2KAlbi1QoMNX0j+cxSax83/1WrEqBf/PfwwwgMfWRWKytQcGI
k2dmoRWJ+1wWl1I1KYjVH6dXOJJYnb7RMFKXgkIj+vH+QBJv6Ucl2htRYMYT
WUbwSAz7eul2rDEFKjNstloBiY6vU/JrmRQEjwrbiktIlD9ViDtMKfD481SL
uJrEiCrRpJY1BfzaOXUuQeLB+PcLrnsosK+1V1T6l8Rt7qOyyXspqLY67FE6
QOKoFE1bxoH69g/v1VLTJL7skDcwP0BBSaRt1L15EnNyNZgRThRYXX8ALksk
RoVr737sQkHrQCxbSroL3Wz1/5hwpUBurFZUotCF/wEViIpM
               "]]},
             
             Annotation[#, 
              "Charting`Private`Tag$14096#3"]& ]}, {}, {}}, {{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwVzHk41AkAxvGhSU9FdCnXRrvFVjrIk2J6d61yVaNJWEMalZKtXWqfbZ60
g9Vhpihtq4eH1h2byp02u1HkKBYziIlskw4x96/m/O1v/3if7/P553WK+Z51
yJRGo+2i9n9bvnRkT4dpkKL2arzJk2Jmd+LKk+EasBInlzemSuGf2CrXUHbn
5Ly6RJlvvbSJ960G1yYuL0hOk+LZ/aMXZkZo8GL0NT2R8lBQXZ19pAbVU3P7
NqdLMX0s0CpovwZfhNjx2rKksK0+2Vp2RINc8QW6pESKE1s61nG4GkgyeOam
T6WI9X64vThPg2nOa1dnSxlU9aYbkv/WYNOQQ/suDxnIpCsLq19qcEggKedF
yLBj43HPWroWt904+ddTZXA/+Nt65kotrLIjyzvLZIg6ax5/P1CLmRYVt8Q9
MtAV3Xmnj2txdUha8pGQYduguEiUqUXo5I0Uhp0c7ZWeH8gaLQyFF5+zfeSY
0I/NeiTSIr/rNeNOrBwp2f12YkILc1HpmmV8OfZ9vjix1VYHXrBDbsxdOUTO
hbl+3joIh86VT/bLkelwZlbOfh28TP6kb9PK0bavON4nTQfTy3z1w2UKZC9d
UvRLiQ71kvn3rvooUPFo0P5ahw5zLcIlHkcUCH/zKg6TOqSNly/2FCjgr2do
Gi312H2rMG9OlQJ1kZJkvrsey/Z0HlswoMADj4ERZYgec9bQ9qZ/UsCMZs11
5eqR3FvMFToo8d6n4B2Zo0fLKYfr179SIqj3FMvlgR6sz2SGohglpMH5BseX
ehQ5cWMvnlfCNcAyqdrEAGWS5BtduRKVbt3ei1YakFHaPL6zR4mKw8/VXQEG
jHb2xX1UKvH14vWp9vEGsF24DW7WKtjVCoMZmQa4MJ1693upkNn1WEHcNSCt
0o7usk+F5LUml8z6DOBXsRz3JqtQmyqIm1AbEGSWdfp8iQqpTI5N9BIjDm7b
fo7drkKWxdm5N72M2OPKf+Y7rQLDV/VPepQR1rktY6L5ahxqu5PR/LMRrQcW
MMc3qtGzuTGjo9CI5QLrMHu2Gv0r5sUcfWzEh/A6Jp2nhu2Mqp9G3hphJQj4
0a1UjdHVv58tNCdRmmQTQjxVw/vZcKzpWhLNwWVjcXI1xNEH+G4sEh7OU1w/
GwJL4jel6E6QeLRI9cfgVgI9zWE/2F4jkRDiVDTjIIGO2W0FsxtJuBcfC2u5
SCCqk1d6ZZiEyUBV04YaApGV4mjnERK0XwOZo//78mabJsp3lnPe8WsphyoF
b8UkVuVabZLUEYj4NzYBYyRuJzR4Zt8jEK7d6T31ikQ+zXbQ2ESAtcq+z3+K
xNhqdaawnbIFVzBK+e7VAo/UDgK7ZSLfk9PUn3qhZF0ngeD6zIYbUhLWHXvY
gi4CTJ8ZeYScxNZOXo1PN4EdEe8PFxMkiGiBeU0/ZYaf05aPJMwuVYAjpOxY
PNxDmThVe9pSRCBoImqn7hOJoe4r874bIBCY2OvG0pEICq25seI55b1rP7yh
XB8RZyukHOApKDmjJ/Hkln1+6jABf6Pv0nIDCV162sOxEcrjBb1bjSRC/2JE
Z4gpPzbyhZSfZBnMGC8ol7F9j5IkLKLaGiYp+/HvGUjKMSdyEnJGCfwHTGyg
aQ==
               "]]},
             Annotation[#, "Charting`Private`Tag$14157#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJxFknswlWkcx2XlUtJuFuvEDhWba8gOcs78JAmZtKctJg5bwoqVibGU6wlT
p81tyK6m4iSMBrnszloiwqY6Qh1taGVZi00Xi+28571sOz3nef54553PPJff
9/l+v+ZHTwgj1NXU1GLfff//u63Mgl8GKsBTK6SwKugx8JoSe6u/VkAr4oQd
/duOpChgg/Z7jm3zahOfV4A14kj+be/Kywp4pfme61Im3Yvq351HvPSTumNm
J7mfMvbbZDyogETEXGqhftNzBcQirvqNs2heVMA2xP7Oca4tGhTcQPd5+Itb
sgwoMEXr249ddAiwpCAM8d3EIVm2KwUpiEU5ujG/+FF4/s22bzQuhVAgQKyx
OHD5dBwFbogrp+XlWzMocEe8+8n4NXk+BYA4t3vN3fkKCnao5tW5vuCaKVhA
+gIP6p6a7KGgG/EMPaF1R07BLGLne08LA2YocETns0ofbRxfocADcbxoqW9Q
W4nnh242ONnLU4Ir4rLrY7m5NkqsX/6Z9NIevhK/r0maPxS/T4n15pumaZV9
pcTvs+4ocIs7SbgvtDLGM5vsr28TaU0Vk/tKPzG6duY6mVd754lJST/RlyUX
7To+qsT6g/6aioa/lbAT8eCbgsZUhszzoQWK1vU02CFOt/1IIDWnYTPiH0Om
MyXbaTBD7Oorsgcvst7++cjYP1/SYIt4kpdU+2EUDS6INdUMU+xSaDw/uSK4
0VBCwy7E854Vc1wZDX6qvq9Z92nxDRoOIN47lCzc2k7DYZVeZsjI5xYNwYi9
rWyeRXUQ9sh6FlV9m4YQxM6OnmmWvTSEIjYtXFuzZYDwq/1XGLPnZL+ebKR9
7jUNBxHb+a5PbVrFgD/ihVtxIVP6DHghrnMa4H9syeD32coOGL92YXA/aqOe
Lt/3ZbA/SR0a/MTDDPZvp4GD2CSGwf7WHxPP2aaR9Y0tj/cL8sl5eecDc145
g/3Nv9+zuHKTwXlrM390pncRPZn2qy5oDjM477Ig79MrUwzOu0V8PnpmmYEt
qv5MnF1i/iXz9/FzMwwowrPLmSVeLAPmKn3RSV1STRazOOCIcZgRi/dL7BOK
zlixYIO4aF3O2hp3FuufreG//N6fxfoFXkuD50Qs7scXq4cbLOJY8EUc0deQ
15XOglDVl8yWvN4CFvfjoVtrXr+UxfkONYS//aGZxfk+stA7eryHhUOqPIon
XkhHWJwv74PGb8dmWZxvamkN20Gx2M/fbcpzpLoczvdCqiBJaMphP/my0Uh1
ew77GXlIP3q3A4f9KJjYG3PWifD0m/YTei4c9u87w6vJPA8O92E8LFziJCT7
T0XIVhuFc7gPRjEuWcoEDvuZcPHXt5JsDvv5sCswnlfCYf0P/tTT2VDN4T70
6/RV6LQS/frzmypl/US/6F5GVeEo0SO0Nhn2WSB69kh+ZjiO6PkPfbQzEQ==

               "]]},
             Annotation[#, "Charting`Private`Tag$14157#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwVx3k41HkcwHHJ8XRIte60a9pNakOxCtFnSZuj0np0yXSQ+9jQJh0i2Wo8
SEXXuqWl1SFS0vNJYbPV6LKmmTGH4VdUY0P0m5nffPe3f7yf9/PihP0SFKGr
o6Oznu3/P1xos025mQbO2fLP16YJUJ+fbLt3Cw0Txhx+vbEAfZPbP9GsL8TD
0gOseWYW949spcFeynE0nC3AZ82xJ/RDaIjec4E/NkuAgoDGRutQGiKyHuh7
WAhQmeA/M2AnDUsrZZxn3wnQqn5v+5VoGmwn7E6+9xRginun4640Go7rhYq8
9wgw0uPBT1XFNOSvnyRo7hXg2G3dpRlIg/+8wDmJPm+QHCr4ql5Gw/3FRXRG
zRtc+0Oia4OeChwPeHOKzIXovLtoSaCtCkI5rdnN6ULkZk+Pa/ZXQbzoiv+w
Uoh6I/zig4kq6ORFKLO4IlzdI67szldBmJ1brmG7CB/XuX4gt1SQkhsvrXER
I6WRGj7qVkGxbq1qYakYM8+9miMeV4Fs9N7IW4Ne3P6taXK7lRrmH5wh6Urt
xe4FFZfWeKghYKrl/jR5L+bPPWx4cacaVpavyt0YLMGO7VVx3sfUkPSncji6
XYLnLMwrsy6rQaHQpM9zlGLtox7rwk41VMcvazCtkOKWt4oYeK+GWiZ11XMD
GfpqPOm7xhoIqm+d6uIlw8bQ/gyeswbMHm93qzkgwxaXf0SjwRrYHTLfintD
hgY6Zmn2aRoY3O1SfXNIhkPe5YPkogYmPiXNA44cA17sD7Jr0YBryvmn/E1y
HN5QwtjINFA33bVFe0qO9n7Gh+onMdDSdMuf+5cc65z4Hia2DFAmw5Jtun1Y
G/Xm8xM/Bo4n6azf5NGHXqZLjlrHMTBIX/56X3Ifzml4vcEzn4GiSv4M57o+
zH/SNjJ+gwFH+vDimf19mOEwKdfgJQM35zZVSSwV2HA0J4b6zMCCWemDq4MV
eDRwl+UOcy3YmdFTOngKPG2UPe2PFVoIjjHyErUr0NNn7PlJrhYKldVDeowC
Izqu57Wma6HMZNqYqXM/drndzeus0IJcuV/YkNCPr+bPCItt08KPjccaw6r6
0WryzVTROy08FWm9zkv7UfJ9WXbFdAJC5lHQVcsB9HgmjNR1ICD6crXnceAA
ineE85yCCMTKRhPCeQNoHrc8U51CID1q2T391gHsat28x6qQQIF708CR8QHs
nNJRPuUuAQGJPR27hELu30eqC4QEKsxEhSGRFIbWiXcsEBG47uTiEBDF+pSb
5X3WI87BbSuiWW8azXknJuCT1TtoHUthSF9kEkgJeJ7Wt5ImULhFtc7jo4JA
zr4PRuG/Uhi0yPql70cCkhXGK2OOsTZKy5GwTtPh5m7NpvDnf7t99ioJuBkH
C/1+o3DD7fym0mECpdnuCYtOUBjoPbl4/BOBkm+e73ufQ+HakKGoqnECGUmb
LRLOsPZcw3GfIPClrMuLe5a1TZWwi/Wd/r7odYUUBlDcdeovBMxn91y3P0eh
f/ILpyA1gbWvxTbKi6w3Onx4y1qearJccolCP9ecy4c1BJpVUn/+7xT6an0s
ahgCPK1D3LUS1vLyFyu1BJhrN1JLSlm3aXmvWV8tfpiZV8b6yjafWEKgWh5+
Mr2cwjW8Owxh3VBwJi+xgsL/AHrfvXo=
               "]]},
             Annotation[#, "Charting`Private`Tag$14157#3"]& ]}, {}, {}}}, 
         InsetBox[
          
          TemplateBox[{
           StyleBox[
            "\"\\!\\(\\*OverscriptBox[\\(\[Theta]\\), \
\\(.\\)]\\)[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)]\"\
", 14, FontFamily -> "Times", StripOnInput -> False],StyleBox[
            "\"\\!\\(\\*\\nStyleBox[OverscriptBox[\\n  \
StyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"], \\\".\\\"],\\nFontSlant->\\\
\"Italic\\\"]\\)[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\
\\)]\"", 14, FontFamily -> "Times", StripOnInput -> False],StyleBox[
            "\"\\!\\(\\*OverscriptBox[\\n StyleBox[\\\"y\\\",\\nFontSlant->\\\
\"Italic\\\"], \
\\\".\\\"]\\)[\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)]\
\"", 14, FontFamily -> "Times", StripOnInput -> False]},
           "LineLegend",
           DisplayFunction->(FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.4}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}],
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"Spacings", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"0.2`", ",", "0.4`"}], "}"}]}]}], "]"}]& )], 
          Scaled[{0.25, 0.75}], ImageScaled[{0.5, 0.5}],
          BaseStyle->{FontSize -> Larger},
          FormatType->StandardForm]},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{
          FormBox[
           StyleBox[
           "\"t\"", 14, FontFamily -> "Times", Italic, StripOnInput -> False],
            TraditionalForm], None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Epilog->{
          Dashing[{Small, Small}], 
          LineBox[{{1.5839675398412985`, -1}, {1.5839675398412985`, 3}}]},
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->All,
        ImageSize->250,
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox[
          "\"Ladder full motion\"", 14, FontFamily -> "Times", StripOnInput -> 
           False], TraditionalForm],
        PlotRange->{{0, 2.1322808904578032`}, {-1, 2.0707963267948966`}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}],
       InterpretTemplate[Legended[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVkHk01AkAx2U7FoXVs2/Vy3N0jRTVyqzKt3XkWku5tpo3kSZZ1pGrZncy
26VyRbNWxRtDZEJbcrRdmIqM3PxSyDGMK78fcsyP2bXtH5/3+ffzPobHQg9y
VFVUVFw/878vJd842n7Yz1qFfzzreL2TdWCNwHqQAObrtaQpqTvwhRNahYQb
rmXOivkiSzRdEazjEUfh/msaFS5ywC6TCkkQEQrxtevOQSIfBHI9df2JWLDj
BBciRQE4byR8ziaSIWWoHy4TxeBatN11FiGE1elJ1crsOFxt3dycknYfJoHe
DEZeOk429b1j5D4CsSSS2OeVDb7a5tV59pW467+4tBH5CH6TaBOY9BL3E3zH
L5bcQ9uO9QYLia+hO8n9ysK/GF1WI8she4M1Bb18SUkpek+9XLE+tQlSowOE
dPERtG+ayrSSWpA4m1x4dO1TaOuYvmgracNef8Oukxcr0NBpO69STiBA6asu
9K3CwqyjROuvDhANYS2XlRIojg0mzTW/h2HX9hKl5CWKDW4W72/qgleV3dbS
U9XYYyZ/H0J/gIPizN1Kt9e4VaMl3ZPQi+AJnav0VilispgtUVf60M3hFUfN
1OGxYRFrbUY/GAWm3ESyHl11RamRGTL01BiUazU34oT+vLNV8QAKOeNprOkm
5Os9c5mUDCJCe2zTTtUW1O5dqThSJUeviKkRtrQVB9XvbNzZPoTDMzb5w8Zt
eLxYr/KcGEaYTlJTqWU73mUGGVu1jqAs1EPo50rAd8DztdHgKMw916SbnH+L
ag/pNxUDY5AQSzTFhR0QBMWP1dAfYc53Dy1SvIOe6YvlEjUSmNpd/MqxEzzd
uPrQFRQMJOGpD+O7kOvhomG/agLlERMWOdPdWDC/sawwcQJnfMQPNNx7UHjM
6Ha8xiQ2q8m/D/DpRcrJ5vOGgklIfusRZ63tg/zc/u9SVk9hq4umZ1RHH0LD
+8zKM6eQaV4dklfQj4BIG2WZ/ieEdJv/sjFGhid1H4LNMj+BeeiN6LndAGzn
svTZG6dhHCdqe2EyCCtLRt6JvGmwIqakFl/KwXF5G7Jh+wy8roq3VS3K8fFh
ZSfr7xmEHfEW5cwPod88TD+EOQsPuSu/Y2wYK8/ZZ1tIZjGXnr+PTY8gb6h3
gbCZQ3pZo6ZQOYoMUTk9UTmHNOcLbmqqH/HKrIRZ5aTA2WeGt/s3jIPdEu0a
VKuA0ZBMpmpNwur274dy6xQoZa6WzdqQ+Do6gdNTr8A5NdszYw4kGvSyeR4t
CnTH5/9MHCBh7VdftLtTgQBmjt9DDol1E8aaK8cViO0uzbqSSKJrVXNDoTYN
WYTH8TvdJB71dL6X69Cff8vt7vWTEDyQyw10adQNFzwtHSLxg5fyX4EejUWr
D+HVkySeZGwy4xnRILbZfCKXUbi55Wyy67c0ODkFnqxtFKL/uXwrbhcNfZ0R
cfBOCgcbr9+pYtLgO15K4zEpqEeIKyz20hDmyi1ENhS4j9uodftp/PmWk0h5
U/BO6FnwcaTxI6M2cymLwg726IpUZxpblH/Yr/GjMLpExWC5Gw3L0yFHHIIo
VLeqm+47QOOnGW4tO4xCdq4uk+tBg3drqiE6isLZGAO7Eq/PPbHtQclcCoec
triTPjS4qcZZ+bEU/gM1B37E
                 "]]}, "Charting`Private`Tag$14096#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
/w==
                 "]]}, "Charting`Private`Tag$14096#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwV1Pk71AkcwPHRriNHrGM3teZB04VdHdLsLD4iJMnmSGoWjRyDssnR43mo
VJRIjmqVa5SrUJGIbT5IMUSG8f0qtpwjR46I+UZs+8P7ef0Hbx1OkKP3ChqN
Zv+t/41JTPPoPHzUjObpsqPlkiaf25BqNkQAxKveYW0/ugK/s4WOLMIB4uT1
1Ss5sth2OVUrkvAA3/Uj5k2cn9BYD+sCiCCIWR1oQHA2IjfCWcOLOAMZuKFR
yWsnntfN4rsTieDDT5pbe8wGr4XtTmETWcDb9Uu1iZ8rxnVsEibdeAhN9DWa
beF+6NfW92ZzbiVMsONSOiyD8ezKTWp5VjXA/8ozv25zGgNfJVhwr9ZD2BHv
s6s+R6FoG0N7IaERFnm+5w49iMYe1ogMDLyC23rVS2k2MdgbXC/LSG6DJSlR
YP/MZVS5ZTCgfLUdGlUz3IxiE1BF1eC56LEIBM0s6/Tma9jabfmFVkEAp9zh
e8emZFyY21On/KALdH8WHgh/k4oSztDVeeFbeCRXvpdjfBNLtW+VWrf1QOGX
ONXF+DQ0MRS/PUG9gy2VY97LZul4u0G5ySS+F474fjyzRjULw7OZ7aGX+8C0
K18jfSobq3SK2WvT+2EqYlzNOCkHe5qLk0PSB8AkUp9hsfUu+tC/7GWVDoKV
uRrXQT0PCzSf2U3XDcFGZi9t+YcCFJgqSo7UiiFYfFq5TvkeOsrnb9jeOQz3
BetmBj2LsGq5hcYnPgBjjVLUnbISfJMRsI7VMQI0liwpk/wQPQedG3WHRkFN
PpSR8fURvnRqWo2DY1ApbZa8zC3D1IArYw3UOOzbnORwQLUcNQ2ey9StnICb
6kJea/sTjNSIbQmSnYSQei25+ymVmOtkp2ClNAUM60sT6plVuLAlTbooYQrc
GV2JoYX/YBFH9+4VhWmY9hro+rWVj0l+wvM6qdPgFr1HdmVeDYqjrX9LUvsE
lS90VF4M1mLQyT7DioxP4HcxNL/h4HP0DbFYfEKfgV0FecnZjfVY3fwu0DBj
Bpye0af2271Ey/lsuvuGWRCZTfIYCo3I2rk5zydvFsgOoxgtgQC97cgT67d+
BjmvQ6bcV804XlbTzX76GfjOYbN6H1qwf8tf9BPMOTgp7d+3afk1KkZb5eyo
mwPXXL534HYh5g33LhAW87A/M+6m8rF2TOdVUFM185DV2VZtm9WBLwwfM2tt
JSCoMm1gynWie3uYfYBAAsd362WuCCCQdfecW26zBJ6Wh1w8fJLAH8Pivd+3
SCCQbSMoCyewVTMn0qldAqJtzj7+Fwg0O9pS/Hu3BBInL8wOZxCoNbVuleJH
CcR4WTgyhAT2KAlbi1QoMNX0j+cxSax83/1WrEqBf/PfwwwgMfWRWKytQcGI
k2dmoRWJ+1wWl1I1KYjVH6dXOJJYnb7RMFKXgkIj+vH+QBJv6Ucl2htRYMYT
WUbwSAz7eul2rDEFKjNstloBiY6vU/JrmRQEjwrbiktIlD9ViDtMKfD481SL
uJrEiCrRpJY1BfzaOXUuQeLB+PcLrnsosK+1V1T6l8Rt7qOyyXspqLY67FE6
QOKoFE1bxoH69g/v1VLTJL7skDcwP0BBSaRt1L15EnNyNZgRThRYXX8ALksk
RoVr737sQkHrQCxbSroL3Wz1/5hwpUBurFZUotCF/wEViIpM
                 "]]}, "Charting`Private`Tag$14096#3"]}}, {}, {}}, {{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVzHk41AkAxvGhSU9FdCnXRrvFVjrIk2J6d61yVaNJWEMalZKtXWqfbZ60
g9Vhpihtq4eH1h2byp02u1HkKBYziIlskw4x96/m/O1v/3if7/P553WK+Z51
yJRGo+2i9n9bvnRkT4dpkKL2arzJk2Jmd+LKk+EasBInlzemSuGf2CrXUHbn
5Ly6RJlvvbSJ960G1yYuL0hOk+LZ/aMXZkZo8GL0NT2R8lBQXZ19pAbVU3P7
NqdLMX0s0CpovwZfhNjx2rKksK0+2Vp2RINc8QW6pESKE1s61nG4GkgyeOam
T6WI9X64vThPg2nOa1dnSxlU9aYbkv/WYNOQQ/suDxnIpCsLq19qcEggKedF
yLBj43HPWroWt904+ddTZXA/+Nt65kotrLIjyzvLZIg6ax5/P1CLmRYVt8Q9
MtAV3Xmnj2txdUha8pGQYduguEiUqUXo5I0Uhp0c7ZWeH8gaLQyFF5+zfeSY
0I/NeiTSIr/rNeNOrBwp2f12YkILc1HpmmV8OfZ9vjix1VYHXrBDbsxdOUTO
hbl+3joIh86VT/bLkelwZlbOfh28TP6kb9PK0bavON4nTQfTy3z1w2UKZC9d
UvRLiQ71kvn3rvooUPFo0P5ahw5zLcIlHkcUCH/zKg6TOqSNly/2FCjgr2do
Gi312H2rMG9OlQJ1kZJkvrsey/Z0HlswoMADj4ERZYgec9bQ9qZ/UsCMZs11
5eqR3FvMFToo8d6n4B2Zo0fLKYfr179SIqj3FMvlgR6sz2SGohglpMH5BseX
ehQ5cWMvnlfCNcAyqdrEAGWS5BtduRKVbt3ei1YakFHaPL6zR4mKw8/VXQEG
jHb2xX1UKvH14vWp9vEGsF24DW7WKtjVCoMZmQa4MJ1693upkNn1WEHcNSCt
0o7usk+F5LUml8z6DOBXsRz3JqtQmyqIm1AbEGSWdfp8iQqpTI5N9BIjDm7b
fo7drkKWxdm5N72M2OPKf+Y7rQLDV/VPepQR1rktY6L5ahxqu5PR/LMRrQcW
MMc3qtGzuTGjo9CI5QLrMHu2Gv0r5sUcfWzEh/A6Jp2nhu2Mqp9G3hphJQj4
0a1UjdHVv58tNCdRmmQTQjxVw/vZcKzpWhLNwWVjcXI1xNEH+G4sEh7OU1w/
GwJL4jel6E6QeLRI9cfgVgI9zWE/2F4jkRDiVDTjIIGO2W0FsxtJuBcfC2u5
SCCqk1d6ZZiEyUBV04YaApGV4mjnERK0XwOZo//78mabJsp3lnPe8WsphyoF
b8UkVuVabZLUEYj4NzYBYyRuJzR4Zt8jEK7d6T31ikQ+zXbQ2ESAtcq+z3+K
xNhqdaawnbIFVzBK+e7VAo/UDgK7ZSLfk9PUn3qhZF0ngeD6zIYbUhLWHXvY
gi4CTJ8ZeYScxNZOXo1PN4EdEe8PFxMkiGiBeU0/ZYaf05aPJMwuVYAjpOxY
PNxDmThVe9pSRCBoImqn7hOJoe4r874bIBCY2OvG0pEICq25seI55b1rP7yh
XB8RZyukHOApKDmjJ/Hkln1+6jABf6Pv0nIDCV162sOxEcrjBb1bjSRC/2JE
Z4gpPzbyhZSfZBnMGC8ol7F9j5IkLKLaGiYp+/HvGUjKMSdyEnJGCfwHTGyg
aQ==
                 "]]}, "Charting`Private`Tag$14157#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJxFknswlWkcx2XlUtJuFuvEDhWba8gOcs78JAmZtKctJg5bwoqVibGU6wlT
p81tyK6m4iSMBrnszloiwqY6Qh1taGVZi00Xi+28571sOz3nef54553PPJff
9/l+v+ZHTwgj1NXU1GLfff//u63Mgl8GKsBTK6SwKugx8JoSe6u/VkAr4oQd
/duOpChgg/Z7jm3zahOfV4A14kj+be/Kywp4pfme61Im3Yvq351HvPSTumNm
J7mfMvbbZDyogETEXGqhftNzBcQirvqNs2heVMA2xP7Oca4tGhTcQPd5+Itb
sgwoMEXr249ddAiwpCAM8d3EIVm2KwUpiEU5ujG/+FF4/s22bzQuhVAgQKyx
OHD5dBwFbogrp+XlWzMocEe8+8n4NXk+BYA4t3vN3fkKCnao5tW5vuCaKVhA
+gIP6p6a7KGgG/EMPaF1R07BLGLne08LA2YocETns0ofbRxfocADcbxoqW9Q
W4nnh242ONnLU4Ir4rLrY7m5NkqsX/6Z9NIevhK/r0maPxS/T4n15pumaZV9
pcTvs+4ocIs7SbgvtDLGM5vsr28TaU0Vk/tKPzG6duY6mVd754lJST/RlyUX
7To+qsT6g/6aioa/lbAT8eCbgsZUhszzoQWK1vU02CFOt/1IIDWnYTPiH0Om
MyXbaTBD7Oorsgcvst7++cjYP1/SYIt4kpdU+2EUDS6INdUMU+xSaDw/uSK4
0VBCwy7E854Vc1wZDX6qvq9Z92nxDRoOIN47lCzc2k7DYZVeZsjI5xYNwYi9
rWyeRXUQ9sh6FlV9m4YQxM6OnmmWvTSEIjYtXFuzZYDwq/1XGLPnZL+ebKR9
7jUNBxHb+a5PbVrFgD/ihVtxIVP6DHghrnMa4H9syeD32coOGL92YXA/aqOe
Lt/3ZbA/SR0a/MTDDPZvp4GD2CSGwf7WHxPP2aaR9Y0tj/cL8sl5eecDc145
g/3Nv9+zuHKTwXlrM390pncRPZn2qy5oDjM477Ig79MrUwzOu0V8PnpmmYEt
qv5MnF1i/iXz9/FzMwwowrPLmSVeLAPmKn3RSV1STRazOOCIcZgRi/dL7BOK
zlixYIO4aF3O2hp3FuufreG//N6fxfoFXkuD50Qs7scXq4cbLOJY8EUc0deQ
15XOglDVl8yWvN4CFvfjoVtrXr+UxfkONYS//aGZxfk+stA7eryHhUOqPIon
XkhHWJwv74PGb8dmWZxvamkN20Gx2M/fbcpzpLoczvdCqiBJaMphP/my0Uh1
ew77GXlIP3q3A4f9KJjYG3PWifD0m/YTei4c9u87w6vJPA8O92E8LFziJCT7
T0XIVhuFc7gPRjEuWcoEDvuZcPHXt5JsDvv5sCswnlfCYf0P/tTT2VDN4T70
6/RV6LQS/frzmypl/US/6F5GVeEo0SO0Nhn2WSB69kh+ZjiO6PkPfbQzEQ==

                 "]]}, "Charting`Private`Tag$14157#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVx3k41HkcwHHJ8XRIte60a9pNakOxCtFnSZuj0np0yXSQ+9jQJh0i2Wo8
SEXXuqWl1SFS0vNJYbPV6LKmmTGH4VdUY0P0m5nffPe3f7yf9/PihP0SFKGr
o6Oznu3/P1xos025mQbO2fLP16YJUJ+fbLt3Cw0Txhx+vbEAfZPbP9GsL8TD
0gOseWYW949spcFeynE0nC3AZ82xJ/RDaIjec4E/NkuAgoDGRutQGiKyHuh7
WAhQmeA/M2AnDUsrZZxn3wnQqn5v+5VoGmwn7E6+9xRginun4640Go7rhYq8
9wgw0uPBT1XFNOSvnyRo7hXg2G3dpRlIg/+8wDmJPm+QHCr4ql5Gw/3FRXRG
zRtc+0Oia4OeChwPeHOKzIXovLtoSaCtCkI5rdnN6ULkZk+Pa/ZXQbzoiv+w
Uoh6I/zig4kq6ORFKLO4IlzdI67szldBmJ1brmG7CB/XuX4gt1SQkhsvrXER
I6WRGj7qVkGxbq1qYakYM8+9miMeV4Fs9N7IW4Ne3P6taXK7lRrmH5wh6Urt
xe4FFZfWeKghYKrl/jR5L+bPPWx4cacaVpavyt0YLMGO7VVx3sfUkPSncji6
XYLnLMwrsy6rQaHQpM9zlGLtox7rwk41VMcvazCtkOKWt4oYeK+GWiZ11XMD
GfpqPOm7xhoIqm+d6uIlw8bQ/gyeswbMHm93qzkgwxaXf0SjwRrYHTLfintD
hgY6Zmn2aRoY3O1SfXNIhkPe5YPkogYmPiXNA44cA17sD7Jr0YBryvmn/E1y
HN5QwtjINFA33bVFe0qO9n7Gh+onMdDSdMuf+5cc65z4Hia2DFAmw5Jtun1Y
G/Xm8xM/Bo4n6azf5NGHXqZLjlrHMTBIX/56X3Ifzml4vcEzn4GiSv4M57o+
zH/SNjJ+gwFH+vDimf19mOEwKdfgJQM35zZVSSwV2HA0J4b6zMCCWemDq4MV
eDRwl+UOcy3YmdFTOngKPG2UPe2PFVoIjjHyErUr0NNn7PlJrhYKldVDeowC
Izqu57Wma6HMZNqYqXM/drndzeus0IJcuV/YkNCPr+bPCItt08KPjccaw6r6
0WryzVTROy08FWm9zkv7UfJ9WXbFdAJC5lHQVcsB9HgmjNR1ICD6crXnceAA
ineE85yCCMTKRhPCeQNoHrc8U51CID1q2T391gHsat28x6qQQIF708CR8QHs
nNJRPuUuAQGJPR27hELu30eqC4QEKsxEhSGRFIbWiXcsEBG47uTiEBDF+pSb
5X3WI87BbSuiWW8azXknJuCT1TtoHUthSF9kEkgJeJ7Wt5ImULhFtc7jo4JA
zr4PRuG/Uhi0yPql70cCkhXGK2OOsTZKy5GwTtPh5m7NpvDnf7t99ioJuBkH
C/1+o3DD7fym0mECpdnuCYtOUBjoPbl4/BOBkm+e73ufQ+HakKGoqnECGUmb
LRLOsPZcw3GfIPClrMuLe5a1TZWwi/Wd/r7odYUUBlDcdeovBMxn91y3P0eh
f/ILpyA1gbWvxTbKi6w3Onx4y1qearJccolCP9ecy4c1BJpVUn/+7xT6an0s
ahgCPK1D3LUS1vLyFyu1BJhrN1JLSlm3aXmvWV8tfpiZV8b6yjafWEKgWh5+
Mr2cwjW8Owxh3VBwJi+xgsL/AHrfvXo=
                 "]]}, "Charting`Private`Tag$14157#3"]}}, {}, {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
              Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
           GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {
             Style["t", 14, FontFamily -> "Times", Italic], None}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
             Dashing[{Small, Small}], 
             Line[{{1.5839675398412985`, -1}, {1.5839675398412985`, 3}}]}, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 250, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           Style["Ladder full motion", 14, FontFamily -> "Times"], 
           PlotRange -> {{0, 2.1322808904578032`}, {-1, 2.0707963267948966`}},
            PlotRangeClipping -> True, 
           PlotRangePadding -> {{Automatic, Automatic}, {
             Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           LineLegend[{
             RGBColor[0.368417, 0.506779, 0.709798], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             RGBColor[0.560181, 0.691569, 0.194885]}, {
             Style[
             "\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)[\!\(\*\nStyleBox[\"t\
\",\nFontSlant->\"Italic\"]\)]", 14, FontFamily -> "Times"], 
             Style[
             "\!\(\*\nStyleBox[OverscriptBox[\n  StyleBox[\"x\",\nFontSlant->\
\"Italic\"], \".\"],\nFontSlant->\"Italic\"]\)[\!\(\*\nStyleBox[\"t\",\n\
FontSlant->\"Italic\"]\)]", 14, FontFamily -> "Times"], 
             Style[
             "\!\(\*OverscriptBox[\n StyleBox[\"y\",\nFontSlant->\"Italic\"], \
\".\"]\)[\!\(\*\nStyleBox[\"t\",\nFontSlant->\"Italic\"]\)]", 14, FontFamily -> 
              "Times"]}, LabelStyle -> {}, LegendLayout -> "Column", 
            Spacings -> {0.2, 0.4}]], 
          Scaled[{{0.25, 0.75}, {0.5, 0.5}}], Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Rows" -> {{Top}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{5}}}],
   "Grid"],
  Alignment->Center,
  Appearance->"Frameless",
  Background->GrayLevel[1],
  ImageSize->{Full, Automatic}]], "Output",
 CellChangeTimes->{{3.7205455540547056`*^9, 
  3.7205455797160816`*^9}},ExpressionUUID->"9c87b3bc-c03f-48a1-a595-\
65608b1305b5"]
}, {2}]],

Cell[TextData[{
 StyleBox["Solution 2",
  FontVariations->{"Underline"->True}],
 "\nUntil the ladder disconnects from the wall,"
}], "Text",
 CellChangeTimes->{{3.487892789557293*^9, 3.4878930710823956`*^9}, {
  3.4878931248304696`*^9, 3.4878932759051104`*^9}, {3.4919183744789906`*^9, 
  3.4919183744945903`*^9}, {3.6239833114915066`*^9, 3.6239833901322446`*^9}, {
  3.623983454640358*^9, 
  3.6239834559195604`*^9}},ExpressionUUID->"6ad0a98e-f3aa-48dd-991a-\
e8547297355f"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"x", "=", 
   RowBox[{"r", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
  TraditionalForm]],ExpressionUUID->"0a0f1541-35fc-47fe-ba83-9969135868c6"]], \
"TextNumbered",
 CellChangeTimes->{{3.623983391382247*^9, 
  3.623983395485054*^9}},ExpressionUUID->"c796e094-b559-4be4-8976-\
85484e6fdbed"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"y", "=", 
   RowBox[{"r", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
  TraditionalForm]],ExpressionUUID->"66a2e43a-c7af-4cf5-9755-a2e68ea2c1ce"]], \
"TextNumbered",
 CellChangeTimes->{{3.623983391382247*^9, 
  3.623983394673853*^9}},ExpressionUUID->"d39eef72-95d2-4c00-8ec6-\
e68728dcef94"],

Cell["\<\
where we suppress the time dependence of \[Theta]. Differentiating twice, we \
obtain\
\>", "Text",
 CellChangeTimes->{{3.623983448259947*^9, 3.623983453173956*^9}, {
  3.6239835066452503`*^9, 
  3.623983524994283*^9}},ExpressionUUID->"652520ba-788c-417a-abba-\
606ccb741967"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["x", "\[DoubleDot]"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "."], "2"], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"r", " ", 
     OverscriptBox["\[Theta]", "\[DoubleDot]"], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"c4f9d96f-d40b-4095-8029-0396e2837156"]], \
"TextNumbered",
 CellChangeTimes->{{3.623983391382247*^9, 3.623983435764325*^9}, {
  3.6239834676975813`*^9, 
  3.6239834740185924`*^9}},ExpressionUUID->"d863c2e4-7bfb-4098-9c3b-\
4e0defcb8504"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["y", "\[DoubleDot]"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "."], "2"], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"r", " ", 
     OverscriptBox["\[Theta]", "\[DoubleDot]"], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"01065fe5-a41f-4dc8-bd34-554e0acd5b5d"]], \
"TextNumbered",
 CellChangeTimes->{{3.623983391382247*^9, 3.623983393644251*^9}, {
  3.623983485782013*^9, 3.6239834986988354`*^9}, {3.6239835308130937`*^9, 
  3.6239835320766954`*^9}, {3.623984919795944*^9, 
  3.6239849214963474`*^9}},ExpressionUUID->"741e6542-40ea-4ab9-98da-\
4575b51823ec"],

Cell[TextData[{
 "Denote the normal forces from the wall and floor as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "w"], TraditionalForm]],ExpressionUUID->
  "2d8d22ad-10d3-4453-bfed-10802220bfc3"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "f"], TraditionalForm]],ExpressionUUID->
  "662ec23e-1f63-48ab-be4f-cb3441bb3625"],
 ", respectively. The force equations in the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "f1a9c966-9d7d-43ae-8f93-2f717dc4b6b0"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "1b4ca2c6-38d0-474c-b787-35ea7c497fd3"],
 " directions and the torque equation (about the center of mass of the \
ladder) are"
}], "Text",
 CellChangeTimes->{{3.487892789557293*^9, 3.4878930710823956`*^9}, {
  3.4878931248304696`*^9, 3.4878932759051104`*^9}, {3.4919183744789906`*^9, 
  3.4919183744945903`*^9}, {3.6239833114915066`*^9, 3.6239833901322446`*^9}, {
  3.6239836415504894`*^9, 3.6239837267638392`*^9}, {3.623983779223132*^9, 
  3.6239838073841815`*^9}},ExpressionUUID->"d700bea1-99d6-44ea-9d7b-\
720e58aa19fb"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["N", "w"], "=", 
   RowBox[{"m", 
    OverscriptBox["x", "\[DoubleDot]"]}]}], 
  TraditionalForm]],ExpressionUUID->"0118969b-4f35-44ed-9246-52cd81bf52e6"]], \
"TextNumbered",
 CellChangeTimes->{{3.487892789557293*^9, 3.4878930710823956`*^9}, {
  3.4878931248304696`*^9, 3.4878932759051104`*^9}, {3.4919183744789906`*^9, 
  3.4919183744945903`*^9}, {3.6239833114915066`*^9, 3.6239833901322446`*^9}, {
  3.6239836415504894`*^9, 3.623983683030962*^9}, {3.6239837286514425`*^9, 
  3.623983748011077*^9}},ExpressionUUID->"c975aa2f-5fbe-4ee8-a38a-\
b669828105dd"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["N", "f"], "-", 
    RowBox[{"m", " ", "g"}]}], "=", 
   RowBox[{"m", 
    OverscriptBox["y", "\[DoubleDot]"]}]}], 
  TraditionalForm]],ExpressionUUID->"57608649-91da-4d14-b7aa-1f059b9a792a"]], \
"TextNumbered",
 CellChangeTimes->{{3.487892789557293*^9, 3.4878930710823956`*^9}, {
  3.4878931248304696`*^9, 3.4878932759051104`*^9}, {3.4919183744789906`*^9, 
  3.4919183744945903`*^9}, {3.6239833114915066`*^9, 3.6239833901322446`*^9}, {
  3.6239836415504894`*^9, 3.623983683030962*^9}, {3.6239837337370515`*^9, 
  3.623983751767084*^9}},ExpressionUUID->"d8cec11e-6aed-4a61-8e88-\
b6bf5aee6e63"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"r", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["N", "f"], 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{
       SubscriptBox["N", "w"], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "=", 
   RowBox[{"\[Eta]", " ", "m", " ", 
    SuperscriptBox["r", "2"], 
    OverscriptBox["\[Theta]", "\[DoubleDot]"]}]}], 
  TraditionalForm]],ExpressionUUID->"fc879ce5-ef57-457d-b8e4-947eed5a08e0"]], \
"TextNumbered",
 CellChangeTimes->{{3.487892789557293*^9, 3.4878930710823956`*^9}, {
  3.4878931248304696`*^9, 3.4878932759051104`*^9}, {3.4919183744789906`*^9, 
  3.4919183744945903`*^9}, {3.6239833114915066`*^9, 3.6239833901322446`*^9}, {
  3.6239836415504894`*^9, 3.62398368753937*^9}, {3.6239837382766595`*^9, 
  3.62398377246832*^9}, {3.6239838277578173`*^9, 3.623983828537819*^9}, {
  3.623983904933153*^9, 3.623983918817178*^9}, {3.6239839919365063`*^9, 
  3.6239839919365063`*^9}},ExpressionUUID->"82dc8d01-3e99-4080-93ea-\
6b91077ea9b8"],

Cell[TextData[{
 "where in the last equation we have used the fact that \[Theta] is the angle \
about which the center of mass rotates. The above 5 equations have 6 \
unknowns: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "f"], ",", 
    SubscriptBox["N", "w"], ",", 
    OverscriptBox["x", "\[DoubleDot]"], ",", 
    OverscriptBox["y", "\[DoubleDot]"], ",", 
    OverscriptBox["\[Theta]", "."], ",", 
    OverscriptBox["\[Theta]", "\[DoubleDot]"]}], TraditionalForm]],
  ExpressionUUID->"b8f4582e-35c6-448a-84a7-549dbcede119"],
 ". The last equation comes from conservation of energy "
}], "Text",
 CellChangeTimes->{{3.623983946725627*^9, 3.623983988065699*^9}, {
  3.623984030986375*^9, 
  3.623984076932456*^9}},ExpressionUUID->"6bd3c95d-389d-41b1-89e2-\
600eb827ff20"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"m", " ", "g", " ", "r", " ", 
    RowBox[{"Cos", "[", 
     SubscriptBox["\[Theta]", "0"], "]"}]}], "=", 
   RowBox[{
    RowBox[{"m", " ", "g", " ", "r", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], "m", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", 
        OverscriptBox["\[Theta]", "."]}], ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{"\[Eta]", " ", "m", " ", 
       SuperscriptBox["r", "2"]}], ")"}], 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "."], "2"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"a679ede8-1a84-4270-8599-e9e9a3d22242"]], \
"TextNumbered",
 CellChangeTimes->{{3.623984089584078*^9, 
  3.6239841431389723`*^9}},ExpressionUUID->"cb87768a-074f-453b-ac8f-\
1a10fbc1d345"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Nw", "\[Equal]", 
         RowBox[{"m", " ", 
          RowBox[{
           RowBox[{"x", "''"}], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Nf", "-", 
          RowBox[{"m", " ", "g"}]}], "\[Equal]", 
         RowBox[{"m", " ", 
          RowBox[{
           RowBox[{"y", "''"}], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"r", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Nf", "*", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{"Nw", "*", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
         "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Eta]", " ", "m", " ", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{
           RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"m", " ", "g", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "0", "]"}], "]"}], "-", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ")"}]}], "==", 
         RowBox[{
          FractionBox["1", "2"], "m", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"r", " ", 
             RowBox[{
              RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], ")"}], "2"]}]}]}],
        "\[IndentingNewLine]", "}"}], "/.", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "''"}], "[", "t", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "r"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ")"}], "2"], 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{"r", " ", 
           RowBox[{
            RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "''"}], "[", "t", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "r"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ")"}], "2"], 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
          RowBox[{"r", " ", 
           RowBox[{
            RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}]}], 
       "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Nw", ",", "Nf", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.623984252359764*^9, 3.623984290674432*^9}, {
   3.6239843217556863`*^9, 3.623984546280281*^9}, {3.6239847774776917`*^9, 
   3.623984804387739*^9}, {3.6239848903986907`*^9, 3.623984893926297*^9}, {
   3.6239849911624703`*^9, 3.6239849927536736`*^9}, 3.623985141617135*^9},
 FontSize->10,ExpressionUUID->"be1a2648-46eb-48c1-9068-f0011ff3011c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Nw", "\[Rule]", 
    FractionBox[
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "0", "]"}], "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], 
     RowBox[{"1", "+", "\[Eta]"}]]}], ",", 
   RowBox[{"Nf", "\[Rule]", 
    FractionBox[
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "\[Eta]"}], "-", 
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "0", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Eta]"}], ")"}]}]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "0", "]"}], "]"}], "-", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ")"}]}]]}], 
     SqrtBox[
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Eta]"}], ")"}]}]]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"g", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], 
     RowBox[{"r", "+", 
      RowBox[{"r", " ", "\[Eta]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6239849939392757`*^9},
 FontSize->10,ExpressionUUID->"7937e753-950d-4273-add8-ed8b01d70efb"]
}, Open  ]],

Cell["Looking at the normal force ", "Text",
 CellChangeTimes->{{3.6239850217697244`*^9, 
  3.6239850244685287`*^9}},ExpressionUUID->"1f36574b-8d37-4a86-9220-\
5ecb9c4106a1"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["N", "w"], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"m", " ", "g"}], 
     RowBox[{"1", "+", "\[Eta]"}]], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"2", 
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "0"], "]"}]}]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"6add8723-6d2e-47e8-9839-d43292560d53"]], \
"TextNumbered",
 CellChangeTimes->{{3.6239850255605307`*^9, 
  3.6239850433359623`*^9}},ExpressionUUID->"9530bf2e-b773-4adb-9649-\
3ffb2234187f"],

Cell[TextData[{
 "we see that it equals zero for the trivial solutions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "7aa147bd-5cd1-43a1-b58c-f4e7079da66c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "=", 
    FractionBox["\[Pi]", "2"]}], TraditionalForm]],ExpressionUUID->
  "22b4af17-50c1-41ee-b48c-1ec4e1b1b074"],
 " (when the ladder either begins flat on the floor or flat against the wall) \
or the non-trivial solution for a starting position ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "0"], "\[Element]", 
    RowBox[{"(", 
     RowBox[{"0", ",", 
      FractionBox["\[Pi]", "2"]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "e97527c8-bd78-40b1-8be2-a5c905ff442b"],
 " when "
}], "Text",
 CellChangeTimes->{{3.623985060511593*^9, 
  3.623985117717893*^9}},ExpressionUUID->"1999d791-4c3c-4630-bc97-\
021b4e511a98"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "=", 
   RowBox[{
    FractionBox["2", "3"], 
    RowBox[{"Cos", "[", 
     SubscriptBox["\[Theta]", "0"], "]"}]}]}], 
  TraditionalForm]],ExpressionUUID->"98744da9-79bb-4756-8b56-1269a593cbe6"]], \
"TextNumbered",
 CellChangeTimes->{{3.6239851189970956`*^9, 
  3.6239851248003054`*^9}},ExpressionUUID->"ac202df1-5358-44fb-be5e-\
665dabf0112f"],

Cell[TextData[{
 "Notice that although this method was more complicated, we did gain more \
insight about this problem. In particular, we now have explicit relations for \
our unknowns ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "f"], ",", 
    SubscriptBox["N", "w"], ",", 
    OverscriptBox["x", "\[DoubleDot]"], ",", 
    OverscriptBox["y", "\[DoubleDot]"], ",", 
    OverscriptBox["\[Theta]", "."], ",", 
    RowBox[{"and", " ", 
     OverscriptBox["\[Theta]", "\[DoubleDot]"]}]}], TraditionalForm]],
  ExpressionUUID->"2bf9225a-2b08-4f81-b845-cc6e2f152322"],
 " as a function of \[Theta]. \[EmptySquare] "
}], "Text",
 CellChangeTimes->{{3.623985171439788*^9, 3.623985273922368*^9}, {
  3.6239884293895874`*^9, 
  3.6239884299199886`*^9}},ExpressionUUID->"caa95975-e44d-4e4a-878b-\
72b029b349c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematica Initialization", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.6835314541013947`*^9, 3.683531462932178*^9}, {
  3.6835314987312803`*^9, 
  3.683531507976513*^9}},ExpressionUUID->"e5993305-774d-45ef-9122-\
fc2361a2f12b"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "font", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"font", "[", 
   RowBox[{"text_", ",", 
    RowBox[{"size_Integer:", "14"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"Style", "[", 
    RowBox[{"text", ",", "size", ",", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "opts"}], "]"}],
    ")"}]}]}], "Input",
 CellChangeTimes->{{3.683531489794427*^9, 3.683531507976513*^9}, {
  3.683531556976494*^9, 3.683531561081745*^9}, {3.6835316779263473`*^9, 
  3.6835317522772083`*^9}, {3.683531789894754*^9, 
  3.6835318332506204`*^9}},ExpressionUUID->"6923abc3-bf08-4690-9bb1-\
18a8e6964aab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Primary", " ", "colors", " ", "for", " ", "figures"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"colors", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "color1", ",", "color2", ",", "color3", ",", "color4", ",", "color5", 
        ",", "color6"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "10", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "5", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "6", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "9", "]"}], ",", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "7", "]"}], ",", 
          "0.2"}], "]"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Secondary", " ", "colors", " ", "for", " ", "backgrounds"}], " ",
     "*)"}], "\n", 
   RowBox[{
    RowBox[{"backgroundColors", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"backgroundColor1", ",", "backgroundColor2"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0.99, 0.97432, 0.91748], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->RGBColor[0.66, 0.6495466666666667, 0.6116533333333334],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           "RGBColor[0.99, 0.97432, 0.91748]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0.99, 0.97432, 0.91748]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0.99, 0.97432, 0.91748],
         Editable->False,
         Selectable->False], ",", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0.9, 0.9, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            
            FrameStyle->RGBColor[
             0.6000000000000001, 0.6000000000000001, 0.6000000000000001],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           "RGBColor[0.9, 0.9, 0.9]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0.9, 0.9, 0.9]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0.9, 0.9, 0.9],
         Editable->False,
         Selectable->False]}], "}"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.699496755558506*^9, 3.699496762790832*^9}, {
   3.714621579651284*^9, 3.7146215802741537`*^9}, {3.7156249195900693`*^9, 
   3.715624945469708*^9}, {3.7156331210217853`*^9, 3.7156331396703367`*^9}, {
   3.715633170335416*^9, 3.7156331707138867`*^9}, 3.7156332780685654`*^9, {
   3.715634005312585*^9, 3.715634008685453*^9}, {3.7156349165762*^9, 
   3.7156349427934823`*^9}, {3.715635000129925*^9, 3.7156350049195175`*^9}, 
   3.715967799477898*^9, 3.7164362913131905`*^9, {3.7179974722623997`*^9, 
   3.71799747791518*^9}, {3.7180000235585337`*^9, 3.7180000246717815`*^9}, 
   3.720923920836828*^9},ExpressionUUID->"835c3826-3651-485a-a189-\
f7ee8d9de639"]
}, Closed]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Notebook"], InputAliases -> {"D" -> StyleBox[
        OverscriptBox["\[Del]", "\[RightVector]"]], "d" -> StyleBox[
        RowBox[{"\[Delta]", "\[InvisibleComma]t"}]], "del" -> StyleBox[
        RowBox[{"\[CapitalDelta]", "\[InvisibleComma]"}]]}, 
    InputAutoReplacements -> {
     "`0" -> "(0)", "`1" -> "(1)", "`2" -> "(2)", "`3" -> "(3)", "`4" -> 
      "(4)", "`5" -> "(5)", "`6" -> "(6)", "`7" -> "(7)", "`8" -> "(8)", "`9" -> 
      "(9)", "sumj1n" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "j=1", "n"]], "sumj0n" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "j=0", "n"]], "sumk1n" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "k=1", "n"]], "sumk0n" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "k=0", "n"]], "sumj1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "j=1", "\[Infinity]"]], 
      "sumj0inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "j=0", "\[Infinity]"]], 
      "sumk1inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "k=1", "\[Infinity]"]], 
      "sumk0inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "k=0", "\[Infinity]"]], 
      "sumn1inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "n=1", "\[Infinity]"]], 
      "sumn0inf" -> StyleBox[
        SubsuperscriptBox["\[CapitalSigma]", "n=0", "\[Infinity]"]], 
      "prodj1n" -> StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "j=1", "n"]], "prodj0n" -> StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "j=0", "n"]], "prodk1n" -> StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "k=1", "n"]], "prodk0n" -> StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "k=0", "n"]], "prodj1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "j=1", "\[Infinity]"]], "prodj0inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "j=0", "\[Infinity]"]], "prodk1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "k=1", "\[Infinity]"]], "prodk0inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "k=0", "\[Infinity]"]], "prodn1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "n=1", "\[Infinity]"]], "prodn0inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CapitalPi]", "n=0", "\[Infinity]"]], "csumj1n" -> 
      StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "j=1", "n"]], "csumj0n" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "j=0", "n"]], "csumk1n" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "k=1", "n"]], "csumk0n" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "k=0", "n"]], "csumj1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "j=1", "\[Infinity]"]], 
      "csumj0inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "j=0", "\[Infinity]"]], 
      "csumk1inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "k=1", "\[Infinity]"]], 
      "csumk0inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "k=0", "\[Infinity]"]], 
      "csumn1inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "n=1", "\[Infinity]"]], 
      "csumn0inf" -> StyleBox[
        SubsuperscriptBox["\[CirclePlus]", "n=0", "\[Infinity]"]], "cprodj1n" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "j=1", "n"]], "cprodj0n" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "j=0", "n"]], "cprodk1n" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "k=1", "n"]], "cprodk0n" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "k=0", "n"]], "cprodj1inf" -> 
      StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "j=1", "\[Infinity]"]], 
      "cprodj0inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "j=0", "\[Infinity]"]], 
      "cprodk1inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "k=1", "\[Infinity]"]], 
      "cprodk0inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "k=0", "\[Infinity]"]], 
      "cprodn1inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "n=1", "\[Infinity]"]], 
      "cprodn0inf" -> StyleBox[
        SubsuperscriptBox["\[CircleTimes]", "n=0", "\[Infinity]"]], "bA" -> 
      StyleBox["A", FontWeight -> "Bold"], "bB" -> 
      StyleBox["B", FontWeight -> "Bold"], "bC" -> 
      StyleBox["C", FontWeight -> "Bold"], "bD" -> 
      StyleBox["D", FontWeight -> "Bold"], "bE" -> 
      StyleBox["E", FontWeight -> "Bold"], "bF" -> 
      StyleBox["F", FontWeight -> "Bold"], "bG" -> 
      StyleBox["G", FontWeight -> "Bold"], "bH" -> 
      StyleBox["H", FontWeight -> "Bold"], "bI" -> 
      StyleBox["I", FontWeight -> "Bold"], "bJ" -> 
      StyleBox["J", FontWeight -> "Bold"], "bK" -> 
      StyleBox["K", FontWeight -> "Bold"], "bL" -> 
      StyleBox["L", FontWeight -> "Bold", FontSlant -> "Plain"], "bM" -> 
      StyleBox["M", FontWeight -> "Bold"], "bN" -> 
      StyleBox["N", FontWeight -> "Bold"], "bO" -> 
      StyleBox["O", FontWeight -> "Bold"], "bP" -> 
      StyleBox["P", FontWeight -> "Bold", FontSlant -> "Plain"], "bQ" -> 
      StyleBox["Q", FontWeight -> "Bold"], "bR" -> 
      StyleBox["R", FontWeight -> "Bold"], "bS" -> 
      StyleBox["S", FontWeight -> "Bold"], "bT" -> 
      StyleBox["T", FontWeight -> "Bold"], "bU" -> 
      StyleBox["U", FontWeight -> "Bold"], "bV" -> 
      StyleBox["V", FontWeight -> "Bold"], "bW" -> 
      StyleBox["W", FontWeight -> "Bold"], "bX" -> 
      StyleBox["X", FontWeight -> "Bold"], "bY" -> 
      StyleBox["Y", FontWeight -> "Bold"], "bZ" -> 
      StyleBox["Z", FontWeight -> "Bold"], "bs" -> 
      StyleBox["s", FontWeight -> "Bold"], "bt" -> 
      StyleBox["t", FontWeight -> "Bold"], "bw" -> 
      StyleBox["w", FontWeight -> "Bold"], "bx" -> 
      StyleBox["x", FontWeight -> "Bold"], "bz" -> 
      StyleBox["z", FontWeight -> "Bold"], "QED" -> "\[EmptySquare]", "wrt" -> 
      "with respect to", "!el" -> "\[NotElement]", "SS" -> 
      "\[ScriptCapitalS]", "QQ" -> "\[ScriptCapitalQ]", "ZZ" -> 
      "\[DoubleStruckCapitalZ]", "NN" -> "\[DoubleStruckCapitalN]", "CC" -> 
      "\[DoubleStruckCapitalC]", "Cn" -> StyleBox[
        FormBox[
         SuperscriptBox["\[DoubleStruckCapitalC]", "n"], TraditionalForm]], 
      "RR" -> "\[DoubleStruckCapitalR]", "Rn" -> StyleBox[
        FormBox[
         SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]], 
      "Eahc" -> "Each", "eahc" -> "each", "taht" -> "that", "Defintiion" -> 
      "Definition", "defintiion" -> "definition", "satissfies" -> "satisfies",
       "woudl" -> "would", "vraiable" -> "variable", "deisred" -> "desired", 
      "Pritn" -> "Print", "Prtin" -> "Print", "teh" -> "the", "hte" -> "the", 
      "fo" -> "of", "ofr" -> "for", "taht" -> "that", "togehter" -> 
      "together", "wuld" -> "would", "equla" -> "equal", "roational" -> 
      "rotational", "mateiral" -> "material", "matieral" -> "material", 
      "somethign" -> "something", "alos" -> "also", "unkownw" -> "unknown", 
      "exercizing" -> "exercising", "oragnize" -> "organize", "idrection" -> 
      "direction", "variablbe" -> "variable", "varialbe" -> "variable", 
      "thte" -> "the", "chekc" -> "check", "Techincally" -> "Technically", 
      "techincally" -> "technically", "arguement" -> "argument", "grpah" -> 
      "graph", "messsages" -> "messages", "guarantess" -> "guarantees", 
      "Laurant" -> "Laurent", "algorihtm" -> "algorithm", "compelte" -> 
      "complete", "amaizng" -> "amazing", "replcae" -> "replace", 
      "Everythijng" -> "Everything", "everythijng" -> "everything", 
      "hypotenus" -> "hypotenuse", "hypoteni" -> "hypotenuses", "usu" -> "us",
       "graviational" -> "gravitational", "cancelled" -> "canceled", 
      "specifiying" -> "specifying", "characetise" -> "characterize", 
      "freefall" -> "free fall", "freefalling" -> "free falling", "freefalls" -> 
      "free falls", "gasonline" -> "gasoline", "Propogating" -> "Propagating",
       "propogating" -> "propagating", "propogate" -> "propagate", "nothign" -> 
      "nothing", "Curretn" -> "Current", "curretn" -> "current", 
      "understatnd" -> "understand"}], 
   Cell[
    StyleData["TextNumbered"], CellMargins -> {{60, 0}, {0, 0}}, 
    CellFrameLabels -> {{None, 
       Cell[
        TextData[{"(", 
          CounterBox["TextNumbered"], ")"}]]}, {None, None}}, TextAlignment -> 
    Center, LineSpacing -> {1, 3}, LanguageCategory -> "Formula", 
    SingleLetterItalics -> True, CounterIncrements -> "TextNumbered", 
    MenuSortingValue -> 10000, MenuCommandKey -> "8", FontFamily -> "Times", 
    FontSize -> 15, FontColor -> RGBColor[0.75, 0.1, 0.1]], 
   Cell[
    StyleData["Text"], 
    CellGroupingRules -> {"GroupTogetherNestedGrouping", 1000}, FontFamily -> 
    "Times", FontSize -> 14], 
   Cell[
    StyleData["SecretText"], CellMargins -> {{66, 10}, {7, 7}}, 
    CellGroupingRules -> {"GroupTogetherNestedGrouping", 2000}, 
    LineSpacing -> {1, 3}, 
    CounterIncrements -> ("Text" FontFamily -> "Times"), FontSize -> 14, 
    FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData["Item"], 
    CellGroupingRules -> {"GroupTogetherNestedGrouping", 1000}, FontFamily -> 
    "Times", FontSize -> 14], 
   Cell[
    StyleData["Subitem"], FontFamily -> "Times"], 
   Cell[
    StyleData["Section"], ShowGroupOpener -> True, WholeCellGroupOpener -> 
    True, CounterAssignments -> {{"TextNumbered", 0}, {"Subsection", 0}}], 
   Cell[
    StyleData["Subsection"], ShowGroupOpener -> True, WholeCellGroupOpener -> 
    True, ReturnCreatesNewCell -> False, CellFrameLabelMargins -> 5, 
    CounterIncrements -> "Subsection", 
    CounterAssignments -> {{"Subsubsection", 0}}], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], ShowGroupOpener -> True, 
       WholeCellGroupOpener -> True, ReturnCreatesNewCell -> False, 
       CellFrameLabelMargins -> 4, FontSize -> 18, FontColor -> 
       RGBColor[
        0.7143816281376364, 0.21776150148775464`, 0.03341725795376516]], 
      Cell[
       StyleData["Hyperlink", "Printout"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]]}, Open]]}, Visible -> False, 
  FrontEndVersion -> "11.1 for Microsoft Windows (64-bit) (April 18, 2017)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "tag14"->{
  Cell[1242829, 21187, 1299, 30, 
  38, "TextNumbered", "ExpressionUUID" -> "a597dca3-d15e-4616-
   be3d-1751f49624fd",
   CellTags->"tag14"]},
 "tag15"->{
  Cell[1244131, 21219, 1425, 34, 
  38, "TextNumbered", "ExpressionUUID" -> "4afaccb6-d0c8-4be5-
   a60d-8e3bc2e965a6",
   CellTags->"tag15"]},
 "tag12"->{
  Cell[1247202, 21309, 763, 22, 
  48, "TextNumbered", "ExpressionUUID" -> "1dbe33d4-dac7-42c2-
   a2d8-9f7abccba578",
   CellTags->"tag12"]},
 "tag13"->{
  Cell[1251324, 21440, 574, 14, 
  27, "TextNumbered", "ExpressionUUID" -> "83830b1d-f1c5-464c-b368-
   d63fc133c183",
   CellTags->"tag13"]},
 "eq1"->{
  Cell[1263220, 21721, 564, 12, 
  35, "TextNumbered", "ExpressionUUID" -> "390a8dda-
   e4e2-487d-80e7-6c7ec88a9eca",
   CellTags->"eq1"]},
 "tag16"->{
  Cell[1288534, 22319, 1358, 37, 
  43, "TextNumbered", "ExpressionUUID" -> "f84d22a3-4dce-4a2b-9cad-
   fb623cac2548",
   CellTags->"tag16"]},
 "eq2"->{
  Cell[1371046, 24359, 1060, 31, 
  56, "TextNumbered", "ExpressionUUID" -> "c46090a8-d7d1-4a27-
   a8ec-412abf664de4",
   CellTags->"eq2"]},
 "eq3"->{
  Cell[1377787, 24569, 2117, 60, 
  86, "TextNumbered", "ExpressionUUID" -> "99619dca-d57f-47c4-
   a2dc-67685e473818",
   CellTags->"eq3"],
  Cell[1381803, 24688, 1831, 49, 
  86, "TextNumbered", "ExpressionUUID" -> "516fbf7f-9fc9-4089-
   aec5-0cb8b53395c2",
   CellTags->"eq3"],
  Cell[1384449, 24763, 862, 24, 
  86, "TextNumbered", "ExpressionUUID" -> "04a7980e-6c56-4916-b981-
   c95d99583fb6",
   CellTags->{"eq3", "eq4"}]},
 "eq4"->{
  Cell[1384449, 24763, 862, 24, 
  86, "TextNumbered", "ExpressionUUID" -> "04a7980e-6c56-4916-b981-
   c95d99583fb6",
   CellTags->{"eq3", "eq4"}]},
 "eq5"->{
  Cell[1387622, 24863, 1901, 55, 
  120, "TextNumbered", "ExpressionUUID" -> "8b8bbead-5089-48f5-
   a388-07a1cacc1154",
   CellTags->"eq5"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"tag14", 1838273, 34489},
 {"tag15", 1838429, 34494},
 {"tag12", 1838585, 34499},
 {"tag13", 1838740, 34504},
 {"eq1", 1838893, 34509},
 {"tag16", 1839046, 34514},
 {"eq2", 1839200, 34519},
 {"eq3", 1839352, 34524},
 {"eq4", 1839794, 34537},
 {"eq5", 1839954, 34542}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1316, 19, 161, "Title", "ExpressionUUID" -> \
"c0b2c1cd-9e9e-43c4-a87d-99d9a29c707a"],
Cell[CellGroupData[{
Cell[1921, 45, 591, 9, 77, "Subsection", "ExpressionUUID" -> \
"8a047809-3914-410a-aa57-526936d0c0c1"],
Cell[CellGroupData[{
Cell[2537, 58, 625, 16, 47, "Text", "ExpressionUUID" -> \
"0e121cd3-5c63-4fe3-af99-cba489fe66df"],
Cell[3165, 76, 681, 20, 50, "Text", "ExpressionUUID" -> \
"95192464-c76c-479b-ad41-e3288dc69b9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3883, 101, 10950, 302, 2996, "Input", "ExpressionUUID" -> \
"3a81fff4-8dcc-4311-bd12-ce2be4c4931c"],
Cell[14836, 405, 84704, 1400, 142, "Output", "ExpressionUUID" -> \
"69675e65-3d25-44be-8d3f-b7c6a5d60d20"]
}, {2}]],
Cell[99552, 1808, 675, 20, 47, "Text", "ExpressionUUID" -> \
"02efba79-cdbc-4c66-b179-f3bc3fb5aad6"],
Cell[CellGroupData[{
Cell[100252, 1832, 11774, 332, 3534, "Input", "ExpressionUUID" -> \
"b8b312c3-2d39-4777-920b-d366ce185c8a"],
Cell[112029, 2166, 84347, 1393, 136, "Output", "ExpressionUUID" -> \
"94d267b9-89de-4ce8-8a91-f61f070a648d"]
}, {2}]],
Cell[196388, 3562, 2199, 65, 140, "Text", "ExpressionUUID" -> \
"861887d4-bddc-425d-b70b-799813211737"],
Cell[198590, 3629, 510, 15, 44, "TextNumbered", "ExpressionUUID" -> \
"82e8a406-b75e-4ca2-a212-301f0ee80f05"],
Cell[199103, 3646, 504, 15, 44, "TextNumbered", "ExpressionUUID" -> \
"0de22de2-f13a-4ade-8b92-2ef9ca983f4c"],
Cell[199610, 3663, 322, 9, 47, "Text", "ExpressionUUID" -> \
"6f355150-d74e-4de1-b793-412858d879c0"],
Cell[199935, 3674, 642, 21, 44, "TextNumbered", "ExpressionUUID" -> \
"696039e5-12d3-4bec-a8fe-01c215f4828e"],
Cell[200580, 3697, 375, 10, 47, "Text", "ExpressionUUID" -> \
"02a6ff9b-d6ff-442b-992a-85bc566aa3fe"],
Cell[200958, 3709, 663, 22, 44, "TextNumbered", "ExpressionUUID" -> \
"4e76f518-9361-46d5-b4e8-b1f96b6d09c8"],
Cell[201624, 3733, 577, 19, 47, "Text", "ExpressionUUID" -> \
"ce9852b1-8e80-4db8-a2a6-340a327408f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202238, 3757, 294, 5, 77, "Subsection", "ExpressionUUID" -> \
"e8bbac8a-7782-4661-9b4c-e1171438dc01"],
Cell[202535, 3764, 551, 11, 107, "Text", "ExpressionUUID" -> \
"bd3aa307-f4eb-4b0b-a5d4-0f472153ea80"],
Cell[CellGroupData[{
Cell[203111, 3779, 496612, 8147, 181107, "Input", "ExpressionUUID" -> \
"aa0f09de-adc7-48f4-bba6-62976105e387"],
Cell[699726, 11928, 496686, 8151, 411, "Output", "ExpressionUUID" -> \
"9736eee3-879c-41fb-a4e5-c4bcc176bd40"]
}, {2}]],
Cell[CellGroupData[{
Cell[1196446, 20084, 362, 8, 77, "Text", "ExpressionUUID" -> \
"792efd11-eb6d-47a3-b39a-88eb9e2624a7"],
Cell[1196811, 20094, 1725, 41, 167, "Text", "ExpressionUUID" -> \
"3bf560b8-4c1b-4bc0-9c70-463e2da9b830"],
Cell[1198539, 20137, 410, 8, 47, "Text", "ExpressionUUID" -> \
"7b32d620-0c9f-4268-8db5-7d4bbcf54a1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1198986, 20150, 8700, 209, 2329, "Input", "ExpressionUUID" -> \
"a890f69e-fdc9-48f3-8d65-cbfc529727bd"],
Cell[1207689, 20361, 5685, 115, 550, "Output", "ExpressionUUID" -> \
"fe9c73f0-6d99-4b3a-b735-c3f4490acba7"]
}, {2}]],
Cell[1213386, 20479, 1147, 26, 203, "Text", "ExpressionUUID" -> \
"161e79c0-db60-4848-8995-8d23dabbb03f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1214570, 20510, 215, 4, 77, "Subsection", "ExpressionUUID" -> \
"51d6b6cd-9712-4af5-b934-2fd849548e0e"],
Cell[1214788, 20516, 3388, 81, 234, "Text", "ExpressionUUID" -> \
"1d46ed77-be31-47c9-833d-0e8911afcacb"],
Cell[CellGroupData[{
Cell[1218201, 20601, 12373, 302, 6752, "Input", "ExpressionUUID" -> \
"9e6fe485-947f-4af1-8421-a715bafb6967"],
Cell[1230577, 20905, 7092, 136, 456, "Output", "ExpressionUUID" -> \
"2eaf810c-b3e4-4ef1-b5dd-56f728fb53de"]
}, {2}]],
Cell[1237681, 21044, 519, 12, 77, "Text", "ExpressionUUID" -> \
"ee7156c2-0731-47bf-9b94-19b21baaf9ea"],
Cell[1238203, 21058, 1151, 28, 27, "TextNumbered", "ExpressionUUID" -> \
"27839122-8111-4159-a58a-f7e3a61d9eb6"],
Cell[1239357, 21088, 1172, 29, 27, "TextNumbered", "ExpressionUUID" -> \
"fe669c8e-d767-41ac-856e-43dd5e30eb4e"],
Cell[CellGroupData[{
Cell[1240554, 21121, 981, 24, 80, "Text", "ExpressionUUID" -> \
"5f3af65e-9880-4369-a4a3-3e4fcc8098ad"],
Cell[1241538, 21147, 1276, 37, 90, "Text", "ExpressionUUID" -> \
"f1a5cf2f-5706-4d11-b9ac-25800a2e7504"]
}, Open  ]],
Cell[1242829, 21187, 1299, 30, 38, "TextNumbered", "ExpressionUUID" -> \
"a597dca3-d15e-4616-be3d-1751f49624fd",
 CellTags->"tag14"],
Cell[1244131, 21219, 1425, 34, 38, "TextNumbered", "ExpressionUUID" -> \
"4afaccb6-d0c8-4be5-a60d-8e3bc2e965a6",
 CellTags->"tag15"],
Cell[1245559, 21255, 327, 9, 47, "Text", "ExpressionUUID" -> \
"b4ad6bfa-d347-445c-8285-0802deddf1ed"],
Cell[1245889, 21266, 495, 14, 38, "TextNumbered", "ExpressionUUID" -> \
"6e897ea6-e600-4586-b273-75d16144d344"],
Cell[1246387, 21282, 812, 25, 62, "Text", "ExpressionUUID" -> \
"7527b73c-9f74-4265-bd3d-17736fe2833f"],
Cell[1247202, 21309, 763, 22, 48, "TextNumbered", "ExpressionUUID" -> \
"1dbe33d4-dac7-42c2-a2d8-9f7abccba578",
 CellTags->"tag12"],
Cell[1247968, 21333, 908, 26, 92, "Text", "ExpressionUUID" -> \
"dff62d9d-fe04-4b65-86ab-7d92e462bd36"],
Cell[1248879, 21361, 587, 17, 46, "TextNumbered", "ExpressionUUID" -> \
"978b2931-ea6b-4f0d-aa38-1e1d6528061c"],
Cell[1249469, 21380, 163, 3, 47, "Text", "ExpressionUUID" -> \
"f1e438cb-32ef-40d0-8837-53ca5750b330"],
Cell[1249635, 21385, 446, 13, 48, "TextNumbered", "ExpressionUUID" -> \
"15d1ead5-6461-43bc-8d1e-e6ed4c590fc6"],
Cell[1250084, 21400, 423, 11, 47, "Text", "ExpressionUUID" -> \
"24c10f1f-fa7b-41f8-94d5-d822ac89ba9e"],
Cell[1250510, 21413, 650, 20, 48, "TextNumbered", "ExpressionUUID" -> \
"2beeb04d-5a9a-4b77-94b2-fbc84c6d422a"],
Cell[1251163, 21435, 158, 3, 47, "Text", "ExpressionUUID" -> \
"9b9c3c3b-deb5-4af4-ad7c-5713a7d83143"],
Cell[1251324, 21440, 574, 14, 27, "TextNumbered", "ExpressionUUID" -> \
"83830b1d-f1c5-464c-b368-d63fc133c183",
 CellTags->"tag13"],
Cell[1251901, 21456, 1158, 31, 77, "Text", "ExpressionUUID" -> \
"0787a2d7-faf7-493b-acfc-e1e49809976f"],
Cell[CellGroupData[{
Cell[1253084, 21491, 811, 22, 308, "Input", "ExpressionUUID" -> \
"d3094927-6b9c-47e6-9d95-5383f347d4c5"],
Cell[1253898, 21515, 7480, 147, 292, "Output", "ExpressionUUID" -> \
"f7467de6-573f-42a5-b927-457b851459b8"]
}, {2}]],
Cell[1261390, 21665, 945, 29, 58, "Text", "ExpressionUUID" -> \
"3f543391-6854-431f-ae90-2c5685df17ad"],
Cell[1262338, 21696, 690, 18, 37, "TextNumbered", "ExpressionUUID" -> \
"33f7f725-7dec-4742-81a5-d7070039daa5"],
Cell[1263031, 21716, 186, 3, 47, "Text", "ExpressionUUID" -> \
"ef131489-3316-4aed-9c10-8b0ca73a723b"],
Cell[1263220, 21721, 564, 12, 35, "TextNumbered", "ExpressionUUID" -> \
"390a8dda-e4e2-487d-80e7-6c7ec88a9eca",
 CellTags->"eq1"],
Cell[1263787, 21735, 647, 20, 55, "Text", "ExpressionUUID" -> \
"487473bf-2b0a-404a-9913-457c634f85bf"],
Cell[CellGroupData[{
Cell[1264459, 21759, 12394, 296, 3494, "Input", "ExpressionUUID" -> \
"6c3be4c2-8d0c-4cf4-95eb-456528769d98"],
Cell[1276856, 22057, 6884, 133, 456, "Output", "ExpressionUUID" -> \
"ec4ccea5-30ea-44e0-9aa6-5ee25701fd6e"]
}, {2}]],
Cell[CellGroupData[{
Cell[1283774, 22195, 838, 16, 107, "Text", "ExpressionUUID" -> \
"c7fb43c6-1382-45a7-b9bc-7de3ded8b322"],
Cell[1284615, 22213, 926, 24, 47, "Text", "ExpressionUUID" -> \
"e2cdd338-f7a3-4c66-88e7-691b7216a851"]
}, Open  ]],
Cell[1285556, 22240, 1200, 29, 38, "TextNumbered", "ExpressionUUID" -> \
"74022fb6-08f8-4dd4-87cb-bdf3eefff19a"],
Cell[1286759, 22271, 1378, 34, 38, "TextNumbered", "ExpressionUUID" -> \
"25fe4828-3798-4a92-83e4-d5ae4201a018"],
Cell[1288140, 22307, 391, 10, 47, "Text", "ExpressionUUID" -> \
"9d65c817-ddde-4095-850a-04193d877817"],
Cell[1288534, 22319, 1358, 37, 43, "TextNumbered", "ExpressionUUID" -> \
"f84d22a3-4dce-4a2b-9cad-fb623cac2548",
 CellTags->"tag16"],
Cell[1289895, 22358, 1409, 37, 109, "Text", "ExpressionUUID" -> \
"02eef46a-6b08-4ddc-9122-b2afdef8a322"],
Cell[1291307, 22397, 1391, 39, 27, "TextNumbered", "ExpressionUUID" -> \
"cb42de84-e7b6-42e6-a6d1-5af9d93bc432"],
Cell[1292701, 22438, 383, 10, 47, "Text", "ExpressionUUID" -> \
"9116cc79-f941-42e7-ab22-5b9f076c88bc"],
Cell[1293087, 22450, 2382, 65, 80, "TextNumbered", "ExpressionUUID" -> \
"f220b15e-f219-4376-85a1-4191f1857c90"],
Cell[1295472, 22517, 696, 21, 66, "Text", "ExpressionUUID" -> \
"3cf5f855-3466-4145-bbda-0cc808a0e7e6"],
Cell[1296171, 22540, 2010, 54, 62, "TextNumbered", "ExpressionUUID" -> \
"02ab02fa-3fc8-4bb1-ae75-648034dd0321"],
Cell[1298184, 22596, 197, 3, 47, "Text", "ExpressionUUID" -> \
"e87ba3ad-bd50-41c7-859a-395f812ac5d2"],
Cell[1298384, 22601, 703, 19, 40, "TextNumbered", "ExpressionUUID" -> \
"b4be7776-89e5-4457-b38f-dbe846c60e27"],
Cell[1299090, 22622, 470, 11, 47, "Text", "ExpressionUUID" -> \
"6217a968-25fe-489d-b6e2-eba01a0fd2ac"],
Cell[1299563, 22635, 4120, 121, 346, "TextNumbered", "ExpressionUUID" -> \
"5271765d-fe26-4fdc-99f5-63d2c1dab97d"],
Cell[CellGroupData[{
Cell[1303708, 22760, 1478, 42, 99, "Text", "ExpressionUUID" -> \
"0a362beb-a082-4bd5-8086-23c591c51fb8"],
Cell[1305189, 22804, 2293, 62, 153, "Text", "ExpressionUUID" -> \
"58e98a6b-e3a6-4bb7-a05c-ac6c3eaceea3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1307519, 22871, 19813, 467, 5817, "Input", "ExpressionUUID" -> \
"b834874a-3ea8-4e91-b70d-71cf2dc4b747"],
Cell[1327335, 23340, 10510, 207, 492, "Output", "ExpressionUUID" -> \
"da50c8bd-9f50-4d6d-98ea-57bff25ca174"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1337891, 23553, 192, 3, 77, "Subsection", "ExpressionUUID" -> \
"61ac23a8-ce84-456b-bc88-819c515c9ae5"],
Cell[1338086, 23558, 1802, 52, 151, "Text", "ExpressionUUID" -> \
"bffd3829-a0ee-44f4-91b2-9cdaa6696e4e"],
Cell[CellGroupData[{
Cell[1339913, 23614, 21226, 523, 1961, "Input", "ExpressionUUID" -> \
"71b5109f-25de-4d0b-afe9-07c399d4ed3f"],
Cell[1361142, 24139, 7652, 151, 292, "Output", "ExpressionUUID" -> \
"0d52d45f-5d3c-4def-9b39-e627b903694e"]
}, {2}]],
Cell[1368806, 24293, 2237, 64, 137, "Text", "ExpressionUUID" -> \
"049628c9-00c9-4ab9-9314-632c71480bf2"],
Cell[1371046, 24359, 1060, 31, 56, "TextNumbered", "ExpressionUUID" -> \
"c46090a8-d7d1-4a27-a8ec-412abf664de4",
 CellTags->"eq2"],
Cell[CellGroupData[{
Cell[1372131, 24394, 1017, 30, 77, "Text", "ExpressionUUID" -> \
"85a98f87-4b94-4d54-8bd6-a259c4b43aea"],
Cell[1373151, 24426, 274, 7, 77, "Text", "ExpressionUUID" -> \
"6688724d-29da-48c3-9102-4e84c1d7808a"]
}, Open  ]],
Cell[1373440, 24436, 1887, 56, 58, "TextNumbered", "ExpressionUUID" -> \
"ad07b4e6-3586-4993-a4d5-5da703f037c8"],
Cell[CellGroupData[{
Cell[1375352, 24496, 2203, 63, 137, "Text", "ExpressionUUID" -> \
"3648d138-7ed2-454a-9240-f66627107657"],
Cell[1377558, 24561, 214, 5, 47, "Text", "ExpressionUUID" -> \
"b8b62376-7853-4447-afda-52733d31dad6"]
}, Open  ]],
Cell[1377787, 24569, 2117, 60, 86, "TextNumbered", "ExpressionUUID" -> \
"99619dca-d57f-47c4-a2dc-67685e473818",
 CellTags->"eq3"],
Cell[CellGroupData[{
Cell[1379929, 24633, 1280, 34, 119, "Text", "ExpressionUUID" -> \
"34d4c136-651a-4f6c-9641-06d3bed7916b"],
Cell[1381212, 24669, 576, 16, 47, "Text", "ExpressionUUID" -> \
"92591629-241f-4b7c-b8f8-6100fa759723"]
}, Open  ]],
Cell[1381803, 24688, 1831, 49, 86, "TextNumbered", "ExpressionUUID" -> \
"516fbf7f-9fc9-4089-aec5-0cb8b53395c2",
 CellTags->"eq3"],
Cell[1383637, 24739, 809, 22, 77, "Text", "ExpressionUUID" -> \
"d6ad0d05-711c-479b-9350-778481a17099"],
Cell[1384449, 24763, 862, 24, 86, "TextNumbered", "ExpressionUUID" -> \
"04a7980e-6c56-4916-b981-c95d99583fb6",
 CellTags->{"eq3", "eq4"}],
Cell[1385314, 24789, 155, 3, 47, "Text", "ExpressionUUID" -> \
"86845de4-a542-4ffa-84d3-02b597f43204"],
Cell[1385472, 24794, 1590, 48, 86, "TextNumbered", "ExpressionUUID" -> \
"3d5d65a0-ed3a-428c-b69f-0d21e5fd5a90"],
Cell[1387065, 24844, 554, 17, 47, "Text", "ExpressionUUID" -> \
"05427567-bb58-4e99-be97-034173eb3d42"],
Cell[1387622, 24863, 1901, 55, 120, "TextNumbered", "ExpressionUUID" -> \
"8b8bbead-5089-48f5-a388-07a1cacc1154",
 CellTags->"eq5"],
Cell[1389526, 24920, 184, 3, 47, "Text", "ExpressionUUID" -> \
"4944c112-6743-4240-98e6-0bf68d6d8214"],
Cell[CellGroupData[{
Cell[1389735, 24927, 26509, 642, 3969, "Input", "ExpressionUUID" -> \
"f93085ec-e8be-405b-802a-547bb663367e"],
Cell[1416247, 25571, 7939, 166, 296, "Output", "ExpressionUUID" -> \
"bf91bc37-2fb2-41db-b77d-e6a6cc1e9a17"]
}, {2}]],
Cell[1424198, 25740, 1291, 34, 107, "Text", "ExpressionUUID" -> \
"03946af9-1286-434f-a156-94dee6dc941b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1425526, 25779, 166, 3, 77, "Subsection", "ExpressionUUID" -> \
"57d64dea-c1a3-49dc-8184-728582a48bcc"],
Cell[1425695, 25784, 1107, 23, 137, "Text", "ExpressionUUID" -> \
"2c9898f3-8296-4995-9730-c0bfef59bf02"],
Cell[CellGroupData[{
Cell[1426827, 25811, 17859, 412, 3603, "Input", "ExpressionUUID" -> \
"7567159e-1fa3-4db0-b014-21cc376bd2f7"],
Cell[1444689, 26225, 2394, 54, 434, "Output", "ExpressionUUID" -> \
"26cc0587-9998-4cbc-a15b-46786d256a9d"]
}, {2}]],
Cell[1447095, 26282, 1589, 39, 179, "Text", "ExpressionUUID" -> \
"cf7471fa-bd44-4edd-b0a2-7b4e27a5ac19"],
Cell[CellGroupData[{
Cell[1448709, 26325, 31030, 710, 3481, "Input", "ExpressionUUID" -> \
"5172a8bf-4587-4372-a035-4d3ba2bd5707"],
Cell[1479742, 27037, 12330, 249, 650, "Output", "ExpressionUUID" -> \
"486d63c3-4df9-470e-91a2-6ef140db60b1"]
}, {2}]],
Cell[CellGroupData[{
Cell[1492106, 27291, 1056, 23, 110, "Text", "ExpressionUUID" -> \
"886de185-60e3-48dd-8928-049a0ec301f7"],
Cell[1493165, 27316, 2457, 56, 175, "Text", "ExpressionUUID" -> \
"ad29f019-f7f9-467a-88ce-7133a419baca"],
Cell[1495625, 27374, 194, 3, 47, "Text", "ExpressionUUID" -> \
"5868801b-4d83-4030-a2a1-e405e81a03f5"]
}, Open  ]],
Cell[1495834, 27380, 890, 26, 40, "TextNumbered", "ExpressionUUID" -> \
"c08b6561-5a4d-41bf-bcf3-faf63449684d"],
Cell[1496727, 27408, 906, 25, 85, "Text", "ExpressionUUID" -> \
"d945df42-5195-403e-a966-6a42c2dd591a"],
Cell[1497636, 27435, 634, 18, 38, "TextNumbered", "ExpressionUUID" -> \
"9fec84ca-3579-4889-947a-c7798689d5b8"],
Cell[1498273, 27455, 702, 20, 47, "TextNumbered", "ExpressionUUID" -> \
"815daa78-0927-4aea-865f-e7748ef9ae93"],
Cell[1498978, 27477, 185, 3, 47, "Text", "ExpressionUUID" -> \
"b65f4780-7dc8-414b-a0a0-ba312a04582d"],
Cell[1499166, 27482, 752, 21, 27, "TextNumbered", "ExpressionUUID" -> \
"45bdc38f-51e5-4ab8-8b22-d72d67d56c63"],
Cell[1499921, 27505, 1484, 37, 107, "Text", "ExpressionUUID" -> \
"c258f8dd-7c0b-490e-8504-01a84d9ebd6a"],
Cell[CellGroupData[{
Cell[1501430, 27546, 12820, 336, 4595, "Input", "ExpressionUUID" -> \
"55e7f470-409b-4bd1-8f20-0dd46a2f89c6"],
Cell[1514253, 27884, 77589, 1438, 302, "Output", "ExpressionUUID" -> \
"7c631d4b-8fd4-4b0a-8811-dfc92b03c1fc"]
}, {2}]],
Cell[1591854, 29325, 1754, 43, 150, "Text", "ExpressionUUID" -> \
"c6ea90a7-3f6c-4742-9e46-e42726438b62"],
Cell[1593611, 29370, 2132, 58, 130, "TextNumbered", "ExpressionUUID" -> \
"61107158-96a4-4186-9fd3-6feebe6d1e46"],
Cell[1595746, 29430, 793, 23, 79, "Text", "ExpressionUUID" -> \
"3d11a248-6fda-4f65-9f4c-e87955705275"],
Cell[1596542, 29455, 435, 12, 38, "TextNumbered", "ExpressionUUID" -> \
"21221331-caf0-4eaf-90be-3e2bcc799cd7"],
Cell[CellGroupData[{
Cell[1597002, 29471, 869, 19, 89, "Text", "ExpressionUUID" -> \
"f80b98eb-cf2d-48c7-98b9-98d52b01bab8"],
Cell[1597874, 29492, 396, 8, 47, "Text", "ExpressionUUID" -> \
"1298e56a-b0cc-48d2-bc8c-735e60c6e4da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1598307, 29505, 41254, 925, 8739, "Input", "ExpressionUUID" -> \
"ca2490fa-e0d1-4073-8070-88ce87163a80"],
Cell[1639564, 30432, 46391, 836, 616, "Output", "ExpressionUUID" -> \
"5b34dad9-d03a-4e3b-a5a8-3580de79b8c3"]
}, {2}]],
Cell[1685967, 31271, 811, 20, 77, "Text", "ExpressionUUID" -> \
"169c2385-892a-448a-b70d-bd3548c0d019"],
Cell[CellGroupData[{
Cell[1686803, 31295, 24397, 613, 9844, "Input", "ExpressionUUID" -> \
"07a35213-370c-4a34-85ff-9aea11a9b829"],
Cell[1711203, 31910, 92318, 1707, 302, "Output", "ExpressionUUID" -> \
"9c87b3bc-c03f-48a1-a595-65608b1305b5"]
}, {2}]],
Cell[1803533, 33620, 475, 10, 77, "Text", "ExpressionUUID" -> \
"6ad0a98e-f3aa-48dd-991a-e8547297355f"],
Cell[1804011, 33632, 350, 9, 27, "TextNumbered", "ExpressionUUID" -> \
"c796e094-b559-4be4-8976-85484e6fdbed"],
Cell[1804364, 33643, 350, 9, 27, "TextNumbered", "ExpressionUUID" -> \
"d39eef72-95d2-4c00-8ec6-e68728dcef94"],
Cell[1804717, 33654, 286, 7, 47, "Text", "ExpressionUUID" -> \
"652520ba-788c-417a-abba-606ccb741967"],
Cell[1805006, 33663, 665, 18, 32, "TextNumbered", "ExpressionUUID" -> \
"d863c2e4-7bfb-4098-9c3b-4e0defcb8504"],
Cell[1805674, 33683, 764, 19, 32, "TextNumbered", "ExpressionUUID" -> \
"741e6542-40ea-4ab9-98da-4575b51823ec"],
Cell[1806441, 33704, 1101, 27, 80, "Text", "ExpressionUUID" -> \
"d700bea1-99d6-44ea-9d7b-720e58aa19fb"],
Cell[1807545, 33733, 622, 13, 27, "TextNumbered", "ExpressionUUID" -> \
"c975aa2f-5fbe-4ee8-a38a-b669828105dd"],
Cell[1808170, 33748, 672, 15, 30, "TextNumbered", "ExpressionUUID" -> \
"d8cec11e-6aed-4a61-8e88-b6bf5aee6e63"],
Cell[1808845, 33765, 1062, 24, 33, "TextNumbered", "ExpressionUUID" -> \
"82dc8d01-3e99-4080-93ea-6b91077ea9b8"],
Cell[1809910, 33791, 791, 19, 84, "Text", "ExpressionUUID" -> \
"6bd3c95d-389d-41b1-89e2-600eb827ff20"],
Cell[1810704, 33812, 890, 26, 40, "TextNumbered", "ExpressionUUID" -> \
"cb87768a-074f-453b-ac8f-1a10fbc1d345"],
Cell[CellGroupData[{
Cell[1811619, 33842, 3939, 106, 356, "Input", "ExpressionUUID" -> \
"be1a2648-46eb-48c1-9068-f0011ff3011c"],
Cell[1815561, 33950, 2224, 66, 123, "Output", "ExpressionUUID" -> \
"7937e753-950d-4273-add8-ed8b01d70efb"]
}, Open  ]],
Cell[1817800, 34019, 174, 3, 47, "Text", "ExpressionUUID" -> \
"1f36574b-8d37-4a86-9220-5ecb9c4106a1"],
Cell[1817977, 34024, 669, 20, 38, "TextNumbered", "ExpressionUUID" -> \
"9530bf2e-b773-4adb-9649-3ffb2234187f"],
Cell[1818649, 34046, 923, 26, 96, "Text", "ExpressionUUID" -> \
"1999d791-4c3c-4630-bc97-021b4e511a98"],
Cell[1819575, 34074, 435, 12, 38, "TextNumbered", "ExpressionUUID" -> \
"ac202df1-5358-44fb-be5e-665dabf0112f"],
Cell[1820013, 34088, 820, 20, 84, "Text", "ExpressionUUID" -> \
"caa95975-e44d-4e4a-878b-72b029b349c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1820870, 34113, 252, 5, 113, "Section", "ExpressionUUID" -> \
"e5993305-774d-45ef-9122-fc2361a2f12b",
 InitializationGroup->True],
Cell[1821125, 34120, 665, 15, 201, "Input", "ExpressionUUID" -> \
"6923abc3-bf08-4690-9bb1-18a8e6964aab"],
Cell[1821793, 34137, 5653, 138, 508, "Input", "ExpressionUUID" -> \
"835c3826-3651-485a-a189-f7ee8d9de639"]
}, Closed]]
}, Open  ]]
}
]
*)

